/*!
  * Bootstrap v5.3.2 (https://getbootstrap.com/)
  * Copyright 2011-2023 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */(function(b,ei){typeof exports=="object"&&typeof module<"u"?module.exports=ei():typeof define=="function"&&define.amd?define(ei):(b=typeof globalThis<"u"?globalThis:b||self).bootstrap=ei()})(this,function(){"use strict";const b=new Map,ei={set(S,u,_){b.has(S)||b.set(S,new Map);const w=b.get(S);w.has(u)||w.size===0?w.set(u,_):console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(w.keys())[0]}.`)},get:(S,u)=>b.has(S)&&b.get(S).get(u)||null,remove(S,u){if(!b.has(S))return;const _=b.get(S);_.delete(u),_.size===0&&b.delete(S)}},Co="transitionend",ac=S=>(S&&window.CSS&&window.CSS.escape&&(S=S.replace(/#([^\s"#']+)/g,(u,_)=>`#${CSS.escape(_)}`)),S),oc=S=>{S.dispatchEvent(new Event(Co))},vn=S=>!(!S||typeof S!="object")&&(S.jquery!==void 0&&(S=S[0]),S.nodeType!==void 0),On=S=>vn(S)?S.jquery?S[0]:S:typeof S=="string"&&S.length>0?document.querySelector(ac(S)):null,Rr=S=>{if(!vn(S)||S.getClientRects().length===0)return!1;const u=getComputedStyle(S).getPropertyValue("visibility")==="visible",_=S.closest("details:not([open])");if(!_)return u;if(_!==S){const w=S.closest("summary");if(w&&w.parentNode!==_||w===null)return!1}return u},Fn=S=>!S||S.nodeType!==Node.ELEMENT_NODE||!!S.classList.contains("disabled")||(S.disabled!==void 0?S.disabled:S.hasAttribute("disabled")&&S.getAttribute("disabled")!=="false"),lc=S=>{if(!document.documentElement.attachShadow)return null;if(typeof S.getRootNode=="function"){const u=S.getRootNode();return u instanceof ShadowRoot?u:null}return S instanceof ShadowRoot?S:S.parentNode?lc(S.parentNode):null},wa=()=>{},As=S=>{S.offsetHeight},cc=()=>window.jQuery&&!document.body.hasAttribute("data-bs-no-jquery")?window.jQuery:null,Ro=[],Ai=()=>document.documentElement.dir==="rtl",Ci=S=>{var u;u=()=>{const _=cc();if(_){const w=S.NAME,B=_.fn[w];_.fn[w]=S.jQueryInterface,_.fn[w].Constructor=S,_.fn[w].noConflict=()=>(_.fn[w]=B,S.jQueryInterface)}},document.readyState==="loading"?(Ro.length||document.addEventListener("DOMContentLoaded",()=>{for(const _ of Ro)_()}),Ro.push(u)):u()},hi=(S,u=[],_=S)=>typeof S=="function"?S(...u):_,hc=(S,u,_=!0)=>{if(!_)return void hi(S);const w=(j=>{if(!j)return 0;let{transitionDuration:re,transitionDelay:pe}=window.getComputedStyle(j);const Me=Number.parseFloat(re),we=Number.parseFloat(pe);return Me||we?(re=re.split(",")[0],pe=pe.split(",")[0],1e3*(Number.parseFloat(re)+Number.parseFloat(pe))):0})(u)+5;let B=!1;const F=({target:j})=>{j===u&&(B=!0,u.removeEventListener(Co,F),hi(S))};u.addEventListener(Co,F),setTimeout(()=>{B||oc(u)},w)},Lo=(S,u,_,w)=>{const B=S.length;let F=S.indexOf(u);return F===-1?!_&&w?S[B-1]:S[0]:(F+=_?1:-1,w&&(F=(F+B)%B),S[Math.max(0,Math.min(F,B-1))])},Ea=/[^.]*(?=\..*)\.|.*/,Po=/\..*/,qh=/::\d+$/,Io={};let uc=1;const dc={mouseenter:"mouseover",mouseleave:"mouseout"},Yh=new Set(["click","dblclick","mouseup","mousedown","contextmenu","mousewheel","DOMMouseScroll","mouseover","mouseout","mousemove","selectstart","selectend","keydown","keypress","keyup","orientationchange","touchstart","touchmove","touchend","touchcancel","pointerdown","pointermove","pointerup","pointerleave","pointercancel","gesturestart","gesturechange","gestureend","focus","blur","change","reset","select","submit","focusin","focusout","load","unload","beforeunload","resize","move","DOMContentLoaded","readystatechange","error","abort","scroll"]);function pc(S,u){return u&&`${u}::${uc++}`||S.uidEvent||uc++}function mc(S){const u=pc(S);return S.uidEvent=u,Io[u]=Io[u]||{},Io[u]}function fc(S,u,_=null){return Object.values(S).find(w=>w.callable===u&&w.delegationSelector===_)}function gc(S,u,_){const w=typeof u=="string",B=w?_:u||_;let F=vc(S);return Yh.has(F)||(F=S),[w,B,F]}function _c(S,u,_,w,B){if(typeof u!="string"||!S)return;let[F,j,re]=gc(u,_,w);u in dc&&(j=(He=>function(Fe){if(!Fe.relatedTarget||Fe.relatedTarget!==Fe.delegateTarget&&!Fe.delegateTarget.contains(Fe.relatedTarget))return He.call(this,Fe)})(j));const pe=mc(S),Me=pe[re]||(pe[re]={}),we=fc(Me,j,F?_:null);if(we)return void(we.oneOff=we.oneOff&&B);const ge=pc(j,u.replace(Ea,"")),Ze=F?function(Ie,He,Fe){return function Ge(_t){const bt=Ie.querySelectorAll(He);for(let{target:Ke}=_t;Ke&&Ke!==this;Ke=Ke.parentNode)for(const ct of bt)if(ct===Ke)return Uo(_t,{delegateTarget:Ke}),Ge.oneOff&&he.off(Ie,_t.type,He,Fe),Fe.apply(Ke,[_t])}}(S,_,j):function(Ie,He){return function Fe(Ge){return Uo(Ge,{delegateTarget:Ie}),Fe.oneOff&&he.off(Ie,Ge.type,He),He.apply(Ie,[Ge])}}(S,j);Ze.delegationSelector=F?_:null,Ze.callable=j,Ze.oneOff=B,Ze.uidEvent=ge,Me[ge]=Ze,S.addEventListener(re,Ze,F)}function Do(S,u,_,w,B){const F=fc(u[_],w,B);F&&(S.removeEventListener(_,F,!!B),delete u[_][F.uidEvent])}function Zh(S,u,_,w){const B=u[_]||{};for(const[F,j]of Object.entries(B))F.includes(w)&&Do(S,u,_,j.callable,j.delegationSelector)}function vc(S){return S=S.replace(Po,""),dc[S]||S}const he={on(S,u,_,w){_c(S,u,_,w,!1)},one(S,u,_,w){_c(S,u,_,w,!0)},off(S,u,_,w){if(typeof u!="string"||!S)return;const[B,F,j]=gc(u,_,w),re=j!==u,pe=mc(S),Me=pe[j]||{},we=u.startsWith(".");if(F===void 0){if(we)for(const ge of Object.keys(pe))Zh(S,pe,ge,u.slice(1));for(const[ge,Ze]of Object.entries(Me)){const Ie=ge.replace(qh,"");re&&!u.includes(Ie)||Do(S,pe,j,Ze.callable,Ze.delegationSelector)}}else{if(!Object.keys(Me).length)return;Do(S,pe,j,F,B?_:null)}},trigger(S,u,_){if(typeof u!="string"||!S)return null;const w=cc();let B=null,F=!0,j=!0,re=!1;u!==vc(u)&&w&&(B=w.Event(u,_),w(S).trigger(B),F=!B.isPropagationStopped(),j=!B.isImmediatePropagationStopped(),re=B.isDefaultPrevented());const pe=Uo(new Event(u,{bubbles:F,cancelable:!0}),_);return re&&pe.preventDefault(),j&&S.dispatchEvent(pe),pe.defaultPrevented&&B&&B.preventDefault(),pe}};function Uo(S,u={}){for(const[_,w]of Object.entries(u))try{S[_]=w}catch{Object.defineProperty(S,_,{configurable:!0,get:()=>w})}return S}function yc(S){if(S==="true")return!0;if(S==="false")return!1;if(S===Number(S).toString())return Number(S);if(S===""||S==="null")return null;if(typeof S!="string")return S;try{return JSON.parse(decodeURIComponent(S))}catch{return S}}function No(S){return S.replace(/[A-Z]/g,u=>`-${u.toLowerCase()}`)}const yn={setDataAttribute(S,u,_){S.setAttribute(`data-bs-${No(u)}`,_)},removeDataAttribute(S,u){S.removeAttribute(`data-bs-${No(u)}`)},getDataAttributes(S){if(!S)return{};const u={},_=Object.keys(S.dataset).filter(w=>w.startsWith("bs")&&!w.startsWith("bsConfig"));for(const w of _){let B=w.replace(/^bs/,"");B=B.charAt(0).toLowerCase()+B.slice(1,B.length),u[B]=yc(S.dataset[w])}return u},getDataAttribute:(S,u)=>yc(S.getAttribute(`data-bs-${No(u)}`))};class Cs{static get Default(){return{}}static get DefaultType(){return{}}static get NAME(){throw new Error('You have to implement the static method "NAME", for each component!')}_getConfig(u){return u=this._mergeConfigObj(u),u=this._configAfterMerge(u),this._typeCheckConfig(u),u}_configAfterMerge(u){return u}_mergeConfigObj(u,_){const w=vn(_)?yn.getDataAttribute(_,"config"):{};return{...this.constructor.Default,...typeof w=="object"?w:{},...vn(_)?yn.getDataAttributes(_):{},...typeof u=="object"?u:{}}}_typeCheckConfig(u,_=this.constructor.DefaultType){for(const[B,F]of Object.entries(_)){const j=u[B],re=vn(j)?"element":(w=j)==null?`${w}`:Object.prototype.toString.call(w).match(/\s([a-z]+)/i)[1].toLowerCase();if(!new RegExp(F).test(re))throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option "${B}" provided type "${re}" but expected type "${F}".`)}var w}}class Ni extends Cs{constructor(u,_){super(),(u=On(u))&&(this._element=u,this._config=this._getConfig(_),ei.set(this._element,this.constructor.DATA_KEY,this))}dispose(){ei.remove(this._element,this.constructor.DATA_KEY),he.off(this._element,this.constructor.EVENT_KEY);for(const u of Object.getOwnPropertyNames(this))this[u]=null}_queueCallback(u,_,w=!0){hc(u,_,w)}_getConfig(u){return u=this._mergeConfigObj(u,this._element),u=this._configAfterMerge(u),this._typeCheckConfig(u),u}static getInstance(u){return ei.get(On(u),this.DATA_KEY)}static getOrCreateInstance(u,_={}){return this.getInstance(u)||new this(u,typeof _=="object"?_:null)}static get VERSION(){return"5.3.2"}static get DATA_KEY(){return`bs.${this.NAME}`}static get EVENT_KEY(){return`.${this.DATA_KEY}`}static eventName(u){return`${u}${this.EVENT_KEY}`}}const Oo=S=>{let u=S.getAttribute("data-bs-target");if(!u||u==="#"){let _=S.getAttribute("href");if(!_||!_.includes("#")&&!_.startsWith("."))return null;_.includes("#")&&!_.startsWith("#")&&(_=`#${_.split("#")[1]}`),u=_&&_!=="#"?ac(_.trim()):null}return u},Re={find:(S,u=document.documentElement)=>[].concat(...Element.prototype.querySelectorAll.call(u,S)),findOne:(S,u=document.documentElement)=>Element.prototype.querySelector.call(u,S),children:(S,u)=>[].concat(...S.children).filter(_=>_.matches(u)),parents(S,u){const _=[];let w=S.parentNode.closest(u);for(;w;)_.push(w),w=w.parentNode.closest(u);return _},prev(S,u){let _=S.previousElementSibling;for(;_;){if(_.matches(u))return[_];_=_.previousElementSibling}return[]},next(S,u){let _=S.nextElementSibling;for(;_;){if(_.matches(u))return[_];_=_.nextElementSibling}return[]},focusableChildren(S){const u=["a","button","input","textarea","select","details","[tabindex]",'[contenteditable="true"]'].map(_=>`${_}:not([tabindex^="-"])`).join(",");return this.find(u,S).filter(_=>!Fn(_)&&Rr(_))},getSelectorFromElement(S){const u=Oo(S);return u&&Re.findOne(u)?u:null},getElementFromSelector(S){const u=Oo(S);return u?Re.findOne(u):null},getMultipleElementsFromSelector(S){const u=Oo(S);return u?Re.find(u):[]}},Ta=(S,u="hide")=>{const _=`click.dismiss${S.EVENT_KEY}`,w=S.NAME;he.on(document,_,`[data-bs-dismiss="${w}"]`,function(B){if(["A","AREA"].includes(this.tagName)&&B.preventDefault(),Fn(this))return;const F=Re.getElementFromSelector(this)||this.closest(`.${w}`);S.getOrCreateInstance(F)[u]()})},xc=".bs.alert",Jh=`close${xc}`,$h=`closed${xc}`;class Rs extends Ni{static get NAME(){return"alert"}close(){if(he.trigger(this._element,Jh).defaultPrevented)return;this._element.classList.remove("show");const u=this._element.classList.contains("fade");this._queueCallback(()=>this._destroyElement(),this._element,u)}_destroyElement(){this._element.remove(),he.trigger(this._element,$h),this.dispose()}static jQueryInterface(u){return this.each(function(){const _=Rs.getOrCreateInstance(this);if(typeof u=="string"){if(_[u]===void 0||u.startsWith("_")||u==="constructor")throw new TypeError(`No method named "${u}"`);_[u](this)}})}}Ta(Rs,"close"),Ci(Rs);const bc='[data-bs-toggle="button"]';class Ls extends Ni{static get NAME(){return"button"}toggle(){this._element.setAttribute("aria-pressed",this._element.classList.toggle("active"))}static jQueryInterface(u){return this.each(function(){const _=Ls.getOrCreateInstance(this);u==="toggle"&&_[u]()})}}he.on(document,"click.bs.button.data-api",bc,S=>{S.preventDefault();const u=S.target.closest(bc);Ls.getOrCreateInstance(u).toggle()}),Ci(Ls);const Lr=".bs.swipe",Kh=`touchstart${Lr}`,Qh=`touchmove${Lr}`,eu=`touchend${Lr}`,tu=`pointerdown${Lr}`,iu=`pointerup${Lr}`,nu={endCallback:null,leftCallback:null,rightCallback:null},ru={endCallback:"(function|null)",leftCallback:"(function|null)",rightCallback:"(function|null)"};class Aa extends Cs{constructor(u,_){super(),this._element=u,u&&Aa.isSupported()&&(this._config=this._getConfig(_),this._deltaX=0,this._supportPointerEvents=!!window.PointerEvent,this._initEvents())}static get Default(){return nu}static get DefaultType(){return ru}static get NAME(){return"swipe"}dispose(){he.off(this._element,Lr)}_start(u){this._supportPointerEvents?this._eventIsPointerPenTouch(u)&&(this._deltaX=u.clientX):this._deltaX=u.touches[0].clientX}_end(u){this._eventIsPointerPenTouch(u)&&(this._deltaX=u.clientX-this._deltaX),this._handleSwipe(),hi(this._config.endCallback)}_move(u){this._deltaX=u.touches&&u.touches.length>1?0:u.touches[0].clientX-this._deltaX}_handleSwipe(){const u=Math.abs(this._deltaX);if(u<=40)return;const _=u/this._deltaX;this._deltaX=0,_&&hi(_>0?this._config.rightCallback:this._config.leftCallback)}_initEvents(){this._supportPointerEvents?(he.on(this._element,tu,u=>this._start(u)),he.on(this._element,iu,u=>this._end(u)),this._element.classList.add("pointer-event")):(he.on(this._element,Kh,u=>this._start(u)),he.on(this._element,Qh,u=>this._move(u)),he.on(this._element,eu,u=>this._end(u)))}_eventIsPointerPenTouch(u){return this._supportPointerEvents&&(u.pointerType==="pen"||u.pointerType==="touch")}static isSupported(){return"ontouchstart"in document.documentElement||navigator.maxTouchPoints>0}}const Bn=".bs.carousel",Mc=".data-api",Ps="next",Pr="prev",Ir="left",Ca="right",su=`slide${Bn}`,Fo=`slid${Bn}`,au=`keydown${Bn}`,ou=`mouseenter${Bn}`,lu=`mouseleave${Bn}`,cu=`dragstart${Bn}`,hu=`load${Bn}${Mc}`,uu=`click${Bn}${Mc}`,Sc="carousel",Ra="active",wc=".active",Ec=".carousel-item",du=wc+Ec,pu={ArrowLeft:Ca,ArrowRight:Ir},mu={interval:5e3,keyboard:!0,pause:"hover",ride:!1,touch:!0,wrap:!0},fu={interval:"(number|boolean)",keyboard:"boolean",pause:"(string|boolean)",ride:"(boolean|string)",touch:"boolean",wrap:"boolean"};class Dr extends Ni{constructor(u,_){super(u,_),this._interval=null,this._activeElement=null,this._isSliding=!1,this.touchTimeout=null,this._swipeHelper=null,this._indicatorsElement=Re.findOne(".carousel-indicators",this._element),this._addEventListeners(),this._config.ride===Sc&&this.cycle()}static get Default(){return mu}static get DefaultType(){return fu}static get NAME(){return"carousel"}next(){this._slide(Ps)}nextWhenVisible(){!document.hidden&&Rr(this._element)&&this.next()}prev(){this._slide(Pr)}pause(){this._isSliding&&oc(this._element),this._clearInterval()}cycle(){this._clearInterval(),this._updateInterval(),this._interval=setInterval(()=>this.nextWhenVisible(),this._config.interval)}_maybeEnableCycle(){this._config.ride&&(this._isSliding?he.one(this._element,Fo,()=>this.cycle()):this.cycle())}to(u){const _=this._getItems();if(u>_.length-1||u<0)return;if(this._isSliding)return void he.one(this._element,Fo,()=>this.to(u));const w=this._getItemIndex(this._getActive());if(w===u)return;const B=u>w?Ps:Pr;this._slide(B,_[u])}dispose(){this._swipeHelper&&this._swipeHelper.dispose(),super.dispose()}_configAfterMerge(u){return u.defaultInterval=u.interval,u}_addEventListeners(){this._config.keyboard&&he.on(this._element,au,u=>this._keydown(u)),this._config.pause==="hover"&&(he.on(this._element,ou,()=>this.pause()),he.on(this._element,lu,()=>this._maybeEnableCycle())),this._config.touch&&Aa.isSupported()&&this._addTouchEventListeners()}_addTouchEventListeners(){for(const _ of Re.find(".carousel-item img",this._element))he.on(_,cu,w=>w.preventDefault());const u={leftCallback:()=>this._slide(this._directionToOrder(Ir)),rightCallback:()=>this._slide(this._directionToOrder(Ca)),endCallback:()=>{this._config.pause==="hover"&&(this.pause(),this.touchTimeout&&clearTimeout(this.touchTimeout),this.touchTimeout=setTimeout(()=>this._maybeEnableCycle(),500+this._config.interval))}};this._swipeHelper=new Aa(this._element,u)}_keydown(u){if(/input|textarea/i.test(u.target.tagName))return;const _=pu[u.key];_&&(u.preventDefault(),this._slide(this._directionToOrder(_)))}_getItemIndex(u){return this._getItems().indexOf(u)}_setActiveIndicatorElement(u){if(!this._indicatorsElement)return;const _=Re.findOne(wc,this._indicatorsElement);_.classList.remove(Ra),_.removeAttribute("aria-current");const w=Re.findOne(`[data-bs-slide-to="${u}"]`,this._indicatorsElement);w&&(w.classList.add(Ra),w.setAttribute("aria-current","true"))}_updateInterval(){const u=this._activeElement||this._getActive();if(!u)return;const _=Number.parseInt(u.getAttribute("data-bs-interval"),10);this._config.interval=_||this._config.defaultInterval}_slide(u,_=null){if(this._isSliding)return;const w=this._getActive(),B=u===Ps,F=_||Lo(this._getItems(),w,B,this._config.wrap);if(F===w)return;const j=this._getItemIndex(F),re=ge=>he.trigger(this._element,ge,{relatedTarget:F,direction:this._orderToDirection(u),from:this._getItemIndex(w),to:j});if(re(su).defaultPrevented||!w||!F)return;const pe=!!this._interval;this.pause(),this._isSliding=!0,this._setActiveIndicatorElement(j),this._activeElement=F;const Me=B?"carousel-item-start":"carousel-item-end",we=B?"carousel-item-next":"carousel-item-prev";F.classList.add(we),As(F),w.classList.add(Me),F.classList.add(Me),this._queueCallback(()=>{F.classList.remove(Me,we),F.classList.add(Ra),w.classList.remove(Ra,we,Me),this._isSliding=!1,re(Fo)},w,this._isAnimated()),pe&&this.cycle()}_isAnimated(){return this._element.classList.contains("slide")}_getActive(){return Re.findOne(du,this._element)}_getItems(){return Re.find(Ec,this._element)}_clearInterval(){this._interval&&(clearInterval(this._interval),this._interval=null)}_directionToOrder(u){return Ai()?u===Ir?Pr:Ps:u===Ir?Ps:Pr}_orderToDirection(u){return Ai()?u===Pr?Ir:Ca:u===Pr?Ca:Ir}static jQueryInterface(u){return this.each(function(){const _=Dr.getOrCreateInstance(this,u);if(typeof u!="number"){if(typeof u=="string"){if(_[u]===void 0||u.startsWith("_")||u==="constructor")throw new TypeError(`No method named "${u}"`);_[u]()}}else _.to(u)})}}he.on(document,uu,"[data-bs-slide], [data-bs-slide-to]",function(S){const u=Re.getElementFromSelector(this);if(!u||!u.classList.contains(Sc))return;S.preventDefault();const _=Dr.getOrCreateInstance(u),w=this.getAttribute("data-bs-slide-to");return w?(_.to(w),void _._maybeEnableCycle()):yn.getDataAttribute(this,"slide")==="next"?(_.next(),void _._maybeEnableCycle()):(_.prev(),void _._maybeEnableCycle())}),he.on(window,hu,()=>{const S=Re.find('[data-bs-ride="carousel"]');for(const u of S)Dr.getOrCreateInstance(u)}),Ci(Dr);const Is=".bs.collapse",gu=`show${Is}`,_u=`shown${Is}`,vu=`hide${Is}`,yu=`hidden${Is}`,xu=`click${Is}.data-api`,Bo="show",Ur="collapse",La="collapsing",bu=`:scope .${Ur} .${Ur}`,ui='[data-bs-toggle="collapse"]',Dt={parent:null,toggle:!0},Oi={parent:"(null|element)",toggle:"boolean"};class Qi extends Ni{constructor(u,_){super(u,_),this._isTransitioning=!1,this._triggerArray=[];const w=Re.find(ui);for(const B of w){const F=Re.getSelectorFromElement(B),j=Re.find(F).filter(re=>re===this._element);F!==null&&j.length&&this._triggerArray.push(B)}this._initializeChildren(),this._config.parent||this._addAriaAndCollapsedClass(this._triggerArray,this._isShown()),this._config.toggle&&this.toggle()}static get Default(){return Dt}static get DefaultType(){return Oi}static get NAME(){return"collapse"}toggle(){this._isShown()?this.hide():this.show()}show(){if(this._isTransitioning||this._isShown())return;let u=[];if(this._config.parent&&(u=this._getFirstLevelChildren(".collapse.show, .collapse.collapsing").filter(B=>B!==this._element).map(B=>Qi.getOrCreateInstance(B,{toggle:!1}))),u.length&&u[0]._isTransitioning||he.trigger(this._element,gu).defaultPrevented)return;for(const B of u)B.hide();const _=this._getDimension();this._element.classList.remove(Ur),this._element.classList.add(La),this._element.style[_]=0,this._addAriaAndCollapsedClass(this._triggerArray,!0),this._isTransitioning=!0;const w=`scroll${_[0].toUpperCase()+_.slice(1)}`;this._queueCallback(()=>{this._isTransitioning=!1,this._element.classList.remove(La),this._element.classList.add(Ur,Bo),this._element.style[_]="",he.trigger(this._element,_u)},this._element,!0),this._element.style[_]=`${this._element[w]}px`}hide(){if(this._isTransitioning||!this._isShown()||he.trigger(this._element,vu).defaultPrevented)return;const u=this._getDimension();this._element.style[u]=`${this._element.getBoundingClientRect()[u]}px`,As(this._element),this._element.classList.add(La),this._element.classList.remove(Ur,Bo);for(const _ of this._triggerArray){const w=Re.getElementFromSelector(_);w&&!this._isShown(w)&&this._addAriaAndCollapsedClass([_],!1)}this._isTransitioning=!0,this._element.style[u]="",this._queueCallback(()=>{this._isTransitioning=!1,this._element.classList.remove(La),this._element.classList.add(Ur),he.trigger(this._element,yu)},this._element,!0)}_isShown(u=this._element){return u.classList.contains(Bo)}_configAfterMerge(u){return u.toggle=!!u.toggle,u.parent=On(u.parent),u}_getDimension(){return this._element.classList.contains("collapse-horizontal")?"width":"height"}_initializeChildren(){if(!this._config.parent)return;const u=this._getFirstLevelChildren(ui);for(const _ of u){const w=Re.getElementFromSelector(_);w&&this._addAriaAndCollapsedClass([_],this._isShown(w))}}_getFirstLevelChildren(u){const _=Re.find(bu,this._config.parent);return Re.find(u,this._config.parent).filter(w=>!_.includes(w))}_addAriaAndCollapsedClass(u,_){if(u.length)for(const w of u)w.classList.toggle("collapsed",!_),w.setAttribute("aria-expanded",_)}static jQueryInterface(u){const _={};return typeof u=="string"&&/show|hide/.test(u)&&(_.toggle=!1),this.each(function(){const w=Qi.getOrCreateInstance(this,_);if(typeof u=="string"){if(w[u]===void 0)throw new TypeError(`No method named "${u}"`);w[u]()}})}}he.on(document,xu,ui,function(S){(S.target.tagName==="A"||S.delegateTarget&&S.delegateTarget.tagName==="A")&&S.preventDefault();for(const u of Re.getMultipleElementsFromSelector(this))Qi.getOrCreateInstance(u,{toggle:!1}).toggle()}),Ci(Qi);var Ut="top",Gt="bottom",$e="right",Nt="left",xn="auto",Nr=[Ut,Gt,$e,Nt],or="start",bn="end",Tc="clippingParents",zo="viewport",Or="popper",Fi="reference",zt=Nr.reduce(function(S,u){return S.concat([u+"-"+or,u+"-"+bn])},[]),Ds=[].concat(Nr,[xn]).reduce(function(S,u){return S.concat([u,u+"-"+or,u+"-"+bn])},[]),Mn="beforeRead",zn="read",ti="afterRead",Mt="beforeMain",Us="main",lr="afterMain",Ns="beforeWrite",Fr="write",Yt="afterWrite",je=[Mn,zn,ti,Mt,Us,lr,Ns,Fr,Yt];function Bi(S){return S?(S.nodeName||"").toLowerCase():null}function te(S){if(S==null)return window;if(S.toString()!=="[object Window]"){var u=S.ownerDocument;return u&&u.defaultView||window}return S}function Oe(S){return S instanceof te(S).Element||S instanceof Element}function ii(S){return S instanceof te(S).HTMLElement||S instanceof HTMLElement}function Os(S){return typeof ShadowRoot<"u"&&(S instanceof te(S).ShadowRoot||S instanceof ShadowRoot)}const Pa={name:"applyStyles",enabled:!0,phase:"write",fn:function(S){var u=S.state;Object.keys(u.elements).forEach(function(_){var w=u.styles[_]||{},B=u.attributes[_]||{},F=u.elements[_];ii(F)&&Bi(F)&&(Object.assign(F.style,w),Object.keys(B).forEach(function(j){var re=B[j];re===!1?F.removeAttribute(j):F.setAttribute(j,re===!0?"":re)}))})},effect:function(S){var u=S.state,_={popper:{position:u.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(u.elements.popper.style,_.popper),u.styles=_,u.elements.arrow&&Object.assign(u.elements.arrow.style,_.arrow),function(){Object.keys(u.elements).forEach(function(w){var B=u.elements[w],F=u.attributes[w]||{},j=Object.keys(u.styles.hasOwnProperty(w)?u.styles[w]:_[w]).reduce(function(re,pe){return re[pe]="",re},{});ii(B)&&Bi(B)&&(Object.assign(B.style,j),Object.keys(F).forEach(function(re){B.removeAttribute(re)}))})}},requires:["computeStyles"]};function Zt(S){return S.split("-")[0]}var Ri=Math.max,Br=Math.min,kn=Math.round;function Hn(){var S=navigator.userAgentData;return S!=null&&S.brands&&Array.isArray(S.brands)?S.brands.map(function(u){return u.brand+"/"+u.version}).join(" "):navigator.userAgent}function Ia(){return!/^((?!chrome|android).)*safari/i.test(Hn())}function Gn(S,u,_){u===void 0&&(u=!1),_===void 0&&(_=!1);var w=S.getBoundingClientRect(),B=1,F=1;u&&ii(S)&&(B=S.offsetWidth>0&&kn(w.width)/S.offsetWidth||1,F=S.offsetHeight>0&&kn(w.height)/S.offsetHeight||1);var j=(Oe(S)?te(S):window).visualViewport,re=!Ia()&&_,pe=(w.left+(re&&j?j.offsetLeft:0))/B,Me=(w.top+(re&&j?j.offsetTop:0))/F,we=w.width/B,ge=w.height/F;return{width:we,height:ge,top:Me,right:pe+we,bottom:Me+ge,left:pe,x:pe,y:Me}}function cr(S){var u=Gn(S),_=S.offsetWidth,w=S.offsetHeight;return Math.abs(u.width-_)<=1&&(_=u.width),Math.abs(u.height-w)<=1&&(w=u.height),{x:S.offsetLeft,y:S.offsetTop,width:_,height:w}}function ko(S,u){var _=u.getRootNode&&u.getRootNode();if(S.contains(u))return!0;if(_&&Os(_)){var w=u;do{if(w&&S.isSameNode(w))return!0;w=w.parentNode||w.host}while(w)}return!1}function Qe(S){return te(S).getComputedStyle(S)}function hr(S){return["table","td","th"].indexOf(Bi(S))>=0}function zi(S){return((Oe(S)?S.ownerDocument:S.document)||window.document).documentElement}function en(S){return Bi(S)==="html"?S:S.assignedSlot||S.parentNode||(Os(S)?S.host:null)||zi(S)}function Fs(S){return ii(S)&&Qe(S).position!=="fixed"?S.offsetParent:null}function zr(S){for(var u=te(S),_=Fs(S);_&&hr(_)&&Qe(_).position==="static";)_=Fs(_);return _&&(Bi(_)==="html"||Bi(_)==="body"&&Qe(_).position==="static")?u:_||function(w){var B=/firefox/i.test(Hn());if(/Trident/i.test(Hn())&&ii(w)&&Qe(w).position==="fixed")return null;var F=en(w);for(Os(F)&&(F=F.host);ii(F)&&["html","body"].indexOf(Bi(F))<0;){var j=Qe(F);if(j.transform!=="none"||j.perspective!=="none"||j.contain==="paint"||["transform","perspective"].indexOf(j.willChange)!==-1||B&&j.willChange==="filter"||B&&j.filter&&j.filter!=="none")return F;F=F.parentNode}return null}(S)||u}function tn(S){return["top","bottom"].indexOf(S)>=0?"x":"y"}function Vn(S,u,_){return Ri(S,Br(u,_))}function Ho(S){return Object.assign({},{top:0,right:0,bottom:0,left:0},S)}function St(S,u){return u.reduce(function(_,w){return _[w]=S,_},{})}const dt={name:"arrow",enabled:!0,phase:"main",fn:function(S){var u,_=S.state,w=S.name,B=S.options,F=_.elements.arrow,j=_.modifiersData.popperOffsets,re=Zt(_.placement),pe=tn(re),Me=[Nt,$e].indexOf(re)>=0?"height":"width";if(F&&j){var we=function(vt,gt){return Ho(typeof(vt=typeof vt=="function"?vt(Object.assign({},gt.rects,{placement:gt.placement})):vt)!="number"?vt:St(vt,Nr))}(B.padding,_),ge=cr(F),Ze=pe==="y"?Ut:Nt,Ie=pe==="y"?Gt:$e,He=_.rects.reference[Me]+_.rects.reference[pe]-j[pe]-_.rects.popper[Me],Fe=j[pe]-_.rects.reference[pe],Ge=zr(F),_t=Ge?pe==="y"?Ge.clientHeight||0:Ge.clientWidth||0:0,bt=He/2-Fe/2,Ke=we[Ze],ct=_t-ge[Me]-we[Ie],Je=_t/2-ge[Me]/2+bt,tt=Vn(Ke,Je,ct),ft=pe;_.modifiersData[w]=((u={})[ft]=tt,u.centerOffset=tt-Je,u)}},effect:function(S){var u=S.state,_=S.options.element,w=_===void 0?"[data-popper-arrow]":_;w!=null&&(typeof w!="string"||(w=u.elements.popper.querySelector(w)))&&ko(u.elements.popper,w)&&(u.elements.arrow=w)},requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function Wn(S){return S.split("-")[1]}var Li={top:"auto",right:"auto",bottom:"auto",left:"auto"};function kr(S){var u,_=S.popper,w=S.popperRect,B=S.placement,F=S.variation,j=S.offsets,re=S.position,pe=S.gpuAcceleration,Me=S.adaptive,we=S.roundOffsets,ge=S.isFixed,Ze=j.x,Ie=Ze===void 0?0:Ze,He=j.y,Fe=He===void 0?0:He,Ge=typeof we=="function"?we({x:Ie,y:Fe}):{x:Ie,y:Fe};Ie=Ge.x,Fe=Ge.y;var _t=j.hasOwnProperty("x"),bt=j.hasOwnProperty("y"),Ke=Nt,ct=Ut,Je=window;if(Me){var tt=zr(_),ft="clientHeight",vt="clientWidth";tt===te(_)&&Qe(tt=zi(_)).position!=="static"&&re==="absolute"&&(ft="scrollHeight",vt="scrollWidth"),(B===Ut||(B===Nt||B===$e)&&F===bn)&&(ct=Gt,Fe-=(ge&&tt===Je&&Je.visualViewport?Je.visualViewport.height:tt[ft])-w.height,Fe*=pe?1:-1),B!==Nt&&(B!==Ut&&B!==Gt||F!==bn)||(Ke=$e,Ie-=(ge&&tt===Je&&Je.visualViewport?Je.visualViewport.width:tt[vt])-w.width,Ie*=pe?1:-1)}var gt,At=Object.assign({position:re},Me&&Li),mi=we===!0?function(Ui,Kt){var Mi=Ui.x,Si=Ui.y,wt=Kt.devicePixelRatio||1;return{x:kn(Mi*wt)/wt||0,y:kn(Si*wt)/wt||0}}({x:Ie,y:Fe},te(_)):{x:Ie,y:Fe};return Ie=mi.x,Fe=mi.y,pe?Object.assign({},At,((gt={})[ct]=bt?"0":"",gt[Ke]=_t?"0":"",gt.transform=(Je.devicePixelRatio||1)<=1?"translate("+Ie+"px, "+Fe+"px)":"translate3d("+Ie+"px, "+Fe+"px, 0)",gt)):Object.assign({},At,((u={})[ct]=bt?Fe+"px":"",u[Ke]=_t?Ie+"px":"",u.transform="",u))}const Hr={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:function(S){var u=S.state,_=S.options,w=_.gpuAcceleration,B=w===void 0||w,F=_.adaptive,j=F===void 0||F,re=_.roundOffsets,pe=re===void 0||re,Me={placement:Zt(u.placement),variation:Wn(u.placement),popper:u.elements.popper,popperRect:u.rects.popper,gpuAcceleration:B,isFixed:u.options.strategy==="fixed"};u.modifiersData.popperOffsets!=null&&(u.styles.popper=Object.assign({},u.styles.popper,kr(Object.assign({},Me,{offsets:u.modifiersData.popperOffsets,position:u.options.strategy,adaptive:j,roundOffsets:pe})))),u.modifiersData.arrow!=null&&(u.styles.arrow=Object.assign({},u.styles.arrow,kr(Object.assign({},Me,{offsets:u.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:pe})))),u.attributes.popper=Object.assign({},u.attributes.popper,{"data-popper-placement":u.placement})},data:{}};var Vt={passive:!0};const R={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:function(S){var u=S.state,_=S.instance,w=S.options,B=w.scroll,F=B===void 0||B,j=w.resize,re=j===void 0||j,pe=te(u.elements.popper),Me=[].concat(u.scrollParents.reference,u.scrollParents.popper);return F&&Me.forEach(function(we){we.addEventListener("scroll",_.update,Vt)}),re&&pe.addEventListener("resize",_.update,Vt),function(){F&&Me.forEach(function(we){we.removeEventListener("scroll",_.update,Vt)}),re&&pe.removeEventListener("resize",_.update,Vt)}},data:{}};var Da={left:"right",right:"left",bottom:"top",top:"bottom"};function Gr(S){return S.replace(/left|right|bottom|top/g,function(u){return Da[u]})}var Jt={start:"end",end:"start"};function ki(S){return S.replace(/start|end/g,function(u){return Jt[u]})}function di(S){var u=te(S);return{scrollLeft:u.pageXOffset,scrollTop:u.pageYOffset}}function ur(S){return Gn(zi(S)).left+di(S).scrollLeft}function Sn(S){var u=Qe(S),_=u.overflow,w=u.overflowX,B=u.overflowY;return/auto|scroll|overlay|hidden/.test(_+B+w)}function jn(S){return["html","body","#document"].indexOf(Bi(S))>=0?S.ownerDocument.body:ii(S)&&Sn(S)?S:jn(en(S))}function Hi(S,u){var _;u===void 0&&(u=[]);var w=jn(S),B=w===((_=S.ownerDocument)==null?void 0:_.body),F=te(w),j=B?[F].concat(F.visualViewport||[],Sn(w)?w:[]):w,re=u.concat(j);return B?re:re.concat(Hi(en(j)))}function Gi(S){return Object.assign({},S,{left:S.x,top:S.y,right:S.x+S.width,bottom:S.y+S.height})}function nn(S,u,_){return u===zo?Gi(function(w,B){var F=te(w),j=zi(w),re=F.visualViewport,pe=j.clientWidth,Me=j.clientHeight,we=0,ge=0;if(re){pe=re.width,Me=re.height;var Ze=Ia();(Ze||!Ze&&B==="fixed")&&(we=re.offsetLeft,ge=re.offsetTop)}return{width:pe,height:Me,x:we+ur(w),y:ge}}(S,_)):Oe(u)?function(w,B){var F=Gn(w,!1,B==="fixed");return F.top=F.top+w.clientTop,F.left=F.left+w.clientLeft,F.bottom=F.top+w.clientHeight,F.right=F.left+w.clientWidth,F.width=w.clientWidth,F.height=w.clientHeight,F.x=F.left,F.y=F.top,F}(u,_):Gi(function(w){var B,F=zi(w),j=di(w),re=(B=w.ownerDocument)==null?void 0:B.body,pe=Ri(F.scrollWidth,F.clientWidth,re?re.scrollWidth:0,re?re.clientWidth:0),Me=Ri(F.scrollHeight,F.clientHeight,re?re.scrollHeight:0,re?re.clientHeight:0),we=-j.scrollLeft+ur(w),ge=-j.scrollTop;return Qe(re||F).direction==="rtl"&&(we+=Ri(F.clientWidth,re?re.clientWidth:0)-pe),{width:pe,height:Me,x:we,y:ge}}(zi(S)))}function wn(S){var u,_=S.reference,w=S.element,B=S.placement,F=B?Zt(B):null,j=B?Wn(B):null,re=_.x+_.width/2-w.width/2,pe=_.y+_.height/2-w.height/2;switch(F){case Ut:u={x:re,y:_.y-w.height};break;case Gt:u={x:re,y:_.y+_.height};break;case $e:u={x:_.x+_.width,y:pe};break;case Nt:u={x:_.x-w.width,y:pe};break;default:u={x:_.x,y:_.y}}var Me=F?tn(F):null;if(Me!=null){var we=Me==="y"?"height":"width";switch(j){case or:u[Me]=u[Me]-(_[we]/2-w[we]/2);break;case bn:u[Me]=u[Me]+(_[we]/2-w[we]/2)}}return u}function Vi(S,u){u===void 0&&(u={});var _=u,w=_.placement,B=w===void 0?S.placement:w,F=_.strategy,j=F===void 0?S.strategy:F,re=_.boundary,pe=re===void 0?Tc:re,Me=_.rootBoundary,we=Me===void 0?zo:Me,ge=_.elementContext,Ze=ge===void 0?Or:ge,Ie=_.altBoundary,He=Ie!==void 0&&Ie,Fe=_.padding,Ge=Fe===void 0?0:Fe,_t=Ho(typeof Ge!="number"?Ge:St(Ge,Nr)),bt=Ze===Or?Fi:Or,Ke=S.rects.popper,ct=S.elements[He?bt:Ze],Je=function(Kt,Mi,Si,wt){var qi=Mi==="clippingParents"?function(xt){var Qt=Hi(en(xt)),wi=["absolute","fixed"].indexOf(Qe(xt).position)>=0&&ii(xt)?zr(xt):xt;return Oe(wi)?Qt.filter(function(In){return Oe(In)&&ko(In,wi)&&Bi(In)!=="body"}):[]}(Kt):[].concat(Mi),Yi=[].concat(qi,[Si]),Sr=Yi[0],Ht=Yi.reduce(function(xt,Qt){var wi=nn(Kt,Qt,wt);return xt.top=Ri(wi.top,xt.top),xt.right=Br(wi.right,xt.right),xt.bottom=Br(wi.bottom,xt.bottom),xt.left=Ri(wi.left,xt.left),xt},nn(Kt,Sr,wt));return Ht.width=Ht.right-Ht.left,Ht.height=Ht.bottom-Ht.top,Ht.x=Ht.left,Ht.y=Ht.top,Ht}(Oe(ct)?ct:ct.contextElement||zi(S.elements.popper),pe,we,j),tt=Gn(S.elements.reference),ft=wn({reference:tt,element:Ke,strategy:"absolute",placement:B}),vt=Gi(Object.assign({},Ke,ft)),gt=Ze===Or?vt:tt,At={top:Je.top-gt.top+_t.top,bottom:gt.bottom-Je.bottom+_t.bottom,left:Je.left-gt.left+_t.left,right:gt.right-Je.right+_t.right},mi=S.modifiersData.offset;if(Ze===Or&&mi){var Ui=mi[B];Object.keys(At).forEach(function(Kt){var Mi=[$e,Gt].indexOf(Kt)>=0?1:-1,Si=[Ut,Gt].indexOf(Kt)>=0?"y":"x";At[Kt]+=Ui[Si]*Mi})}return At}function Bs(S,u){u===void 0&&(u={});var _=u,w=_.placement,B=_.boundary,F=_.rootBoundary,j=_.padding,re=_.flipVariations,pe=_.allowedAutoPlacements,Me=pe===void 0?Ds:pe,we=Wn(w),ge=we?re?zt:zt.filter(function(He){return Wn(He)===we}):Nr,Ze=ge.filter(function(He){return Me.indexOf(He)>=0});Ze.length===0&&(Ze=ge);var Ie=Ze.reduce(function(He,Fe){return He[Fe]=Vi(S,{placement:Fe,boundary:B,rootBoundary:F,padding:j})[Zt(Fe)],He},{});return Object.keys(Ie).sort(function(He,Fe){return Ie[He]-Ie[Fe]})}const Vr={name:"flip",enabled:!0,phase:"main",fn:function(S){var u=S.state,_=S.options,w=S.name;if(!u.modifiersData[w]._skip){for(var B=_.mainAxis,F=B===void 0||B,j=_.altAxis,re=j===void 0||j,pe=_.fallbackPlacements,Me=_.padding,we=_.boundary,ge=_.rootBoundary,Ze=_.altBoundary,Ie=_.flipVariations,He=Ie===void 0||Ie,Fe=_.allowedAutoPlacements,Ge=u.options.placement,_t=Zt(Ge),bt=pe||(_t!==Ge&&He?function(xt){if(Zt(xt)===xn)return[];var Qt=Gr(xt);return[ki(xt),Qt,ki(Qt)]}(Ge):[Gr(Ge)]),Ke=[Ge].concat(bt).reduce(function(xt,Qt){return xt.concat(Zt(Qt)===xn?Bs(u,{placement:Qt,boundary:we,rootBoundary:ge,padding:Me,flipVariations:He,allowedAutoPlacements:Fe}):Qt)},[]),ct=u.rects.reference,Je=u.rects.popper,tt=new Map,ft=!0,vt=Ke[0],gt=0;gt<Ke.length;gt++){var At=Ke[gt],mi=Zt(At),Ui=Wn(At)===or,Kt=[Ut,Gt].indexOf(mi)>=0,Mi=Kt?"width":"height",Si=Vi(u,{placement:At,boundary:we,rootBoundary:ge,altBoundary:Ze,padding:Me}),wt=Kt?Ui?$e:Nt:Ui?Gt:Ut;ct[Mi]>Je[Mi]&&(wt=Gr(wt));var qi=Gr(wt),Yi=[];if(F&&Yi.push(Si[mi]<=0),re&&Yi.push(Si[wt]<=0,Si[qi]<=0),Yi.every(function(xt){return xt})){vt=At,ft=!1;break}tt.set(At,Yi)}if(ft)for(var Sr=function(xt){var Qt=Ke.find(function(wi){var In=tt.get(wi);if(In)return In.slice(0,xt).every(function(la){return la})});if(Qt)return vt=Qt,"break"},Ht=He?3:1;Ht>0&&Sr(Ht)!=="break";Ht--);u.placement!==vt&&(u.modifiersData[w]._skip=!0,u.placement=vt,u.reset=!0)}},requiresIfExists:["offset"],data:{_skip:!1}};function En(S,u,_){return _===void 0&&(_={x:0,y:0}),{top:S.top-u.height-_.y,right:S.right-u.width+_.x,bottom:S.bottom-u.height+_.y,left:S.left-u.width-_.x}}function zs(S){return[Ut,$e,Gt,Nt].some(function(u){return S[u]>=0})}const Go={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:function(S){var u=S.state,_=S.name,w=u.rects.reference,B=u.rects.popper,F=u.modifiersData.preventOverflow,j=Vi(u,{elementContext:"reference"}),re=Vi(u,{altBoundary:!0}),pe=En(j,w),Me=En(re,B,F),we=zs(pe),ge=zs(Me);u.modifiersData[_]={referenceClippingOffsets:pe,popperEscapeOffsets:Me,isReferenceHidden:we,hasPopperEscaped:ge},u.attributes.popper=Object.assign({},u.attributes.popper,{"data-popper-reference-hidden":we,"data-popper-escaped":ge})}},dr={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:function(S){var u=S.state,_=S.options,w=S.name,B=_.offset,F=B===void 0?[0,0]:B,j=Ds.reduce(function(we,ge){return we[ge]=function(Ze,Ie,He){var Fe=Zt(Ze),Ge=[Nt,Ut].indexOf(Fe)>=0?-1:1,_t=typeof He=="function"?He(Object.assign({},Ie,{placement:Ze})):He,bt=_t[0],Ke=_t[1];return bt=bt||0,Ke=(Ke||0)*Ge,[Nt,$e].indexOf(Fe)>=0?{x:Ke,y:bt}:{x:bt,y:Ke}}(ge,u.rects,F),we},{}),re=j[u.placement],pe=re.x,Me=re.y;u.modifiersData.popperOffsets!=null&&(u.modifiersData.popperOffsets.x+=pe,u.modifiersData.popperOffsets.y+=Me),u.modifiersData[w]=j}},Wr={name:"popperOffsets",enabled:!0,phase:"read",fn:function(S){var u=S.state,_=S.name;u.modifiersData[_]=wn({reference:u.rects.reference,element:u.rects.popper,strategy:"absolute",placement:u.placement})},data:{}},Wt={name:"preventOverflow",enabled:!0,phase:"main",fn:function(S){var u=S.state,_=S.options,w=S.name,B=_.mainAxis,F=B===void 0||B,j=_.altAxis,re=j!==void 0&&j,pe=_.boundary,Me=_.rootBoundary,we=_.altBoundary,ge=_.padding,Ze=_.tether,Ie=Ze===void 0||Ze,He=_.tetherOffset,Fe=He===void 0?0:He,Ge=Vi(u,{boundary:pe,rootBoundary:Me,padding:ge,altBoundary:we}),_t=Zt(u.placement),bt=Wn(u.placement),Ke=!bt,ct=tn(_t),Je=ct==="x"?"y":"x",tt=u.modifiersData.popperOffsets,ft=u.rects.reference,vt=u.rects.popper,gt=typeof Fe=="function"?Fe(Object.assign({},u.rects,{placement:u.placement})):Fe,At=typeof gt=="number"?{mainAxis:gt,altAxis:gt}:Object.assign({mainAxis:0,altAxis:0},gt),mi=u.modifiersData.offset?u.modifiersData.offset[u.placement]:null,Ui={x:0,y:0};if(tt){if(F){var Kt,Mi=ct==="y"?Ut:Nt,Si=ct==="y"?Gt:$e,wt=ct==="y"?"height":"width",qi=tt[ct],Yi=qi+Ge[Mi],Sr=qi-Ge[Si],Ht=Ie?-vt[wt]/2:0,xt=bt===or?ft[wt]:vt[wt],Qt=bt===or?-vt[wt]:-ft[wt],wi=u.elements.arrow,In=Ie&&wi?cr(wi):{width:0,height:0},la=u.modifiersData["arrow#persistent"]?u.modifiersData["arrow#persistent"].padding:{top:0,right:0,bottom:0,left:0},nl=la[Mi],rl=la[Si],ca=Vn(0,ft[wt],In[wt]),Yc=Ke?ft[wt]/2-Ht-ca-nl-At.mainAxis:xt-ca-nl-At.mainAxis,Zc=Ke?-ft[wt]/2+Ht+ca+rl+At.mainAxis:Qt+ca+rl+At.mainAxis,Ka=u.elements.arrow&&zr(u.elements.arrow),Jc=Ka?ct==="y"?Ka.clientTop||0:Ka.clientLeft||0:0,ha=(Kt=mi?.[ct])!=null?Kt:0,sl=qi+Zc-ha,al=Vn(Ie?Br(Yi,qi+Yc-ha-Jc):Yi,qi,Ie?Ri(Sr,sl):Sr);tt[ct]=al,Ui[ct]=al-qi}if(re){var os,ol=ct==="x"?Ut:Nt,$c=ct==="x"?Gt:$e,ir=tt[Je],ls=Je==="y"?"height":"width",ll=ir+Ge[ol],cl=ir-Ge[$c],nr=[Ut,Nt].indexOf(_t)!==-1,Qa=(os=mi?.[Je])!=null?os:0,eo=nr?ll:ir-ft[ls]-vt[ls]-Qa+At.altAxis,hl=nr?ir+ft[ls]+vt[ls]-Qa-At.altAxis:cl,ua=Ie&&nr?function(Kc,Qc,to){var io=Vn(Kc,Qc,to);return io>to?to:io}(eo,ir,hl):Vn(Ie?eo:ll,ir,Ie?hl:cl);tt[Je]=ua,Ui[Je]=ua-ir}u.modifiersData[w]=Ui}},requiresIfExists:["offset"]};function rn(S,u,_){_===void 0&&(_=!1);var w,B,F=ii(u),j=ii(u)&&function(ge){var Ze=ge.getBoundingClientRect(),Ie=kn(Ze.width)/ge.offsetWidth||1,He=kn(Ze.height)/ge.offsetHeight||1;return Ie!==1||He!==1}(u),re=zi(u),pe=Gn(S,j,_),Me={scrollLeft:0,scrollTop:0},we={x:0,y:0};return(F||!F&&!_)&&((Bi(u)!=="body"||Sn(re))&&(Me=(w=u)!==te(w)&&ii(w)?{scrollLeft:(B=w).scrollLeft,scrollTop:B.scrollTop}:di(w)),ii(u)?((we=Gn(u,!0)).x+=u.clientLeft,we.y+=u.clientTop):re&&(we.x=ur(re))),{x:pe.left+Me.scrollLeft-we.x,y:pe.top+Me.scrollTop-we.y,width:pe.width,height:pe.height}}function Ua(S){var u=new Map,_=new Set,w=[];function B(F){_.add(F.name),[].concat(F.requires||[],F.requiresIfExists||[]).forEach(function(j){if(!_.has(j)){var re=u.get(j);re&&B(re)}}),w.push(F)}return S.forEach(function(F){u.set(F.name,F)}),S.forEach(function(F){_.has(F.name)||B(F)}),w}var jr={placement:"bottom",modifiers:[],strategy:"absolute"};function sn(){for(var S=arguments.length,u=new Array(S),_=0;_<S;_++)u[_]=arguments[_];return!u.some(function(w){return!(w&&typeof w.getBoundingClientRect=="function")})}function pr(S){S===void 0&&(S={});var u=S,_=u.defaultModifiers,w=_===void 0?[]:_,B=u.defaultOptions,F=B===void 0?jr:B;return function(j,re,pe){pe===void 0&&(pe=F);var Me,we,ge={placement:"bottom",orderedModifiers:[],options:Object.assign({},jr,F),modifiersData:{},elements:{reference:j,popper:re},attributes:{},styles:{}},Ze=[],Ie=!1,He={state:ge,setOptions:function(Ge){var _t=typeof Ge=="function"?Ge(ge.options):Ge;Fe(),ge.options=Object.assign({},F,ge.options,_t),ge.scrollParents={reference:Oe(j)?Hi(j):j.contextElement?Hi(j.contextElement):[],popper:Hi(re)};var bt,Ke,ct=function(Je){var tt=Ua(Je);return je.reduce(function(ft,vt){return ft.concat(tt.filter(function(gt){return gt.phase===vt}))},[])}((bt=[].concat(w,ge.options.modifiers),Ke=bt.reduce(function(Je,tt){var ft=Je[tt.name];return Je[tt.name]=ft?Object.assign({},ft,tt,{options:Object.assign({},ft.options,tt.options),data:Object.assign({},ft.data,tt.data)}):tt,Je},{}),Object.keys(Ke).map(function(Je){return Ke[Je]})));return ge.orderedModifiers=ct.filter(function(Je){return Je.enabled}),ge.orderedModifiers.forEach(function(Je){var tt=Je.name,ft=Je.options,vt=ft===void 0?{}:ft,gt=Je.effect;if(typeof gt=="function"){var At=gt({state:ge,name:tt,instance:He,options:vt});Ze.push(At||function(){})}}),He.update()},forceUpdate:function(){if(!Ie){var Ge=ge.elements,_t=Ge.reference,bt=Ge.popper;if(sn(_t,bt)){ge.rects={reference:rn(_t,zr(bt),ge.options.strategy==="fixed"),popper:cr(bt)},ge.reset=!1,ge.placement=ge.options.placement,ge.orderedModifiers.forEach(function(gt){return ge.modifiersData[gt.name]=Object.assign({},gt.data)});for(var Ke=0;Ke<ge.orderedModifiers.length;Ke++)if(ge.reset!==!0){var ct=ge.orderedModifiers[Ke],Je=ct.fn,tt=ct.options,ft=tt===void 0?{}:tt,vt=ct.name;typeof Je=="function"&&(ge=Je({state:ge,options:ft,name:vt,instance:He})||ge)}else ge.reset=!1,Ke=-1}}},update:(Me=function(){return new Promise(function(Ge){He.forceUpdate(),Ge(ge)})},function(){return we||(we=new Promise(function(Ge){Promise.resolve().then(function(){we=void 0,Ge(Me())})})),we}),destroy:function(){Fe(),Ie=!0}};if(!sn(j,re))return He;function Fe(){Ze.forEach(function(Ge){return Ge()}),Ze=[]}return He.setOptions(pe).then(function(Ge){!Ie&&pe.onFirstUpdate&&pe.onFirstUpdate(Ge)}),He}}var ks=pr(),Na=pr({defaultModifiers:[R,Wr,Hr,Pa]}),Tn=pr({defaultModifiers:[R,Wr,Hr,Pa,dr,Vr,Wt,dt,Go]});const Ue=Object.freeze(Object.defineProperty({__proto__:null,afterMain:lr,afterRead:ti,afterWrite:Yt,applyStyles:Pa,arrow:dt,auto:xn,basePlacements:Nr,beforeMain:Mt,beforeRead:Mn,beforeWrite:Ns,bottom:Gt,clippingParents:Tc,computeStyles:Hr,createPopper:Tn,createPopperBase:ks,createPopperLite:Na,detectOverflow:Vi,end:bn,eventListeners:R,flip:Vr,hide:Go,left:Nt,main:Us,modifierPhases:je,offset:dr,placements:Ds,popper:Or,popperGenerator:pr,popperOffsets:Wr,preventOverflow:Wt,read:zn,reference:Fi,right:$e,start:or,top:Ut,variationPlacements:zt,viewport:zo,write:Fr},Symbol.toStringTag,{value:"Module"})),Xn="dropdown",jt=".bs.dropdown",Oa=".data-api",Ac="ArrowUp",an="ArrowDown",Hs=`hide${jt}`,pi=`hidden${jt}`,Vo=`show${jt}`,Wo=`shown${jt}`,mr=`click${jt}${Oa}`,Xr=`keydown${jt}${Oa}`,Cc=`keyup${jt}${Oa}`,qn="show",_i='[data-bs-toggle="dropdown"]:not(.disabled):not(:disabled)',on=`${_i}.${qn}`,Yn=".dropdown-menu",qr=Ai()?"top-end":"top-start",Rc=Ai()?"top-start":"top-end",Lc=Ai()?"bottom-end":"bottom-start",jo=Ai()?"bottom-start":"bottom-end",Xo=Ai()?"left-start":"right-start",qo=Ai()?"right-start":"left-start",Pc={autoClose:!0,boundary:"clippingParents",display:"dynamic",offset:[0,2],popperConfig:null,reference:"toggle"},Ic={autoClose:"(boolean|string)",boundary:"(string|element)",display:"string",offset:"(array|string|function)",popperConfig:"(null|object|function)",reference:"(string|element|object)"};class Xe extends Ni{constructor(u,_){super(u,_),this._popper=null,this._parent=this._element.parentNode,this._menu=Re.next(this._element,Yn)[0]||Re.prev(this._element,Yn)[0]||Re.findOne(Yn,this._parent),this._inNavbar=this._detectNavbar()}static get Default(){return Pc}static get DefaultType(){return Ic}static get NAME(){return Xn}toggle(){return this._isShown()?this.hide():this.show()}show(){if(Fn(this._element)||this._isShown())return;const u={relatedTarget:this._element};if(!he.trigger(this._element,Vo,u).defaultPrevented){if(this._createPopper(),"ontouchstart"in document.documentElement&&!this._parent.closest(".navbar-nav"))for(const _ of[].concat(...document.body.children))he.on(_,"mouseover",wa);this._element.focus(),this._element.setAttribute("aria-expanded",!0),this._menu.classList.add(qn),this._element.classList.add(qn),he.trigger(this._element,Wo,u)}}hide(){if(Fn(this._element)||!this._isShown())return;const u={relatedTarget:this._element};this._completeHide(u)}dispose(){this._popper&&this._popper.destroy(),super.dispose()}update(){this._inNavbar=this._detectNavbar(),this._popper&&this._popper.update()}_completeHide(u){if(!he.trigger(this._element,Hs,u).defaultPrevented){if("ontouchstart"in document.documentElement)for(const _ of[].concat(...document.body.children))he.off(_,"mouseover",wa);this._popper&&this._popper.destroy(),this._menu.classList.remove(qn),this._element.classList.remove(qn),this._element.setAttribute("aria-expanded","false"),yn.removeDataAttribute(this._menu,"popper"),he.trigger(this._element,pi,u)}}_getConfig(u){if(typeof(u=super._getConfig(u)).reference=="object"&&!vn(u.reference)&&typeof u.reference.getBoundingClientRect!="function")throw new TypeError(`${Xn.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`);return u}_createPopper(){if(Ue===void 0)throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)");let u=this._element;this._config.reference==="parent"?u=this._parent:vn(this._config.reference)?u=On(this._config.reference):typeof this._config.reference=="object"&&(u=this._config.reference);const _=this._getPopperConfig();this._popper=Tn(u,this._menu,_)}_isShown(){return this._menu.classList.contains(qn)}_getPlacement(){const u=this._parent;if(u.classList.contains("dropend"))return Xo;if(u.classList.contains("dropstart"))return qo;if(u.classList.contains("dropup-center"))return"top";if(u.classList.contains("dropdown-center"))return"bottom";const _=getComputedStyle(this._menu).getPropertyValue("--bs-position").trim()==="end";return u.classList.contains("dropup")?_?Rc:qr:_?jo:Lc}_detectNavbar(){return this._element.closest(".navbar")!==null}_getOffset(){const{offset:u}=this._config;return typeof u=="string"?u.split(",").map(_=>Number.parseInt(_,10)):typeof u=="function"?_=>u(_,this._element):u}_getPopperConfig(){const u={placement:this._getPlacement(),modifiers:[{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"offset",options:{offset:this._getOffset()}}]};return(this._inNavbar||this._config.display==="static")&&(yn.setDataAttribute(this._menu,"popper","static"),u.modifiers=[{name:"applyStyles",enabled:!1}]),{...u,...hi(this._config.popperConfig,[u])}}_selectMenuItem({key:u,target:_}){const w=Re.find(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",this._menu).filter(B=>Rr(B));w.length&&Lo(w,_,u===an,!w.includes(_)).focus()}static jQueryInterface(u){return this.each(function(){const _=Xe.getOrCreateInstance(this,u);if(typeof u=="string"){if(_[u]===void 0)throw new TypeError(`No method named "${u}"`);_[u]()}})}static clearMenus(u){if(u.button===2||u.type==="keyup"&&u.key!=="Tab")return;const _=Re.find(on);for(const w of _){const B=Xe.getInstance(w);if(!B||B._config.autoClose===!1)continue;const F=u.composedPath(),j=F.includes(B._menu);if(F.includes(B._element)||B._config.autoClose==="inside"&&!j||B._config.autoClose==="outside"&&j||B._menu.contains(u.target)&&(u.type==="keyup"&&u.key==="Tab"||/input|select|option|textarea|form/i.test(u.target.tagName)))continue;const re={relatedTarget:B._element};u.type==="click"&&(re.clickEvent=u),B._completeHide(re)}}static dataApiKeydownHandler(u){const _=/input|textarea/i.test(u.target.tagName),w=u.key==="Escape",B=[Ac,an].includes(u.key);if(!B&&!w||_&&!w)return;u.preventDefault();const F=this.matches(_i)?this:Re.prev(this,_i)[0]||Re.next(this,_i)[0]||Re.findOne(_i,u.delegateTarget.parentNode),j=Xe.getOrCreateInstance(F);if(B)return u.stopPropagation(),j.show(),void j._selectMenuItem(u);j._isShown()&&(u.stopPropagation(),j.hide(),F.focus())}}he.on(document,Xr,_i,Xe.dataApiKeydownHandler),he.on(document,Xr,Yn,Xe.dataApiKeydownHandler),he.on(document,mr,Xe.clearMenus),he.on(document,Cc,Xe.clearMenus),he.on(document,mr,_i,function(S){S.preventDefault(),Xe.getOrCreateInstance(this).toggle()}),Ci(Xe);const vi="backdrop",Wi="show",Gs=`mousedown.bs.${vi}`,ln={className:"modal-backdrop",clickCallback:null,isAnimated:!1,isVisible:!0,rootElement:"body"},fr={className:"string",clickCallback:"(function|null)",isAnimated:"boolean",isVisible:"boolean",rootElement:"(element|string)"};class Zn extends Cs{constructor(u){super(),this._config=this._getConfig(u),this._isAppended=!1,this._element=null}static get Default(){return ln}static get DefaultType(){return fr}static get NAME(){return vi}show(u){if(!this._config.isVisible)return void hi(u);this._append();const _=this._getElement();this._config.isAnimated&&As(_),_.classList.add(Wi),this._emulateAnimation(()=>{hi(u)})}hide(u){this._config.isVisible?(this._getElement().classList.remove(Wi),this._emulateAnimation(()=>{this.dispose(),hi(u)})):hi(u)}dispose(){this._isAppended&&(he.off(this._element,Gs),this._element.remove(),this._isAppended=!1)}_getElement(){if(!this._element){const u=document.createElement("div");u.className=this._config.className,this._config.isAnimated&&u.classList.add("fade"),this._element=u}return this._element}_configAfterMerge(u){return u.rootElement=On(u.rootElement),u}_append(){if(this._isAppended)return;const u=this._getElement();this._config.rootElement.append(u),he.on(u,Gs,()=>{hi(this._config.clickCallback)}),this._isAppended=!0}_emulateAnimation(u){hc(u,this._getElement(),this._config.isAnimated)}}const Yr=".bs.focustrap",Fa=`focusin${Yr}`,Ba=`keydown.tab${Yr}`,Vs="backward",Ws={autofocus:!0,trapElement:null},ni={autofocus:"boolean",trapElement:"element"};class za extends Cs{constructor(u){super(),this._config=this._getConfig(u),this._isActive=!1,this._lastTabNavDirection=null}static get Default(){return Ws}static get DefaultType(){return ni}static get NAME(){return"focustrap"}activate(){this._isActive||(this._config.autofocus&&this._config.trapElement.focus(),he.off(document,Yr),he.on(document,Fa,u=>this._handleFocusin(u)),he.on(document,Ba,u=>this._handleKeydown(u)),this._isActive=!0)}deactivate(){this._isActive&&(this._isActive=!1,he.off(document,Yr))}_handleFocusin(u){const{trapElement:_}=this._config;if(u.target===document||u.target===_||_.contains(u.target))return;const w=Re.focusableChildren(_);w.length===0?_.focus():this._lastTabNavDirection===Vs?w[w.length-1].focus():w[0].focus()}_handleKeydown(u){u.key==="Tab"&&(this._lastTabNavDirection=u.shiftKey?Vs:"forward")}}const cn=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",Zr=".sticky-top",gr="padding-right",be="margin-right";class kt{constructor(){this._element=document.body}getWidth(){const u=document.documentElement.clientWidth;return Math.abs(window.innerWidth-u)}hide(){const u=this.getWidth();this._disableOverFlow(),this._setElementAttributes(this._element,gr,_=>_+u),this._setElementAttributes(cn,gr,_=>_+u),this._setElementAttributes(Zr,be,_=>_-u)}reset(){this._resetElementAttributes(this._element,"overflow"),this._resetElementAttributes(this._element,gr),this._resetElementAttributes(cn,gr),this._resetElementAttributes(Zr,be)}isOverflowing(){return this.getWidth()>0}_disableOverFlow(){this._saveInitialAttribute(this._element,"overflow"),this._element.style.overflow="hidden"}_setElementAttributes(u,_,w){const B=this.getWidth();this._applyManipulationCallback(u,F=>{if(F!==this._element&&window.innerWidth>F.clientWidth+B)return;this._saveInitialAttribute(F,_);const j=window.getComputedStyle(F).getPropertyValue(_);F.style.setProperty(_,`${w(Number.parseFloat(j))}px`)})}_saveInitialAttribute(u,_){const w=u.style.getPropertyValue(_);w&&yn.setDataAttribute(u,_,w)}_resetElementAttributes(u,_){this._applyManipulationCallback(u,w=>{const B=yn.getDataAttribute(w,_);B!==null?(yn.removeDataAttribute(w,_),w.style.setProperty(_,B)):w.style.removeProperty(_)})}_applyManipulationCallback(u,_){if(vn(u))_(u);else for(const w of Re.find(u,this._element))_(w)}}const yi=".bs.modal",qt=`hide${yi}`,An=`hidePrevented${yi}`,ji=`hidden${yi}`,Yo=`show${yi}`,ri=`shown${yi}`,Jr=`resize${yi}`,Dc=`click.dismiss${yi}`,Pt=`mousedown.dismiss${yi}`,js=`keydown.dismiss${yi}`,mt=`click${yi}.data-api`,Xs="modal-open",qs="show",Ee="modal-static",Uc={backdrop:!0,focus:!0,keyboard:!0},xi={backdrop:"(boolean|string)",focus:"boolean",keyboard:"boolean"};class hn extends Ni{constructor(u,_){super(u,_),this._dialog=Re.findOne(".modal-dialog",this._element),this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._isShown=!1,this._isTransitioning=!1,this._scrollBar=new kt,this._addEventListeners()}static get Default(){return Uc}static get DefaultType(){return xi}static get NAME(){return"modal"}toggle(u){return this._isShown?this.hide():this.show(u)}show(u){this._isShown||this._isTransitioning||he.trigger(this._element,Yo,{relatedTarget:u}).defaultPrevented||(this._isShown=!0,this._isTransitioning=!0,this._scrollBar.hide(),document.body.classList.add(Xs),this._adjustDialog(),this._backdrop.show(()=>this._showElement(u)))}hide(){this._isShown&&!this._isTransitioning&&(he.trigger(this._element,qt).defaultPrevented||(this._isShown=!1,this._isTransitioning=!0,this._focustrap.deactivate(),this._element.classList.remove(qs),this._queueCallback(()=>this._hideModal(),this._element,this._isAnimated())))}dispose(){he.off(window,yi),he.off(this._dialog,yi),this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}handleUpdate(){this._adjustDialog()}_initializeBackDrop(){return new Zn({isVisible:!!this._config.backdrop,isAnimated:this._isAnimated()})}_initializeFocusTrap(){return new za({trapElement:this._element})}_showElement(u){document.body.contains(this._element)||document.body.append(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.scrollTop=0;const _=Re.findOne(".modal-body",this._dialog);_&&(_.scrollTop=0),As(this._element),this._element.classList.add(qs),this._queueCallback(()=>{this._config.focus&&this._focustrap.activate(),this._isTransitioning=!1,he.trigger(this._element,ri,{relatedTarget:u})},this._dialog,this._isAnimated())}_addEventListeners(){he.on(this._element,js,u=>{u.key==="Escape"&&(this._config.keyboard?this.hide():this._triggerBackdropTransition())}),he.on(window,Jr,()=>{this._isShown&&!this._isTransitioning&&this._adjustDialog()}),he.on(this._element,Pt,u=>{he.one(this._element,Dc,_=>{this._element===u.target&&this._element===_.target&&(this._config.backdrop!=="static"?this._config.backdrop&&this.hide():this._triggerBackdropTransition())})})}_hideModal(){this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._isTransitioning=!1,this._backdrop.hide(()=>{document.body.classList.remove(Xs),this._resetAdjustments(),this._scrollBar.reset(),he.trigger(this._element,ji)})}_isAnimated(){return this._element.classList.contains("fade")}_triggerBackdropTransition(){if(he.trigger(this._element,An).defaultPrevented)return;const u=this._element.scrollHeight>document.documentElement.clientHeight,_=this._element.style.overflowY;_==="hidden"||this._element.classList.contains(Ee)||(u||(this._element.style.overflowY="hidden"),this._element.classList.add(Ee),this._queueCallback(()=>{this._element.classList.remove(Ee),this._queueCallback(()=>{this._element.style.overflowY=_},this._dialog)},this._dialog),this._element.focus())}_adjustDialog(){const u=this._element.scrollHeight>document.documentElement.clientHeight,_=this._scrollBar.getWidth(),w=_>0;if(w&&!u){const B=Ai()?"paddingLeft":"paddingRight";this._element.style[B]=`${_}px`}if(!w&&u){const B=Ai()?"paddingRight":"paddingLeft";this._element.style[B]=`${_}px`}}_resetAdjustments(){this._element.style.paddingLeft="",this._element.style.paddingRight=""}static jQueryInterface(u,_){return this.each(function(){const w=hn.getOrCreateInstance(this,u);if(typeof u=="string"){if(w[u]===void 0)throw new TypeError(`No method named "${u}"`);w[u](_)}})}}he.on(document,mt,'[data-bs-toggle="modal"]',function(S){const u=Re.getElementFromSelector(this);["A","AREA"].includes(this.tagName)&&S.preventDefault(),he.one(u,Yo,w=>{w.defaultPrevented||he.one(u,ji,()=>{Rr(this)&&this.focus()})});const _=Re.findOne(".modal.show");_&&hn.getInstance(_).hide(),hn.getOrCreateInstance(u).toggle(this)}),Ta(hn),Ci(hn);const si=".bs.offcanvas",ai=".data-api",$r=`load${si}${ai}`,Ot="show",Ye="showing",ka="hiding",Cn=".offcanvas.show",Ys=`show${si}`,Zo=`shown${si}`,_r=`hide${si}`,Jn=`hidePrevented${si}`,$n=`hidden${si}`,Ha=`resize${si}`,Zs=`click${si}${ai}`,Js=`keydown.dismiss${si}`,$s={backdrop:!0,keyboard:!0,scroll:!1},Ks={backdrop:"(boolean|string)",keyboard:"boolean",scroll:"boolean"};class Xi extends Ni{constructor(u,_){super(u,_),this._isShown=!1,this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._addEventListeners()}static get Default(){return $s}static get DefaultType(){return Ks}static get NAME(){return"offcanvas"}toggle(u){return this._isShown?this.hide():this.show(u)}show(u){this._isShown||he.trigger(this._element,Ys,{relatedTarget:u}).defaultPrevented||(this._isShown=!0,this._backdrop.show(),this._config.scroll||new kt().hide(),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.classList.add(Ye),this._queueCallback(()=>{this._config.scroll&&!this._config.backdrop||this._focustrap.activate(),this._element.classList.add(Ot),this._element.classList.remove(Ye),he.trigger(this._element,Zo,{relatedTarget:u})},this._element,!0))}hide(){this._isShown&&(he.trigger(this._element,_r).defaultPrevented||(this._focustrap.deactivate(),this._element.blur(),this._isShown=!1,this._element.classList.add(ka),this._backdrop.hide(),this._queueCallback(()=>{this._element.classList.remove(Ot,ka),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._config.scroll||new kt().reset(),he.trigger(this._element,$n)},this._element,!0)))}dispose(){this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}_initializeBackDrop(){const u=!!this._config.backdrop;return new Zn({className:"offcanvas-backdrop",isVisible:u,isAnimated:!0,rootElement:this._element.parentNode,clickCallback:u?()=>{this._config.backdrop!=="static"?this.hide():he.trigger(this._element,Jn)}:null})}_initializeFocusTrap(){return new za({trapElement:this._element})}_addEventListeners(){he.on(this._element,Js,u=>{u.key==="Escape"&&(this._config.keyboard?this.hide():he.trigger(this._element,Jn))})}static jQueryInterface(u){return this.each(function(){const _=Xi.getOrCreateInstance(this,u);if(typeof u=="string"){if(_[u]===void 0||u.startsWith("_")||u==="constructor")throw new TypeError(`No method named "${u}"`);_[u](this)}})}}he.on(document,Zs,'[data-bs-toggle="offcanvas"]',function(S){const u=Re.getElementFromSelector(this);if(["A","AREA"].includes(this.tagName)&&S.preventDefault(),Fn(this))return;he.one(u,$n,()=>{Rr(this)&&this.focus()});const _=Re.findOne(Cn);_&&_!==u&&Xi.getInstance(_).hide(),Xi.getOrCreateInstance(u).toggle(this)}),he.on(window,$r,()=>{for(const S of Re.find(Cn))Xi.getOrCreateInstance(S).show()}),he.on(window,Ha,()=>{for(const S of Re.find("[aria-modal][class*=show][class*=offcanvas-]"))getComputedStyle(S).position!=="fixed"&&Xi.getOrCreateInstance(S).hide()}),Ta(Xi),Ci(Xi);const Ga={"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},Jo=new Set(["background","cite","href","itemtype","longdesc","poster","src","xlink:href"]),Qs=/^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:/?#]*(?:[/?#]|$))/i,ea=(S,u)=>{const _=S.nodeName.toLowerCase();return u.includes(_)?!Jo.has(_)||!!Qs.test(S.nodeValue):u.filter(w=>w instanceof RegExp).some(w=>w.test(_))},Ft={allowList:Ga,content:{},extraClass:"",html:!1,sanitize:!0,sanitizeFn:null,template:"<div></div>"},ta={allowList:"object",content:"object",extraClass:"(string|function)",html:"boolean",sanitize:"boolean",sanitizeFn:"(null|function)",template:"string"},Kn={entry:"(string|element|function|null)",selector:"(string|element)"};class vr extends Cs{constructor(u){super(),this._config=this._getConfig(u)}static get Default(){return Ft}static get DefaultType(){return ta}static get NAME(){return"TemplateFactory"}getContent(){return Object.values(this._config.content).map(u=>this._resolvePossibleFunction(u)).filter(Boolean)}hasContent(){return this.getContent().length>0}changeContent(u){return this._checkContent(u),this._config.content={...this._config.content,...u},this}toHtml(){const u=document.createElement("div");u.innerHTML=this._maybeSanitize(this._config.template);for(const[B,F]of Object.entries(this._config.content))this._setContent(u,F,B);const _=u.children[0],w=this._resolvePossibleFunction(this._config.extraClass);return w&&_.classList.add(...w.split(" ")),_}_typeCheckConfig(u){super._typeCheckConfig(u),this._checkContent(u.content)}_checkContent(u){for(const[_,w]of Object.entries(u))super._typeCheckConfig({selector:_,entry:w},Kn)}_setContent(u,_,w){const B=Re.findOne(w,u);B&&((_=this._resolvePossibleFunction(_))?vn(_)?this._putElementInTemplate(On(_),B):this._config.html?B.innerHTML=this._maybeSanitize(_):B.textContent=_:B.remove())}_maybeSanitize(u){return this._config.sanitize?function(_,w,B){if(!_.length)return _;if(B&&typeof B=="function")return B(_);const F=new window.DOMParser().parseFromString(_,"text/html"),j=[].concat(...F.body.querySelectorAll("*"));for(const re of j){const pe=re.nodeName.toLowerCase();if(!Object.keys(w).includes(pe)){re.remove();continue}const Me=[].concat(...re.attributes),we=[].concat(w["*"]||[],w[pe]||[]);for(const ge of Me)ea(ge,we)||re.removeAttribute(ge.nodeName)}return F.body.innerHTML}(u,this._config.allowList,this._config.sanitizeFn):u}_resolvePossibleFunction(u){return hi(u,[this])}_putElementInTemplate(u,_){if(this._config.html)return _.innerHTML="",void _.append(u);_.textContent=u.textContent}}const $t=new Set(["sanitize","allowList","sanitizeFn"]),ia="fade",Kr="show",Pi=".modal",Qr="hide.bs.modal",Tt="hover",Rn="focus",$o={AUTO:"auto",TOP:"top",RIGHT:Ai()?"left":"right",BOTTOM:"bottom",LEFT:Ai()?"right":"left"},es={allowList:Ga,animation:!0,boundary:"clippingParents",container:!1,customClass:"",delay:0,fallbackPlacements:["top","right","bottom","left"],html:!1,offset:[0,6],placement:"top",popperConfig:null,sanitize:!0,sanitizeFn:null,selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',title:"",trigger:"hover focus"},Ko={allowList:"object",animation:"boolean",boundary:"(string|element)",container:"(string|element|boolean)",customClass:"(string|function)",delay:"(number|object)",fallbackPlacements:"array",html:"boolean",offset:"(array|string|function)",placement:"(string|function)",popperConfig:"(null|object|function)",sanitize:"boolean",sanitizeFn:"(null|function)",selector:"(string|boolean)",template:"string",title:"(string|element|function)",trigger:"string"};class un extends Ni{constructor(u,_){if(Ue===void 0)throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org)");super(u,_),this._isEnabled=!0,this._timeout=0,this._isHovered=null,this._activeTrigger={},this._popper=null,this._templateFactory=null,this._newContent=null,this.tip=null,this._setListeners(),this._config.selector||this._fixTitle()}static get Default(){return es}static get DefaultType(){return Ko}static get NAME(){return"tooltip"}enable(){this._isEnabled=!0}disable(){this._isEnabled=!1}toggleEnabled(){this._isEnabled=!this._isEnabled}toggle(){this._isEnabled&&(this._activeTrigger.click=!this._activeTrigger.click,this._isShown()?this._leave():this._enter())}dispose(){clearTimeout(this._timeout),he.off(this._element.closest(Pi),Qr,this._hideModalHandler),this._element.getAttribute("data-bs-original-title")&&this._element.setAttribute("title",this._element.getAttribute("data-bs-original-title")),this._disposePopper(),super.dispose()}show(){if(this._element.style.display==="none")throw new Error("Please use show on visible elements");if(!this._isWithContent()||!this._isEnabled)return;const u=he.trigger(this._element,this.constructor.eventName("show")),_=(lc(this._element)||this._element.ownerDocument.documentElement).contains(this._element);if(u.defaultPrevented||!_)return;this._disposePopper();const w=this._getTipElement();this._element.setAttribute("aria-describedby",w.getAttribute("id"));const{container:B}=this._config;if(this._element.ownerDocument.documentElement.contains(this.tip)||(B.append(w),he.trigger(this._element,this.constructor.eventName("inserted"))),this._popper=this._createPopper(w),w.classList.add(Kr),"ontouchstart"in document.documentElement)for(const F of[].concat(...document.body.children))he.on(F,"mouseover",wa);this._queueCallback(()=>{he.trigger(this._element,this.constructor.eventName("shown")),this._isHovered===!1&&this._leave(),this._isHovered=!1},this.tip,this._isAnimated())}hide(){if(this._isShown()&&!he.trigger(this._element,this.constructor.eventName("hide")).defaultPrevented){if(this._getTipElement().classList.remove(Kr),"ontouchstart"in document.documentElement)for(const u of[].concat(...document.body.children))he.off(u,"mouseover",wa);this._activeTrigger.click=!1,this._activeTrigger[Rn]=!1,this._activeTrigger[Tt]=!1,this._isHovered=null,this._queueCallback(()=>{this._isWithActiveTrigger()||(this._isHovered||this._disposePopper(),this._element.removeAttribute("aria-describedby"),he.trigger(this._element,this.constructor.eventName("hidden")))},this.tip,this._isAnimated())}}update(){this._popper&&this._popper.update()}_isWithContent(){return!!this._getTitle()}_getTipElement(){return this.tip||(this.tip=this._createTipElement(this._newContent||this._getContentForTemplate())),this.tip}_createTipElement(u){const _=this._getTemplateFactory(u).toHtml();if(!_)return null;_.classList.remove(ia,Kr),_.classList.add(`bs-${this.constructor.NAME}-auto`);const w=(B=>{do B+=Math.floor(1e6*Math.random());while(document.getElementById(B));return B})(this.constructor.NAME).toString();return _.setAttribute("id",w),this._isAnimated()&&_.classList.add(ia),_}setContent(u){this._newContent=u,this._isShown()&&(this._disposePopper(),this.show())}_getTemplateFactory(u){return this._templateFactory?this._templateFactory.changeContent(u):this._templateFactory=new vr({...this._config,content:u,extraClass:this._resolvePossibleFunction(this._config.customClass)}),this._templateFactory}_getContentForTemplate(){return{".tooltip-inner":this._getTitle()}}_getTitle(){return this._resolvePossibleFunction(this._config.title)||this._element.getAttribute("data-bs-original-title")}_initializeOnDelegatedTarget(u){return this.constructor.getOrCreateInstance(u.delegateTarget,this._getDelegateConfig())}_isAnimated(){return this._config.animation||this.tip&&this.tip.classList.contains(ia)}_isShown(){return this.tip&&this.tip.classList.contains(Kr)}_createPopper(u){const _=hi(this._config.placement,[this,u,this._element]),w=$o[_.toUpperCase()];return Tn(this._element,u,this._getPopperConfig(w))}_getOffset(){const{offset:u}=this._config;return typeof u=="string"?u.split(",").map(_=>Number.parseInt(_,10)):typeof u=="function"?_=>u(_,this._element):u}_resolvePossibleFunction(u){return hi(u,[this._element])}_getPopperConfig(u){const _={placement:u,modifiers:[{name:"flip",options:{fallbackPlacements:this._config.fallbackPlacements}},{name:"offset",options:{offset:this._getOffset()}},{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"arrow",options:{element:`.${this.constructor.NAME}-arrow`}},{name:"preSetPlacement",enabled:!0,phase:"beforeMain",fn:w=>{this._getTipElement().setAttribute("data-popper-placement",w.state.placement)}}]};return{..._,...hi(this._config.popperConfig,[_])}}_setListeners(){const u=this._config.trigger.split(" ");for(const _ of u)if(_==="click")he.on(this._element,this.constructor.eventName("click"),this._config.selector,w=>{this._initializeOnDelegatedTarget(w).toggle()});else if(_!=="manual"){const w=_===Tt?this.constructor.eventName("mouseenter"):this.constructor.eventName("focusin"),B=_===Tt?this.constructor.eventName("mouseleave"):this.constructor.eventName("focusout");he.on(this._element,w,this._config.selector,F=>{const j=this._initializeOnDelegatedTarget(F);j._activeTrigger[F.type==="focusin"?Rn:Tt]=!0,j._enter()}),he.on(this._element,B,this._config.selector,F=>{const j=this._initializeOnDelegatedTarget(F);j._activeTrigger[F.type==="focusout"?Rn:Tt]=j._element.contains(F.relatedTarget),j._leave()})}this._hideModalHandler=()=>{this._element&&this.hide()},he.on(this._element.closest(Pi),Qr,this._hideModalHandler)}_fixTitle(){const u=this._element.getAttribute("title");u&&(this._element.getAttribute("aria-label")||this._element.textContent.trim()||this._element.setAttribute("aria-label",u),this._element.setAttribute("data-bs-original-title",u),this._element.removeAttribute("title"))}_enter(){this._isShown()||this._isHovered?this._isHovered=!0:(this._isHovered=!0,this._setTimeout(()=>{this._isHovered&&this.show()},this._config.delay.show))}_leave(){this._isWithActiveTrigger()||(this._isHovered=!1,this._setTimeout(()=>{this._isHovered||this.hide()},this._config.delay.hide))}_setTimeout(u,_){clearTimeout(this._timeout),this._timeout=setTimeout(u,_)}_isWithActiveTrigger(){return Object.values(this._activeTrigger).includes(!0)}_getConfig(u){const _=yn.getDataAttributes(this._element);for(const w of Object.keys(_))$t.has(w)&&delete _[w];return u={..._,...typeof u=="object"&&u?u:{}},u=this._mergeConfigObj(u),u=this._configAfterMerge(u),this._typeCheckConfig(u),u}_configAfterMerge(u){return u.container=u.container===!1?document.body:On(u.container),typeof u.delay=="number"&&(u.delay={show:u.delay,hide:u.delay}),typeof u.title=="number"&&(u.title=u.title.toString()),typeof u.content=="number"&&(u.content=u.content.toString()),u}_getDelegateConfig(){const u={};for(const[_,w]of Object.entries(this._config))this.constructor.Default[_]!==w&&(u[_]=w);return u.selector=!1,u.trigger="manual",u}_disposePopper(){this._popper&&(this._popper.destroy(),this._popper=null),this.tip&&(this.tip.remove(),this.tip=null)}static jQueryInterface(u){return this.each(function(){const _=un.getOrCreateInstance(this,u);if(typeof u=="string"){if(_[u]===void 0)throw new TypeError(`No method named "${u}"`);_[u]()}})}}Ci(un);const Nc={...un.Default,content:"",offset:[0,8],placement:"right",template:'<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',trigger:"click"},Oc={...un.DefaultType,content:"(null|string|element|function)"};class Ii extends un{static get Default(){return Nc}static get DefaultType(){return Oc}static get NAME(){return"popover"}_isWithContent(){return this._getTitle()||this._getContent()}_getContentForTemplate(){return{".popover-header":this._getTitle(),".popover-body":this._getContent()}}_getContent(){return this._resolvePossibleFunction(this._config.content)}static jQueryInterface(u){return this.each(function(){const _=Ii.getOrCreateInstance(this,u);if(typeof u=="string"){if(_[u]===void 0)throw new TypeError(`No method named "${u}"`);_[u]()}})}}Ci(Ii);const dn=".bs.scrollspy",na=`activate${dn}`,yr=`click${dn}`,Qo=`load${dn}.data-api`,xr="active",Qn="[href]",qe=".nav-link",fe=`${qe}, .nav-item > ${qe}, .list-group-item`,Di={offset:null,rootMargin:"0px 0px -25%",smoothScroll:!1,target:null,threshold:[.1,.5,1]},ra={offset:"(number|null)",rootMargin:"string",smoothScroll:"boolean",target:"element",threshold:"array"};class ts extends Ni{constructor(u,_){super(u,_),this._targetLinks=new Map,this._observableSections=new Map,this._rootElement=getComputedStyle(this._element).overflowY==="visible"?null:this._element,this._activeTarget=null,this._observer=null,this._previousScrollData={visibleEntryTop:0,parentScrollTop:0},this.refresh()}static get Default(){return Di}static get DefaultType(){return ra}static get NAME(){return"scrollspy"}refresh(){this._initializeTargetsAndObservables(),this._maybeEnableSmoothScroll(),this._observer?this._observer.disconnect():this._observer=this._getNewObserver();for(const u of this._observableSections.values())this._observer.observe(u)}dispose(){this._observer.disconnect(),super.dispose()}_configAfterMerge(u){return u.target=On(u.target)||document.body,u.rootMargin=u.offset?`${u.offset}px 0px -30%`:u.rootMargin,typeof u.threshold=="string"&&(u.threshold=u.threshold.split(",").map(_=>Number.parseFloat(_))),u}_maybeEnableSmoothScroll(){this._config.smoothScroll&&(he.off(this._config.target,yr),he.on(this._config.target,yr,Qn,u=>{const _=this._observableSections.get(u.target.hash);if(_){u.preventDefault();const w=this._rootElement||window,B=_.offsetTop-this._element.offsetTop;if(w.scrollTo)return void w.scrollTo({top:B,behavior:"smooth"});w.scrollTop=B}}))}_getNewObserver(){const u={root:this._rootElement,threshold:this._config.threshold,rootMargin:this._config.rootMargin};return new IntersectionObserver(_=>this._observerCallback(_),u)}_observerCallback(u){const _=j=>this._targetLinks.get(`#${j.target.id}`),w=j=>{this._previousScrollData.visibleEntryTop=j.target.offsetTop,this._process(_(j))},B=(this._rootElement||document.documentElement).scrollTop,F=B>=this._previousScrollData.parentScrollTop;this._previousScrollData.parentScrollTop=B;for(const j of u){if(!j.isIntersecting){this._activeTarget=null,this._clearActiveClass(_(j));continue}const re=j.target.offsetTop>=this._previousScrollData.visibleEntryTop;if(F&&re){if(w(j),!B)return}else F||re||w(j)}}_initializeTargetsAndObservables(){this._targetLinks=new Map,this._observableSections=new Map;const u=Re.find(Qn,this._config.target);for(const _ of u){if(!_.hash||Fn(_))continue;const w=Re.findOne(decodeURI(_.hash),this._element);Rr(w)&&(this._targetLinks.set(decodeURI(_.hash),_),this._observableSections.set(_.hash,w))}}_process(u){this._activeTarget!==u&&(this._clearActiveClass(this._config.target),this._activeTarget=u,u.classList.add(xr),this._activateParents(u),he.trigger(this._element,na,{relatedTarget:u}))}_activateParents(u){if(u.classList.contains("dropdown-item"))Re.findOne(".dropdown-toggle",u.closest(".dropdown")).classList.add(xr);else for(const _ of Re.parents(u,".nav, .list-group"))for(const w of Re.prev(_,fe))w.classList.add(xr)}_clearActiveClass(u){u.classList.remove(xr);const _=Re.find(`${Qn}.${xr}`,u);for(const w of _)w.classList.remove(xr)}static jQueryInterface(u){return this.each(function(){const _=ts.getOrCreateInstance(this,u);if(typeof u=="string"){if(_[u]===void 0||u.startsWith("_")||u==="constructor")throw new TypeError(`No method named "${u}"`);_[u]()}})}}he.on(window,Qo,()=>{for(const S of Re.find('[data-bs-spy="scroll"]'))ts.getOrCreateInstance(S)}),Ci(ts);const er=".bs.tab",Fc=`hide${er}`,Bc=`hidden${er}`,zc=`show${er}`,kc=`shown${er}`,sa=`click${er}`,el=`keydown${er}`,is=`load${er}`,Va="ArrowLeft",Wa="ArrowRight",ja="ArrowUp",aa="ArrowDown",ns="Home",Ln="End",bi="active",Xa="fade",rs="show",qa=".dropdown-toggle",br=`:not(${qa})`,Ya='[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]',oa=`.nav-link${br}, .list-group-item${br}, [role="tab"]${br}, ${Ya}`,Za=`.${bi}[data-bs-toggle="tab"], .${bi}[data-bs-toggle="pill"], .${bi}[data-bs-toggle="list"]`;class tr extends Ni{constructor(u){super(u),this._parent=this._element.closest('.list-group, .nav, [role="tablist"]'),this._parent&&(this._setInitialAttributes(this._parent,this._getChildren()),he.on(this._element,el,_=>this._keydown(_)))}static get NAME(){return"tab"}show(){const u=this._element;if(this._elemIsActive(u))return;const _=this._getActiveElem(),w=_?he.trigger(_,Fc,{relatedTarget:u}):null;he.trigger(u,zc,{relatedTarget:_}).defaultPrevented||w&&w.defaultPrevented||(this._deactivate(_,u),this._activate(u,_))}_activate(u,_){u&&(u.classList.add(bi),this._activate(Re.getElementFromSelector(u)),this._queueCallback(()=>{u.getAttribute("role")==="tab"?(u.removeAttribute("tabindex"),u.setAttribute("aria-selected",!0),this._toggleDropDown(u,!0),he.trigger(u,kc,{relatedTarget:_})):u.classList.add(rs)},u,u.classList.contains(Xa)))}_deactivate(u,_){u&&(u.classList.remove(bi),u.blur(),this._deactivate(Re.getElementFromSelector(u)),this._queueCallback(()=>{u.getAttribute("role")==="tab"?(u.setAttribute("aria-selected",!1),u.setAttribute("tabindex","-1"),this._toggleDropDown(u,!1),he.trigger(u,Bc,{relatedTarget:_})):u.classList.remove(rs)},u,u.classList.contains(Xa)))}_keydown(u){if(![Va,Wa,ja,aa,ns,Ln].includes(u.key))return;u.stopPropagation(),u.preventDefault();const _=this._getChildren().filter(B=>!Fn(B));let w;if([ns,Ln].includes(u.key))w=_[u.key===ns?0:_.length-1];else{const B=[Wa,aa].includes(u.key);w=Lo(_,u.target,B,!0)}w&&(w.focus({preventScroll:!0}),tr.getOrCreateInstance(w).show())}_getChildren(){return Re.find(oa,this._parent)}_getActiveElem(){return this._getChildren().find(u=>this._elemIsActive(u))||null}_setInitialAttributes(u,_){this._setAttributeIfNotExists(u,"role","tablist");for(const w of _)this._setInitialAttributesOnChild(w)}_setInitialAttributesOnChild(u){u=this._getInnerElement(u);const _=this._elemIsActive(u),w=this._getOuterElement(u);u.setAttribute("aria-selected",_),w!==u&&this._setAttributeIfNotExists(w,"role","presentation"),_||u.setAttribute("tabindex","-1"),this._setAttributeIfNotExists(u,"role","tab"),this._setInitialAttributesOnTargetPanel(u)}_setInitialAttributesOnTargetPanel(u){const _=Re.getElementFromSelector(u);_&&(this._setAttributeIfNotExists(_,"role","tabpanel"),u.id&&this._setAttributeIfNotExists(_,"aria-labelledby",`${u.id}`))}_toggleDropDown(u,_){const w=this._getOuterElement(u);if(!w.classList.contains("dropdown"))return;const B=(F,j)=>{const re=Re.findOne(F,w);re&&re.classList.toggle(j,_)};B(qa,bi),B(".dropdown-menu",rs),w.setAttribute("aria-expanded",_)}_setAttributeIfNotExists(u,_,w){u.hasAttribute(_)||u.setAttribute(_,w)}_elemIsActive(u){return u.classList.contains(bi)}_getInnerElement(u){return u.matches(oa)?u:Re.findOne(oa,u)}_getOuterElement(u){return u.closest(".nav-item, .list-group-item")||u}static jQueryInterface(u){return this.each(function(){const _=tr.getOrCreateInstance(this);if(typeof u=="string"){if(_[u]===void 0||u.startsWith("_")||u==="constructor")throw new TypeError(`No method named "${u}"`);_[u]()}})}}he.on(document,sa,Ya,function(S){["A","AREA"].includes(this.tagName)&&S.preventDefault(),Fn(this)||tr.getOrCreateInstance(this).show()}),he.on(window,is,()=>{for(const S of Re.find(Za))tr.getOrCreateInstance(S)}),Ci(tr);const Pn=".bs.toast",Hc=`mouseover${Pn}`,Gc=`mouseout${Pn}`,Vc=`focusin${Pn}`,Wc=`focusout${Pn}`,jc=`hide${Pn}`,Xc=`hidden${Pn}`,qc=`show${Pn}`,Ja=`shown${Pn}`,$a="hide",ss="show",as="showing",tl={animation:"boolean",autohide:"boolean",delay:"number"},il={animation:!0,autohide:!0,delay:5e3};class Mr extends Ni{constructor(u,_){super(u,_),this._timeout=null,this._hasMouseInteraction=!1,this._hasKeyboardInteraction=!1,this._setListeners()}static get Default(){return il}static get DefaultType(){return tl}static get NAME(){return"toast"}show(){he.trigger(this._element,qc).defaultPrevented||(this._clearTimeout(),this._config.animation&&this._element.classList.add("fade"),this._element.classList.remove($a),As(this._element),this._element.classList.add(ss,as),this._queueCallback(()=>{this._element.classList.remove(as),he.trigger(this._element,Ja),this._maybeScheduleHide()},this._element,this._config.animation))}hide(){this.isShown()&&(he.trigger(this._element,jc).defaultPrevented||(this._element.classList.add(as),this._queueCallback(()=>{this._element.classList.add($a),this._element.classList.remove(as,ss),he.trigger(this._element,Xc)},this._element,this._config.animation)))}dispose(){this._clearTimeout(),this.isShown()&&this._element.classList.remove(ss),super.dispose()}isShown(){return this._element.classList.contains(ss)}_maybeScheduleHide(){this._config.autohide&&(this._hasMouseInteraction||this._hasKeyboardInteraction||(this._timeout=setTimeout(()=>{this.hide()},this._config.delay)))}_onInteraction(u,_){switch(u.type){case"mouseover":case"mouseout":this._hasMouseInteraction=_;break;case"focusin":case"focusout":this._hasKeyboardInteraction=_}if(_)return void this._clearTimeout();const w=u.relatedTarget;this._element===w||this._element.contains(w)||this._maybeScheduleHide()}_setListeners(){he.on(this._element,Hc,u=>this._onInteraction(u,!0)),he.on(this._element,Gc,u=>this._onInteraction(u,!1)),he.on(this._element,Vc,u=>this._onInteraction(u,!0)),he.on(this._element,Wc,u=>this._onInteraction(u,!1))}_clearTimeout(){clearTimeout(this._timeout),this._timeout=null}static jQueryInterface(u){return this.each(function(){const _=Mr.getOrCreateInstance(this,u);if(typeof u=="string"){if(_[u]===void 0)throw new TypeError(`No method named "${u}"`);_[u](this)}})}}return Ta(Mr),Ci(Mr),{Alert:Rs,Button:Ls,Carousel:Dr,Collapse:Qi,Dropdown:Xe,Modal:hn,Offcanvas:Xi,Popover:Ii,ScrollSpy:ts,Tab:tr,Toast:Mr,Tooltip:un}}),console.warn('Scripts "build/three.js" and "build/three.min.js" are deprecated with r150+, and will be removed with r160. Please use ES Modules or alternatives: https://threejs.org/docs/index.html#manual/en/introduction/Installation'),function(b,ei){typeof exports=="object"&&typeof module<"u"?ei(exports):typeof define=="function"&&define.amd?define(["exports"],ei):ei((b=typeof globalThis<"u"?globalThis:b||self).THREE={})}(this,function(b){"use strict";const ei="159",Ea="attached",Po="detached",ui="",Dt="srgb",Oi="srgb-linear",Qi="display-p3",Ut="display-p3-linear",Gt="linear",$e="srgb",Nt="rec709",xn="p3",bn="300 es";class Fi{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const n=i.indexOf(t);n!==-1&&i.splice(n,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const t=this._listeners[e.type];if(t!==void 0){e.target=this;const i=t.slice(0);for(let n=0,s=i.length;n<s;n++)i[n].call(this,e);e.target=null}}}const zt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Ds=1234567;const Mn=Math.PI/180,zn=180/Math.PI;function ti(){const r=4294967295*Math.random()|0,e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(zt[255&r]+zt[r>>8&255]+zt[r>>16&255]+zt[r>>24&255]+"-"+zt[255&e]+zt[e>>8&255]+"-"+zt[e>>16&15|64]+zt[e>>24&255]+"-"+zt[63&t|128]+zt[t>>8&255]+"-"+zt[t>>16&255]+zt[t>>24&255]+zt[255&i]+zt[i>>8&255]+zt[i>>16&255]+zt[i>>24&255]).toLowerCase()}function Mt(r,e,t){return Math.max(e,Math.min(t,r))}function Us(r,e){return(r%e+e)%e}function lr(r,e,t){return(1-t)*r+t*e}function Ns(r){return(r&r-1)==0&&r!==0}function Fr(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function Yt(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function je(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(4294967295*r);case Uint16Array:return Math.round(65535*r);case Uint8Array:return Math.round(255*r);case Int32Array:return Math.round(2147483647*r);case Int16Array:return Math.round(32767*r);case Int8Array:return Math.round(127*r);default:throw new Error("Invalid component type.")}}const Bi={DEG2RAD:Mn,RAD2DEG:zn,generateUUID:ti,clamp:Mt,euclideanModulo:Us,mapLinear:function(r,e,t,i,n){return i+(r-e)*(n-i)/(t-e)},inverseLerp:function(r,e,t){return r!==e?(t-r)/(e-r):0},lerp:lr,damp:function(r,e,t,i){return lr(r,e,1-Math.exp(-t*i))},pingpong:function(r,e=1){return e-Math.abs(Us(r,2*e)-e)},smoothstep:function(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e))*r*(3-2*r)},smootherstep:function(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e))*r*r*(r*(6*r-15)+10)},randInt:function(r,e){return r+Math.floor(Math.random()*(e-r+1))},randFloat:function(r,e){return r+Math.random()*(e-r)},randFloatSpread:function(r){return r*(.5-Math.random())},seededRandom:function(r){r!==void 0&&(Ds=r);let e=Ds+=1831565813;return e=Math.imul(e^e>>>15,1|e),e^=e+Math.imul(e^e>>>7,61|e),((e^e>>>14)>>>0)/4294967296},degToRad:function(r){return r*Mn},radToDeg:function(r){return r*zn},isPowerOfTwo:Ns,ceilPowerOfTwo:function(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))},floorPowerOfTwo:Fr,setQuaternionFromProperEuler:function(r,e,t,i,n){const s=Math.cos,a=Math.sin,o=s(t/2),l=a(t/2),c=s((e+i)/2),h=a((e+i)/2),d=s((e-i)/2),p=a((e-i)/2),m=s((i-e)/2),f=a((i-e)/2);switch(n){case"XYX":r.set(o*h,l*d,l*p,o*c);break;case"YZY":r.set(l*p,o*h,l*d,o*c);break;case"ZXZ":r.set(l*d,l*p,o*h,o*c);break;case"XZX":r.set(o*h,l*f,l*m,o*c);break;case"YXY":r.set(l*m,o*h,l*f,o*c);break;case"ZYZ":r.set(l*f,l*m,o*h,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}},normalize:je,denormalize:Yt};class te{constructor(e=0,t=0){te.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Mt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),n=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*i-a*n+e.x,this.y=s*n+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Oe{constructor(e,t,i,n,s,a,o,l,c){Oe.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,a,o,l,c)}set(e,t,i,n,s,a,o,l,c){const h=this.elements;return h[0]=e,h[1]=n,h[2]=o,h[3]=t,h[4]=s,h[5]=l,h[6]=i,h[7]=a,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,a=i[0],o=i[3],l=i[6],c=i[1],h=i[4],d=i[7],p=i[2],m=i[5],f=i[8],v=n[0],g=n[3],M=n[6],y=n[1],x=n[4],T=n[7],A=n[2],C=n[5],D=n[8];return s[0]=a*v+o*y+l*A,s[3]=a*g+o*x+l*C,s[6]=a*M+o*T+l*D,s[1]=c*v+h*y+d*A,s[4]=c*g+h*x+d*C,s[7]=c*M+h*T+d*D,s[2]=p*v+m*y+f*A,s[5]=p*g+m*x+f*C,s[8]=p*M+m*T+f*D,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],h=e[8];return t*a*h-t*o*c-i*s*h+i*o*l+n*s*c-n*a*l}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],h=e[8],d=h*a-o*c,p=o*l-h*s,m=c*s-a*l,f=t*d+i*p+n*m;if(f===0)return this.set(0,0,0,0,0,0,0,0,0);const v=1/f;return e[0]=d*v,e[1]=(n*c-h*i)*v,e[2]=(o*i-n*a)*v,e[3]=p*v,e[4]=(h*t-n*l)*v,e[5]=(n*s-o*t)*v,e[6]=m*v,e[7]=(i*l-c*t)*v,e[8]=(a*t-i*s)*v,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,s,a,o){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*a+c*o)+a+e,-n*c,n*l,-n*(-c*a+l*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(ii.makeScale(e,t)),this}rotate(e){return this.premultiply(ii.makeRotation(-e)),this}translate(e,t){return this.premultiply(ii.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const ii=new Oe;function Os(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const Pa={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Zt(r,e){return new Pa[r](e)}function Ri(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function Br(){const r=Ri("canvas");return r.style.display="block",r}const kn={};function Hn(r){r in kn||(kn[r]=!0,console.warn(r))}const Ia=new Oe().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Gn=new Oe().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),cr={[Oi]:{transfer:Gt,primaries:Nt,toReference:r=>r,fromReference:r=>r},[Dt]:{transfer:$e,primaries:Nt,toReference:r=>r.convertSRGBToLinear(),fromReference:r=>r.convertLinearToSRGB()},[Ut]:{transfer:Gt,primaries:xn,toReference:r=>r.applyMatrix3(Gn),fromReference:r=>r.applyMatrix3(Ia)},[Qi]:{transfer:$e,primaries:xn,toReference:r=>r.convertSRGBToLinear().applyMatrix3(Gn),fromReference:r=>r.applyMatrix3(Ia).convertLinearToSRGB()}},ko=new Set([Oi,Ut]),Qe={enabled:!0,_workingColorSpace:Oi,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(r){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!r},get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(r){if(!ko.has(r))throw new Error(`Unsupported working color space, "${r}".`);this._workingColorSpace=r},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const i=cr[e].toReference;return(0,cr[t].fromReference)(i(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this._workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this._workingColorSpace)},getPrimaries:function(r){return cr[r].primaries},getTransfer:function(r){return r===ui?Gt:cr[r].transfer}};function hr(r){return r<.04045?.0773993808*r:Math.pow(.9478672986*r+.0521327014,2.4)}function zi(r){return r<.0031308?12.92*r:1.055*Math.pow(r,.41666)-.055}let en;class Fs{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{en===void 0&&(en=Ri("canvas")),en.width=e.width,en.height=e.height;const i=en.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=en}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Ri("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const n=i.getImageData(0,0,e.width,e.height),s=n.data;for(let a=0;a<s.length;a++)s[a]=255*hr(s[a]/255);return i.putImageData(n,0,0),t}if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(255*hr(t[i]/255)):t[i]=hr(t[i]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let zr=0;class tn{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:zr++}),this.uuid=ti(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(n!==null){let s;if(Array.isArray(n)){s=[];for(let a=0,o=n.length;a<o;a++)n[a].isDataTexture?s.push(Vn(n[a].image)):s.push(Vn(n[a]))}else s=Vn(n);i.url=s}return t||(e.images[this.uuid]=i),i}}function Vn(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Fs.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Ho=0;class St extends Fi{constructor(e=St.DEFAULT_IMAGE,t=St.DEFAULT_MAPPING,i=1001,n=1001,s=1006,a=1008,o=1023,l=1009,c=St.DEFAULT_ANISOTROPY,h=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Ho++}),this.uuid=ti(),this.name="",this.source=new tn(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=s,this.minFilter=a,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=l,this.offset=new te(0,0),this.repeat=new te(1,1),this.center=new te(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Oe,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof h=="string"?this.colorSpace=h:(Hn("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=h===3001?Dt:ui),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==300)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case 1e3:e.x=e.x-Math.floor(e.x);break;case 1001:e.x=e.x<0?0:1;break;case 1002:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case 1e3:e.y=e.y-Math.floor(e.y);break;case 1001:e.y=e.y<0?0:1;break;case 1002:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Hn("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===Dt?3001:3e3}set encoding(e){Hn("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===3001?Dt:ui}}St.DEFAULT_IMAGE=null,St.DEFAULT_MAPPING=300,St.DEFAULT_ANISOTROPY=1;class dt{constructor(e=0,t=0,i=0,n=1){dt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*n+a[12]*s,this.y=a[1]*t+a[5]*i+a[9]*n+a[13]*s,this.z=a[2]*t+a[6]*i+a[10]*n+a[14]*s,this.w=a[3]*t+a[7]*i+a[11]*n+a[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,s;const l=e.elements,c=l[0],h=l[4],d=l[8],p=l[1],m=l[5],f=l[9],v=l[2],g=l[6],M=l[10];if(Math.abs(h-p)<.01&&Math.abs(d-v)<.01&&Math.abs(f-g)<.01){if(Math.abs(h+p)<.1&&Math.abs(d+v)<.1&&Math.abs(f+g)<.1&&Math.abs(c+m+M-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const x=(c+1)/2,T=(m+1)/2,A=(M+1)/2,C=(h+p)/4,D=(d+v)/4,V=(f+g)/4;return x>T&&x>A?x<.01?(i=0,n=.707106781,s=.707106781):(i=Math.sqrt(x),n=C/i,s=D/i):T>A?T<.01?(i=.707106781,n=0,s=.707106781):(n=Math.sqrt(T),i=C/n,s=V/n):A<.01?(i=.707106781,n=.707106781,s=0):(s=Math.sqrt(A),i=D/s,n=V/s),this.set(i,n,s,t),this}let y=Math.sqrt((g-f)*(g-f)+(d-v)*(d-v)+(p-h)*(p-h));return Math.abs(y)<.001&&(y=1),this.x=(g-f)/y,this.y=(d-v)/y,this.z=(p-h)/y,this.w=Math.acos((c+m+M-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Wn extends Fi{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new dt(0,0,e,t),this.scissorTest=!1,this.viewport=new dt(0,0,e,t);const n={width:e,height:t,depth:1};i.encoding!==void 0&&(Hn("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),i.colorSpace=i.encoding===3001?Dt:ui),i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:1006,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},i),this.texture=new St(n,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps,this.texture.internalFormat=i.internalFormat,this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}setSize(e,t,i=1){this.width===e&&this.height===t&&this.depth===i||(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new tn(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Li extends Wn{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class kr extends St{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Hr extends St{constructor(e=null,t=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Vt{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,s,a,o){let l=i[n+0],c=i[n+1],h=i[n+2],d=i[n+3];const p=s[a+0],m=s[a+1],f=s[a+2],v=s[a+3];if(o===0)return e[t+0]=l,e[t+1]=c,e[t+2]=h,void(e[t+3]=d);if(o===1)return e[t+0]=p,e[t+1]=m,e[t+2]=f,void(e[t+3]=v);if(d!==v||l!==p||c!==m||h!==f){let g=1-o;const M=l*p+c*m+h*f+d*v,y=M>=0?1:-1,x=1-M*M;if(x>Number.EPSILON){const A=Math.sqrt(x),C=Math.atan2(A,M*y);g=Math.sin(g*C)/A,o=Math.sin(o*C)/A}const T=o*y;if(l=l*g+p*T,c=c*g+m*T,h=h*g+f*T,d=d*g+v*T,g===1-o){const A=1/Math.sqrt(l*l+c*c+h*h+d*d);l*=A,c*=A,h*=A,d*=A}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=d}static multiplyQuaternionsFlat(e,t,i,n,s,a){const o=i[n],l=i[n+1],c=i[n+2],h=i[n+3],d=s[a],p=s[a+1],m=s[a+2],f=s[a+3];return e[t]=o*f+h*d+l*m-c*p,e[t+1]=l*f+h*p+c*d-o*m,e[t+2]=c*f+h*m+o*p-l*d,e[t+3]=h*f-o*d-l*p-c*m,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const i=e._x,n=e._y,s=e._z,a=e._order,o=Math.cos,l=Math.sin,c=o(i/2),h=o(n/2),d=o(s/2),p=l(i/2),m=l(n/2),f=l(s/2);switch(a){case"XYZ":this._x=p*h*d+c*m*f,this._y=c*m*d-p*h*f,this._z=c*h*f+p*m*d,this._w=c*h*d-p*m*f;break;case"YXZ":this._x=p*h*d+c*m*f,this._y=c*m*d-p*h*f,this._z=c*h*f-p*m*d,this._w=c*h*d+p*m*f;break;case"ZXY":this._x=p*h*d-c*m*f,this._y=c*m*d+p*h*f,this._z=c*h*f+p*m*d,this._w=c*h*d-p*m*f;break;case"ZYX":this._x=p*h*d-c*m*f,this._y=c*m*d+p*h*f,this._z=c*h*f-p*m*d,this._w=c*h*d+p*m*f;break;case"YZX":this._x=p*h*d+c*m*f,this._y=c*m*d+p*h*f,this._z=c*h*f-p*m*d,this._w=c*h*d-p*m*f;break;case"XZY":this._x=p*h*d-c*m*f,this._y=c*m*d-p*h*f,this._z=c*h*f+p*m*d,this._w=c*h*d+p*m*f;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],n=t[4],s=t[8],a=t[1],o=t[5],l=t[9],c=t[2],h=t[6],d=t[10],p=i+o+d;if(p>0){const m=.5/Math.sqrt(p+1);this._w=.25/m,this._x=(h-l)*m,this._y=(s-c)*m,this._z=(a-n)*m}else if(i>o&&i>d){const m=2*Math.sqrt(1+i-o-d);this._w=(h-l)/m,this._x=.25*m,this._y=(n+a)/m,this._z=(s+c)/m}else if(o>d){const m=2*Math.sqrt(1+o-i-d);this._w=(s-c)/m,this._x=(n+a)/m,this._y=.25*m,this._z=(l+h)/m}else{const m=2*Math.sqrt(1+d-i-o);this._w=(a-n)/m,this._x=(s+c)/m,this._y=(l+h)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Mt(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,n=e._y,s=e._z,a=e._w,o=t._x,l=t._y,c=t._z,h=t._w;return this._x=i*h+a*o+n*c-s*l,this._y=n*h+a*l+s*o-i*c,this._z=s*h+a*c+i*l-n*o,this._w=a*h-i*o-n*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,n=this._y,s=this._z,a=this._w;let o=a*e._w+i*e._x+n*e._y+s*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=i,this._y=n,this._z=s,this;const l=1-o*o;if(l<=Number.EPSILON){const m=1-t;return this._w=m*a+t*this._w,this._x=m*i+t*this._x,this._y=m*n+t*this._y,this._z=m*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),h=Math.atan2(c,o),d=Math.sin((1-t)*h)/c,p=Math.sin(t*h)/c;return this._w=a*d+this._w*p,this._x=i*d+this._x*p,this._y=n*d+this._y*p,this._z=s*d+this._z*p,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=Math.random(),t=Math.sqrt(1-e),i=Math.sqrt(e),n=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(n),i*Math.sin(s),i*Math.cos(s),t*Math.sin(n))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class R{constructor(e=0,t=0,i=0){R.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Gr.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Gr.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*n,this.y=s[1]*t+s[4]*i+s[7]*n,this.z=s[2]*t+s[5]*i+s[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=e.elements,a=1/(s[3]*t+s[7]*i+s[11]*n+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*n+s[12])*a,this.y=(s[1]*t+s[5]*i+s[9]*n+s[13])*a,this.z=(s[2]*t+s[6]*i+s[10]*n+s[14])*a,this}applyQuaternion(e){const t=this.x,i=this.y,n=this.z,s=e.x,a=e.y,o=e.z,l=e.w,c=2*(a*n-o*i),h=2*(o*t-s*n),d=2*(s*i-a*t);return this.x=t+l*c+a*d-o*h,this.y=i+l*h+o*c-s*d,this.z=n+l*d+s*h-a*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*n,this.y=s[1]*t+s[5]*i+s[9]*n,this.z=s[2]*t+s[6]*i+s[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,n=e.y,s=e.z,a=t.x,o=t.y,l=t.z;return this.x=n*l-s*o,this.y=s*a-i*l,this.z=i*o-n*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Da.copy(this).projectOnVector(e),this.sub(Da)}reflect(e){return this.sub(Da.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Mt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Da=new R,Gr=new Vt;class Jt{constructor(e=new R(1/0,1/0,1/0),t=new R(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(di.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(di.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=di.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const s=i.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let a=0,o=s.count;a<o;a++)e.isMesh===!0?e.getVertexPosition(a,di):di.fromBufferAttribute(s,a),di.applyMatrix4(e.matrixWorld),this.expandByPoint(di);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),ur.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),ur.copy(i.boundingBox)),ur.applyMatrix4(e.matrixWorld),this.union(ur)}const n=e.children;for(let s=0,a=n.length;s<a;s++)this.expandByObject(n[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,di),di.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Vi),Bs.subVectors(this.max,Vi),Sn.subVectors(e.a,Vi),jn.subVectors(e.b,Vi),Hi.subVectors(e.c,Vi),Gi.subVectors(jn,Sn),nn.subVectors(Hi,jn),wn.subVectors(Sn,Hi);let t=[0,-Gi.z,Gi.y,0,-nn.z,nn.y,0,-wn.z,wn.y,Gi.z,0,-Gi.x,nn.z,0,-nn.x,wn.z,0,-wn.x,-Gi.y,Gi.x,0,-nn.y,nn.x,0,-wn.y,wn.x,0];return!!zs(t,Sn,jn,Hi,Bs)&&(t=[1,0,0,0,1,0,0,0,1],!!zs(t,Sn,jn,Hi,Bs)&&(Vr.crossVectors(Gi,nn),t=[Vr.x,Vr.y,Vr.z],zs(t,Sn,jn,Hi,Bs)))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,di).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=.5*this.getSize(di).length()),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(ki[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),ki[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),ki[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),ki[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),ki[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),ki[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),ki[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),ki[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(ki)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const ki=[new R,new R,new R,new R,new R,new R,new R,new R],di=new R,ur=new Jt,Sn=new R,jn=new R,Hi=new R,Gi=new R,nn=new R,wn=new R,Vi=new R,Bs=new R,Vr=new R,En=new R;function zs(r,e,t,i,n){for(let s=0,a=r.length-3;s<=a;s+=3){En.fromArray(r,s);const o=n.x*Math.abs(En.x)+n.y*Math.abs(En.y)+n.z*Math.abs(En.z),l=e.dot(En),c=t.dot(En),h=i.dot(En);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>o)return!1}return!0}const Go=new Jt,dr=new R,Wr=new R;class Wt{constructor(e=new R,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):Go.setFromPoints(e).getCenter(i);let n=0;for(let s=0,a=e.length;s<a;s++)n=Math.max(n,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;dr.subVectors(e,this.center);const t=dr.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),n=.5*(i-this.radius);this.center.addScaledVector(dr,n/i),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Wr.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(dr.copy(e.center).add(Wr)),this.expandByPoint(dr.copy(e.center).sub(Wr))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const rn=new R,Ua=new R,jr=new R,sn=new R,pr=new R,ks=new R,Na=new R;class Tn{constructor(e=new R,t=new R(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,rn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=rn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(rn.copy(this.origin).addScaledVector(this.direction,t),rn.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){Ua.copy(e).add(t).multiplyScalar(.5),jr.copy(t).sub(e).normalize(),sn.copy(this.origin).sub(Ua);const s=.5*e.distanceTo(t),a=-this.direction.dot(jr),o=sn.dot(this.direction),l=-sn.dot(jr),c=sn.lengthSq(),h=Math.abs(1-a*a);let d,p,m,f;if(h>0)if(d=a*l-o,p=a*o-l,f=s*h,d>=0)if(p>=-f)if(p<=f){const v=1/h;d*=v,p*=v,m=d*(d+a*p+2*o)+p*(a*d+p+2*l)+c}else p=s,d=Math.max(0,-(a*p+o)),m=-d*d+p*(p+2*l)+c;else p=-s,d=Math.max(0,-(a*p+o)),m=-d*d+p*(p+2*l)+c;else p<=-f?(d=Math.max(0,-(-a*s+o)),p=d>0?-s:Math.min(Math.max(-s,-l),s),m=-d*d+p*(p+2*l)+c):p<=f?(d=0,p=Math.min(Math.max(-s,-l),s),m=p*(p+2*l)+c):(d=Math.max(0,-(a*s+o)),p=d>0?s:Math.min(Math.max(-s,-l),s),m=-d*d+p*(p+2*l)+c);else p=a>0?-s:s,d=Math.max(0,-(a*p+o)),m=-d*d+p*(p+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,d),n&&n.copy(Ua).addScaledVector(jr,p),m}intersectSphere(e,t){rn.subVectors(e.center,this.origin);const i=rn.dot(this.direction),n=rn.dot(rn)-i*i,s=e.radius*e.radius;if(n>s)return null;const a=Math.sqrt(s-n),o=i-a,l=i+a;return l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0?!0:e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,n,s,a,o,l;const c=1/this.direction.x,h=1/this.direction.y,d=1/this.direction.z,p=this.origin;return c>=0?(i=(e.min.x-p.x)*c,n=(e.max.x-p.x)*c):(i=(e.max.x-p.x)*c,n=(e.min.x-p.x)*c),h>=0?(s=(e.min.y-p.y)*h,a=(e.max.y-p.y)*h):(s=(e.max.y-p.y)*h,a=(e.min.y-p.y)*h),i>a||s>n?null:((s>i||isNaN(i))&&(i=s),(a<n||isNaN(n))&&(n=a),d>=0?(o=(e.min.z-p.z)*d,l=(e.max.z-p.z)*d):(o=(e.max.z-p.z)*d,l=(e.min.z-p.z)*d),i>l||o>n?null:((o>i||i!=i)&&(i=o),(l<n||n!=n)&&(n=l),n<0?null:this.at(i>=0?i:n,t)))}intersectsBox(e){return this.intersectBox(e,rn)!==null}intersectTriangle(e,t,i,n,s){pr.subVectors(t,e),ks.subVectors(i,e),Na.crossVectors(pr,ks);let a,o=this.direction.dot(Na);if(o>0){if(n)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}sn.subVectors(this.origin,e);const l=a*this.direction.dot(ks.crossVectors(sn,ks));if(l<0)return null;const c=a*this.direction.dot(pr.cross(sn));if(c<0||l+c>o)return null;const h=-a*sn.dot(Na);return h<0?null:this.at(h/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Ue{constructor(e,t,i,n,s,a,o,l,c,h,d,p,m,f,v,g){Ue.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,a,o,l,c,h,d,p,m,f,v,g)}set(e,t,i,n,s,a,o,l,c,h,d,p,m,f,v,g){const M=this.elements;return M[0]=e,M[4]=t,M[8]=i,M[12]=n,M[1]=s,M[5]=a,M[9]=o,M[13]=l,M[2]=c,M[6]=h,M[10]=d,M[14]=p,M[3]=m,M[7]=f,M[11]=v,M[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ue().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,n=1/Xn.setFromMatrixColumn(e,0).length(),s=1/Xn.setFromMatrixColumn(e,1).length(),a=1/Xn.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*a,t[9]=i[9]*a,t[10]=i[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,n=e.y,s=e.z,a=Math.cos(i),o=Math.sin(i),l=Math.cos(n),c=Math.sin(n),h=Math.cos(s),d=Math.sin(s);if(e.order==="XYZ"){const p=a*h,m=a*d,f=o*h,v=o*d;t[0]=l*h,t[4]=-l*d,t[8]=c,t[1]=m+f*c,t[5]=p-v*c,t[9]=-o*l,t[2]=v-p*c,t[6]=f+m*c,t[10]=a*l}else if(e.order==="YXZ"){const p=l*h,m=l*d,f=c*h,v=c*d;t[0]=p+v*o,t[4]=f*o-m,t[8]=a*c,t[1]=a*d,t[5]=a*h,t[9]=-o,t[2]=m*o-f,t[6]=v+p*o,t[10]=a*l}else if(e.order==="ZXY"){const p=l*h,m=l*d,f=c*h,v=c*d;t[0]=p-v*o,t[4]=-a*d,t[8]=f+m*o,t[1]=m+f*o,t[5]=a*h,t[9]=v-p*o,t[2]=-a*c,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){const p=a*h,m=a*d,f=o*h,v=o*d;t[0]=l*h,t[4]=f*c-m,t[8]=p*c+v,t[1]=l*d,t[5]=v*c+p,t[9]=m*c-f,t[2]=-c,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){const p=a*l,m=a*c,f=o*l,v=o*c;t[0]=l*h,t[4]=v-p*d,t[8]=f*d+m,t[1]=d,t[5]=a*h,t[9]=-o*h,t[2]=-c*h,t[6]=m*d+f,t[10]=p-v*d}else if(e.order==="XZY"){const p=a*l,m=a*c,f=o*l,v=o*c;t[0]=l*h,t[4]=-d,t[8]=c*h,t[1]=p*d+v,t[5]=a*h,t[9]=m*d-f,t[2]=f*d-m,t[6]=o*h,t[10]=v*d+p}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Oa,e,Ac)}lookAt(e,t,i){const n=this.elements;return pi.subVectors(e,t),pi.lengthSq()===0&&(pi.z=1),pi.normalize(),an.crossVectors(i,pi),an.lengthSq()===0&&(Math.abs(i.z)===1?pi.x+=1e-4:pi.z+=1e-4,pi.normalize(),an.crossVectors(i,pi)),an.normalize(),Hs.crossVectors(pi,an),n[0]=an.x,n[4]=Hs.x,n[8]=pi.x,n[1]=an.y,n[5]=Hs.y,n[9]=pi.y,n[2]=an.z,n[6]=Hs.z,n[10]=pi.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,a=i[0],o=i[4],l=i[8],c=i[12],h=i[1],d=i[5],p=i[9],m=i[13],f=i[2],v=i[6],g=i[10],M=i[14],y=i[3],x=i[7],T=i[11],A=i[15],C=n[0],D=n[4],V=n[8],k=n[12],K=n[1],z=n[5],O=n[9],se=n[13],oe=n[2],_e=n[6],ve=n[10],ee=n[14],le=n[3],ce=n[7],Y=n[11],ie=n[15];return s[0]=a*C+o*K+l*oe+c*le,s[4]=a*D+o*z+l*_e+c*ce,s[8]=a*V+o*O+l*ve+c*Y,s[12]=a*k+o*se+l*ee+c*ie,s[1]=h*C+d*K+p*oe+m*le,s[5]=h*D+d*z+p*_e+m*ce,s[9]=h*V+d*O+p*ve+m*Y,s[13]=h*k+d*se+p*ee+m*ie,s[2]=f*C+v*K+g*oe+M*le,s[6]=f*D+v*z+g*_e+M*ce,s[10]=f*V+v*O+g*ve+M*Y,s[14]=f*k+v*se+g*ee+M*ie,s[3]=y*C+x*K+T*oe+A*le,s[7]=y*D+x*z+T*_e+A*ce,s[11]=y*V+x*O+T*ve+A*Y,s[15]=y*k+x*se+T*ee+A*ie,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],n=e[8],s=e[12],a=e[1],o=e[5],l=e[9],c=e[13],h=e[2],d=e[6],p=e[10],m=e[14];return e[3]*(+s*l*d-n*c*d-s*o*p+i*c*p+n*o*m-i*l*m)+e[7]*(+t*l*m-t*c*p+s*a*p-n*a*m+n*c*h-s*l*h)+e[11]*(+t*c*d-t*o*m-s*a*d+i*a*m+s*o*h-i*c*h)+e[15]*(-n*o*h-t*l*d+t*o*p+n*a*d-i*a*p+i*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],h=e[8],d=e[9],p=e[10],m=e[11],f=e[12],v=e[13],g=e[14],M=e[15],y=d*g*c-v*p*c+v*l*m-o*g*m-d*l*M+o*p*M,x=f*p*c-h*g*c-f*l*m+a*g*m+h*l*M-a*p*M,T=h*v*c-f*d*c+f*o*m-a*v*m-h*o*M+a*d*M,A=f*d*l-h*v*l-f*o*p+a*v*p+h*o*g-a*d*g,C=t*y+i*x+n*T+s*A;if(C===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const D=1/C;return e[0]=y*D,e[1]=(v*p*s-d*g*s-v*n*m+i*g*m+d*n*M-i*p*M)*D,e[2]=(o*g*s-v*l*s+v*n*c-i*g*c-o*n*M+i*l*M)*D,e[3]=(d*l*s-o*p*s-d*n*c+i*p*c+o*n*m-i*l*m)*D,e[4]=x*D,e[5]=(h*g*s-f*p*s+f*n*m-t*g*m-h*n*M+t*p*M)*D,e[6]=(f*l*s-a*g*s-f*n*c+t*g*c+a*n*M-t*l*M)*D,e[7]=(a*p*s-h*l*s+h*n*c-t*p*c-a*n*m+t*l*m)*D,e[8]=T*D,e[9]=(f*d*s-h*v*s-f*i*m+t*v*m+h*i*M-t*d*M)*D,e[10]=(a*v*s-f*o*s+f*i*c-t*v*c-a*i*M+t*o*M)*D,e[11]=(h*o*s-a*d*s-h*i*c+t*d*c+a*i*m-t*o*m)*D,e[12]=A*D,e[13]=(h*v*n-f*d*n+f*i*p-t*v*p-h*i*g+t*d*g)*D,e[14]=(f*o*n-a*v*n-f*i*l+t*v*l+a*i*g-t*o*g)*D,e[15]=(a*d*n-h*o*n+h*i*l-t*d*l-a*i*p+t*o*p)*D,this}scale(e){const t=this.elements,i=e.x,n=e.y,s=e.z;return t[0]*=i,t[4]*=n,t[8]*=s,t[1]*=i,t[5]*=n,t[9]*=s,t[2]*=i,t[6]*=n,t[10]*=s,t[3]*=i,t[7]*=n,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),n=Math.sin(t),s=1-i,a=e.x,o=e.y,l=e.z,c=s*a,h=s*o;return this.set(c*a+i,c*o-n*l,c*l+n*o,0,c*o+n*l,h*o+i,h*l-n*a,0,c*l-n*o,h*l+n*a,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,s,a){return this.set(1,i,s,0,e,1,a,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){const n=this.elements,s=t._x,a=t._y,o=t._z,l=t._w,c=s+s,h=a+a,d=o+o,p=s*c,m=s*h,f=s*d,v=a*h,g=a*d,M=o*d,y=l*c,x=l*h,T=l*d,A=i.x,C=i.y,D=i.z;return n[0]=(1-(v+M))*A,n[1]=(m+T)*A,n[2]=(f-x)*A,n[3]=0,n[4]=(m-T)*C,n[5]=(1-(p+M))*C,n[6]=(g+y)*C,n[7]=0,n[8]=(f+x)*D,n[9]=(g-y)*D,n[10]=(1-(p+v))*D,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){const n=this.elements;let s=Xn.set(n[0],n[1],n[2]).length();const a=Xn.set(n[4],n[5],n[6]).length(),o=Xn.set(n[8],n[9],n[10]).length();this.determinant()<0&&(s=-s),e.x=n[12],e.y=n[13],e.z=n[14],jt.copy(this);const l=1/s,c=1/a,h=1/o;return jt.elements[0]*=l,jt.elements[1]*=l,jt.elements[2]*=l,jt.elements[4]*=c,jt.elements[5]*=c,jt.elements[6]*=c,jt.elements[8]*=h,jt.elements[9]*=h,jt.elements[10]*=h,t.setFromRotationMatrix(jt),i.x=s,i.y=a,i.z=o,this}makePerspective(e,t,i,n,s,a,o=2e3){const l=this.elements,c=2*s/(t-e),h=2*s/(i-n),d=(t+e)/(t-e),p=(i+n)/(i-n);let m,f;if(o===2e3)m=-(a+s)/(a-s),f=-2*a*s/(a-s);else{if(o!==2001)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);m=-a/(a-s),f=-a*s/(a-s)}return l[0]=c,l[4]=0,l[8]=d,l[12]=0,l[1]=0,l[5]=h,l[9]=p,l[13]=0,l[2]=0,l[6]=0,l[10]=m,l[14]=f,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,i,n,s,a,o=2e3){const l=this.elements,c=1/(t-e),h=1/(i-n),d=1/(a-s),p=(t+e)*c,m=(i+n)*h;let f,v;if(o===2e3)f=(a+s)*d,v=-2*d;else{if(o!==2001)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);f=s*d,v=-1*d}return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-p,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-m,l[2]=0,l[6]=0,l[10]=v,l[14]=-f,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const Xn=new R,jt=new Ue,Oa=new R(0,0,0),Ac=new R(1,1,1),an=new R,Hs=new R,pi=new R,Vo=new Ue,Wo=new Vt;class mr{constructor(e=0,t=0,i=0,n=mr.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const n=e.elements,s=n[0],a=n[4],o=n[8],l=n[1],c=n[5],h=n[9],d=n[2],p=n[6],m=n[10];switch(t){case"XYZ":this._y=Math.asin(Mt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,m),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(p,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Mt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,m),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-d,s),this._z=0);break;case"ZXY":this._x=Math.asin(Mt(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-d,m),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-Mt(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(p,m),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(Mt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-d,s)):(this._x=0,this._y=Math.atan2(o,m));break;case"XZY":this._z=Math.asin(-Mt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(p,c),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-h,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return Vo.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Vo,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Wo.setFromEuler(this),this.setFromQuaternion(Wo,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}mr.DEFAULT_ORDER="XYZ";class Xr{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}isEnabled(e){return(this.mask&(1<<e|0))!=0}}let Cc=0;const qn=new R,_i=new Vt,on=new Ue,Yn=new R,qr=new R,Rc=new R,Lc=new Vt,jo=new R(1,0,0),Xo=new R(0,1,0),qo=new R(0,0,1),Pc={type:"added"},Ic={type:"removed"};class Xe extends Fi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Cc++}),this.uuid=ti(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Xe.DEFAULT_UP.clone();const e=new R,t=new mr,i=new Vt,n=new R(1,1,1);t._onChange(function(){i.setFromEuler(t,!1)}),i._onChange(function(){t.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Ue},normalMatrix:{value:new Oe}}),this.matrix=new Ue,this.matrixWorld=new Ue,this.matrixAutoUpdate=Xe.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Xe.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Xr,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return _i.setFromAxisAngle(e,t),this.quaternion.multiply(_i),this}rotateOnWorldAxis(e,t){return _i.setFromAxisAngle(e,t),this.quaternion.premultiply(_i),this}rotateX(e){return this.rotateOnAxis(jo,e)}rotateY(e){return this.rotateOnAxis(Xo,e)}rotateZ(e){return this.rotateOnAxis(qo,e)}translateOnAxis(e,t){return qn.copy(e).applyQuaternion(this.quaternion),this.position.add(qn.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(jo,e)}translateY(e){return this.translateOnAxis(Xo,e)}translateZ(e){return this.translateOnAxis(qo,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(on.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?Yn.copy(e):Yn.set(e,t,i);const n=this.parent;this.updateWorldMatrix(!0,!1),qr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?on.lookAt(qr,Yn,this.up):on.lookAt(Yn,qr,this.up),this.quaternion.setFromRotationMatrix(on),n&&(on.extractRotation(n.matrixWorld),_i.setFromRotationMatrix(on),this.quaternion.premultiply(_i.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Pc)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Ic)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),on.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),on.multiply(e.parent.matrixWorld)),e.applyMatrix4(on),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){const s=this.children[i].getObjectByProperty(e,t);if(s!==void 0)return s}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const n=this.children;for(let s=0,a=n.length;s<a;s++)n[s].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(qr,e,Rc),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(qr,Lc,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,n=t.length;i<n;i++){const s=t[i];s.matrixWorldAutoUpdate!==!0&&e!==!0||s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const n=this.children;for(let s=0,a=n.length;s<a;s++){const o=n[s];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const n={};function s(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.castShadow===!0&&(n.castShadow=!0),this.receiveShadow===!0&&(n.receiveShadow=!0),this.visible===!1&&(n.visible=!1),this.frustumCulled===!1&&(n.frustumCulled=!1),this.renderOrder!==0&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.visibility=this._visibility,n.active=this._active,n.bounds=this._bounds.map(o=>({boxInitialized:o.boxInitialized,boxMin:o.box.min.toArray(),boxMax:o.box.max.toArray(),sphereInitialized:o.sphereInitialized,sphereRadius:o.sphere.radius,sphereCenter:o.sphere.center.toArray()})),n.maxGeometryCount=this._maxGeometryCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.geometryCount=this._geometryCount,n.matricesTexture=this._matricesTexture.toJSON(e),this.boundingSphere!==null&&(n.boundingSphere={center:n.boundingSphere.center.toArray(),radius:n.boundingSphere.radius}),this.boundingBox!==null&&(n.boundingBox={min:n.boundingBox.min.toArray(),max:n.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=s(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const d=l[c];s(e.shapes,d)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,c=this.material.length;l<c;l++)o.push(s(e.materials,this.material[l]));n.material=o}else n.material=s(e.materials,this.material);if(this.children.length>0){n.children=[];for(let o=0;o<this.children.length;o++)n.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];n.animations.push(s(e.animations,l))}}if(t){const o=a(e.geometries),l=a(e.materials),c=a(e.textures),h=a(e.images),d=a(e.shapes),p=a(e.skeletons),m=a(e.animations),f=a(e.nodes);o.length>0&&(i.geometries=o),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),h.length>0&&(i.images=h),d.length>0&&(i.shapes=d),p.length>0&&(i.skeletons=p),m.length>0&&(i.animations=m),f.length>0&&(i.nodes=f)}return i.object=n,i;function a(o){const l=[];for(const c in o){const h=o[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const n=e.children[i];this.add(n.clone())}return this}}Xe.DEFAULT_UP=new R(0,1,0),Xe.DEFAULT_MATRIX_AUTO_UPDATE=!0,Xe.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const vi=new R,Wi=new R,Gs=new R,ln=new R,fr=new R,Zn=new R,Yr=new R,Fa=new R,Ba=new R,Vs=new R;let Ws=!1;class ni{constructor(e=new R,t=new R,i=new R){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),vi.subVectors(e,t),n.cross(vi);const s=n.lengthSq();return s>0?n.multiplyScalar(1/Math.sqrt(s)):n.set(0,0,0)}static getBarycoord(e,t,i,n,s){vi.subVectors(n,t),Wi.subVectors(i,t),Gs.subVectors(e,t);const a=vi.dot(vi),o=vi.dot(Wi),l=vi.dot(Gs),c=Wi.dot(Wi),h=Wi.dot(Gs),d=a*c-o*o;if(d===0)return s.set(-2,-1,-1);const p=1/d,m=(c*l-o*h)*p,f=(a*h-o*l)*p;return s.set(1-m-f,f,m)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,ln),ln.x>=0&&ln.y>=0&&ln.x+ln.y<=1}static getUV(e,t,i,n,s,a,o,l){return Ws===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Ws=!0),this.getInterpolation(e,t,i,n,s,a,o,l)}static getInterpolation(e,t,i,n,s,a,o,l){return this.getBarycoord(e,t,i,n,ln),l.setScalar(0),l.addScaledVector(s,ln.x),l.addScaledVector(a,ln.y),l.addScaledVector(o,ln.z),l}static isFrontFacing(e,t,i,n){return vi.subVectors(i,t),Wi.subVectors(e,t),vi.cross(Wi).dot(n)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return vi.subVectors(this.c,this.b),Wi.subVectors(this.a,this.b),.5*vi.cross(Wi).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ni.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ni.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,n,s){return Ws===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Ws=!0),ni.getInterpolation(e,this.a,this.b,this.c,t,i,n,s)}getInterpolation(e,t,i,n,s){return ni.getInterpolation(e,this.a,this.b,this.c,t,i,n,s)}containsPoint(e){return ni.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ni.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,n=this.b,s=this.c;let a,o;fr.subVectors(n,i),Zn.subVectors(s,i),Fa.subVectors(e,i);const l=fr.dot(Fa),c=Zn.dot(Fa);if(l<=0&&c<=0)return t.copy(i);Ba.subVectors(e,n);const h=fr.dot(Ba),d=Zn.dot(Ba);if(h>=0&&d<=h)return t.copy(n);const p=l*d-h*c;if(p<=0&&l>=0&&h<=0)return a=l/(l-h),t.copy(i).addScaledVector(fr,a);Vs.subVectors(e,s);const m=fr.dot(Vs),f=Zn.dot(Vs);if(f>=0&&m<=f)return t.copy(s);const v=m*c-l*f;if(v<=0&&c>=0&&f<=0)return o=c/(c-f),t.copy(i).addScaledVector(Zn,o);const g=h*f-m*d;if(g<=0&&d-h>=0&&m-f>=0)return Yr.subVectors(s,n),o=(d-h)/(d-h+(m-f)),t.copy(n).addScaledVector(Yr,o);const M=1/(g+v+p);return a=v*M,o=p*M,t.copy(i).addScaledVector(fr,a).addScaledVector(Zn,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const za={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},cn={h:0,s:0,l:0},Zr={h:0,s:0,l:0};function gr(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+6*(e-r)*t:t<.5?e:t<2/3?r+6*(e-r)*(2/3-t):r}class be{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const n=e;n&&n.isColor?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Dt){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,Qe.toWorkingColorSpace(this,t),this}setRGB(e,t,i,n=Qe.workingColorSpace){return this.r=e,this.g=t,this.b=i,Qe.toWorkingColorSpace(this,n),this}setHSL(e,t,i,n=Qe.workingColorSpace){if(e=Us(e,1),t=Mt(t,0,1),i=Mt(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,a=2*i-s;this.r=gr(a,s,e+1/3),this.g=gr(a,s,e),this.b=gr(a,s,e-1/3)}return Qe.toWorkingColorSpace(this,n),this}setStyle(e,t=Dt){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const a=n[1],o=n[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=n[1],a=s.length;if(a===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Dt){const i=za[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=hr(e.r),this.g=hr(e.g),this.b=hr(e.b),this}copyLinearToSRGB(e){return this.r=zi(e.r),this.g=zi(e.g),this.b=zi(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Dt){return Qe.fromWorkingColorSpace(kt.copy(this),e),65536*Math.round(Mt(255*kt.r,0,255))+256*Math.round(Mt(255*kt.g,0,255))+Math.round(Mt(255*kt.b,0,255))}getHexString(e=Dt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Qe.workingColorSpace){Qe.fromWorkingColorSpace(kt.copy(this),t);const i=kt.r,n=kt.g,s=kt.b,a=Math.max(i,n,s),o=Math.min(i,n,s);let l,c;const h=(o+a)/2;if(o===a)l=0,c=0;else{const d=a-o;switch(c=h<=.5?d/(a+o):d/(2-a-o),a){case i:l=(n-s)/d+(n<s?6:0);break;case n:l=(s-i)/d+2;break;case s:l=(i-n)/d+4}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,t=Qe.workingColorSpace){return Qe.fromWorkingColorSpace(kt.copy(this),t),e.r=kt.r,e.g=kt.g,e.b=kt.b,e}getStyle(e=Dt){Qe.fromWorkingColorSpace(kt.copy(this),e);const t=kt.r,i=kt.g,n=kt.b;return e!==Dt?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(255*t)},${Math.round(255*i)},${Math.round(255*n)})`}offsetHSL(e,t,i){return this.getHSL(cn),this.setHSL(cn.h+e,cn.s+t,cn.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(cn),e.getHSL(Zr);const i=lr(cn.h,Zr.h,t),n=lr(cn.s,Zr.s,t),s=lr(cn.l,Zr.l,t);return this.setHSL(i,n,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,n=this.b,s=e.elements;return this.r=s[0]*t+s[3]*i+s[6]*n,this.g=s[1]*t+s[4]*i+s[7]*n,this.b=s[2]*t+s[5]*i+s[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const kt=new be;be.NAMES=za;let yi=0;class qt extends Fi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:yi++}),this.uuid=ti(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new be(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const n=this[t];n!==void 0?n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i:console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`)}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function n(s){const a=[];for(const o in s){const l=s[o];delete l.metadata,a.push(l)}return a}if(i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==1&&(i.blending=this.blending),this.side!==0&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==204&&(i.blendSrc=this.blendSrc),this.blendDst!==205&&(i.blendDst=this.blendDst),this.blendEquation!==100&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==3&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==519&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==7680&&(i.stencilFail=this.stencilFail),this.stencilZFail!==7680&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==7680&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData),t){const s=n(e.textures),a=n(e.images);s.length>0&&(i.textures=s),a.length>0&&(i.images=a)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const n=t.length;i=new Array(n);for(let s=0;s!==n;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class An extends qt{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new be(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const ji=Yo();function Yo(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),i=new Uint32Array(512),n=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(i[l]=0,i[256|l]=32768,n[l]=24,n[256|l]=24):c<-14?(i[l]=1024>>-c-14,i[256|l]=1024>>-c-14|32768,n[l]=-c-1,n[256|l]=-c-1):c<=15?(i[l]=c+15<<10,i[256|l]=c+15<<10|32768,n[l]=13,n[256|l]=13):c<128?(i[l]=31744,i[256|l]=64512,n[l]=24,n[256|l]=24):(i[l]=31744,i[256|l]=64512,n[l]=13,n[256|l]=13)}const s=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,h=0;for(;!(8388608&c);)c<<=1,h-=8388608;c&=-8388609,h+=947912704,s[l]=c|h}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)a[l]=l<<23;a[31]=1199570944,a[32]=2147483648;for(let l=33;l<63;++l)a[l]=2147483648+(l-32<<23);a[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(o[l]=1024);return{floatView:e,uint32View:t,baseTable:i,shiftTable:n,mantissaTable:s,exponentTable:a,offsetTable:o}}function ri(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=Mt(r,-65504,65504),ji.floatView[0]=r;const e=ji.uint32View[0],t=e>>23&511;return ji.baseTable[t]+((8388607&e)>>ji.shiftTable[t])}function Jr(r){const e=r>>10;return ji.uint32View[0]=ji.mantissaTable[ji.offsetTable[e]+(1023&r)]+ji.exponentTable[e],ji.floatView[0]}const Dc={toHalfFloat:ri,fromHalfFloat:Jr},Pt=new R,js=new te;class mt{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=35044,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return console.warn('THREE.BufferAttribute: "updateRange" is deprecated and removed in r169. Use "addUpdateRange()" instead.'),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,s=this.itemSize;n<s;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)js.fromBufferAttribute(this,t),js.applyMatrix3(e),this.setXY(t,js.x,js.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)Pt.fromBufferAttribute(this,t),Pt.applyMatrix3(e),this.setXYZ(t,Pt.x,Pt.y,Pt.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)Pt.fromBufferAttribute(this,t),Pt.applyMatrix4(e),this.setXYZ(t,Pt.x,Pt.y,Pt.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Pt.fromBufferAttribute(this,t),Pt.applyNormalMatrix(e),this.setXYZ(t,Pt.x,Pt.y,Pt.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Pt.fromBufferAttribute(this,t),Pt.transformDirection(e),this.setXYZ(t,Pt.x,Pt.y,Pt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=Yt(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=je(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Yt(t,this.array)),t}setX(e,t){return this.normalized&&(t=je(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Yt(t,this.array)),t}setY(e,t){return this.normalized&&(t=je(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Yt(t,this.array)),t}setZ(e,t){return this.normalized&&(t=je(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Yt(t,this.array)),t}setW(e,t){return this.normalized&&(t=je(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=je(t,this.array),i=je(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=je(t,this.array),i=je(i,this.array),n=je(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e*=this.itemSize,this.normalized&&(t=je(t,this.array),i=je(i,this.array),n=je(n,this.array),s=je(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==35044&&(e.usage=this.usage),e}}class Xs extends mt{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class qs extends mt{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class Ee extends mt{constructor(e,t,i){super(new Float32Array(e),t,i)}}let Uc=0;const xi=new Ue,hn=new Xe,si=new R,ai=new Jt,$r=new Jt,Ot=new R;class Ye extends Fi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Uc++}),this.uuid=ti(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Os(e)?qs:Xs)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new Oe().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const n=this.attributes.tangent;return n!==void 0&&(n.transformDirection(e),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return xi.makeRotationFromQuaternion(e),this.applyMatrix4(xi),this}rotateX(e){return xi.makeRotationX(e),this.applyMatrix4(xi),this}rotateY(e){return xi.makeRotationY(e),this.applyMatrix4(xi),this}rotateZ(e){return xi.makeRotationZ(e),this.applyMatrix4(xi),this}translate(e,t,i){return xi.makeTranslation(e,t,i),this.applyMatrix4(xi),this}scale(e,t,i){return xi.makeScale(e,t,i),this.applyMatrix4(xi),this}lookAt(e){return hn.lookAt(e),hn.updateMatrix(),this.applyMatrix4(hn.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(si).negate(),this.translate(si.x,si.y,si.z),this}setFromPoints(e){const t=[];for(let i=0,n=e.length;i<n;i++){const s=e[i];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Ee(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Jt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new R(-1/0,-1/0,-1/0),new R(1/0,1/0,1/0));if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++){const s=t[i];ai.setFromBufferAttribute(s),this.morphTargetsRelative?(Ot.addVectors(this.boundingBox.min,ai.min),this.boundingBox.expandByPoint(Ot),Ot.addVectors(this.boundingBox.max,ai.max),this.boundingBox.expandByPoint(Ot)):(this.boundingBox.expandByPoint(ai.min),this.boundingBox.expandByPoint(ai.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Wt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new R,1/0);if(e){const i=this.boundingSphere.center;if(ai.setFromBufferAttribute(e),t)for(let s=0,a=t.length;s<a;s++){const o=t[s];$r.setFromBufferAttribute(o),this.morphTargetsRelative?(Ot.addVectors(ai.min,$r.min),ai.expandByPoint(Ot),Ot.addVectors(ai.max,$r.max),ai.expandByPoint(Ot)):(ai.expandByPoint($r.min),ai.expandByPoint($r.max))}ai.getCenter(i);let n=0;for(let s=0,a=e.count;s<a;s++)Ot.fromBufferAttribute(e,s),n=Math.max(n,i.distanceToSquared(Ot));if(t)for(let s=0,a=t.length;s<a;s++){const o=t[s],l=this.morphTargetsRelative;for(let c=0,h=o.count;c<h;c++)Ot.fromBufferAttribute(o,c),l&&(si.fromBufferAttribute(e,c),Ot.add(si)),n=Math.max(n,i.distanceToSquared(Ot))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const i=e.array,n=t.position.array,s=t.normal.array,a=t.uv.array,o=n.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new mt(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,c=[],h=[];for(let K=0;K<o;K++)c[K]=new R,h[K]=new R;const d=new R,p=new R,m=new R,f=new te,v=new te,g=new te,M=new R,y=new R;function x(K,z,O){d.fromArray(n,3*K),p.fromArray(n,3*z),m.fromArray(n,3*O),f.fromArray(a,2*K),v.fromArray(a,2*z),g.fromArray(a,2*O),p.sub(d),m.sub(d),v.sub(f),g.sub(f);const se=1/(v.x*g.y-g.x*v.y);isFinite(se)&&(M.copy(p).multiplyScalar(g.y).addScaledVector(m,-v.y).multiplyScalar(se),y.copy(m).multiplyScalar(v.x).addScaledVector(p,-g.x).multiplyScalar(se),c[K].add(M),c[z].add(M),c[O].add(M),h[K].add(y),h[z].add(y),h[O].add(y))}let T=this.groups;T.length===0&&(T=[{start:0,count:i.length}]);for(let K=0,z=T.length;K<z;++K){const O=T[K],se=O.start;for(let oe=se,_e=se+O.count;oe<_e;oe+=3)x(i[oe+0],i[oe+1],i[oe+2])}const A=new R,C=new R,D=new R,V=new R;function k(K){D.fromArray(s,3*K),V.copy(D);const z=c[K];A.copy(z),A.sub(D.multiplyScalar(D.dot(z))).normalize(),C.crossVectors(V,z);const O=C.dot(h[K])<0?-1:1;l[4*K]=A.x,l[4*K+1]=A.y,l[4*K+2]=A.z,l[4*K+3]=O}for(let K=0,z=T.length;K<z;++K){const O=T[K],se=O.start;for(let oe=se,_e=se+O.count;oe<_e;oe+=3)k(i[oe+0]),k(i[oe+1]),k(i[oe+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new mt(new Float32Array(3*t.count),3),this.setAttribute("normal",i);else for(let p=0,m=i.count;p<m;p++)i.setXYZ(p,0,0,0);const n=new R,s=new R,a=new R,o=new R,l=new R,c=new R,h=new R,d=new R;if(e)for(let p=0,m=e.count;p<m;p+=3){const f=e.getX(p+0),v=e.getX(p+1),g=e.getX(p+2);n.fromBufferAttribute(t,f),s.fromBufferAttribute(t,v),a.fromBufferAttribute(t,g),h.subVectors(a,s),d.subVectors(n,s),h.cross(d),o.fromBufferAttribute(i,f),l.fromBufferAttribute(i,v),c.fromBufferAttribute(i,g),o.add(h),l.add(h),c.add(h),i.setXYZ(f,o.x,o.y,o.z),i.setXYZ(v,l.x,l.y,l.z),i.setXYZ(g,c.x,c.y,c.z)}else for(let p=0,m=t.count;p<m;p+=3)n.fromBufferAttribute(t,p+0),s.fromBufferAttribute(t,p+1),a.fromBufferAttribute(t,p+2),h.subVectors(a,s),d.subVectors(n,s),h.cross(d),i.setXYZ(p+0,h.x,h.y,h.z),i.setXYZ(p+1,h.x,h.y,h.z),i.setXYZ(p+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)Ot.fromBufferAttribute(e,t),Ot.normalize(),e.setXYZ(t,Ot.x,Ot.y,Ot.z)}toNonIndexed(){function e(o,l){const c=o.array,h=o.itemSize,d=o.normalized,p=new c.constructor(l.length*h);let m=0,f=0;for(let v=0,g=l.length;v<g;v++){m=o.isInterleavedBufferAttribute?l[v]*o.data.stride+o.offset:l[v]*h;for(let M=0;M<h;M++)p[f++]=c[m++]}return new mt(p,h,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Ye,i=this.index.array,n=this.attributes;for(const o in n){const l=e(n[o],i);t.setAttribute(o,l)}const s=this.morphAttributes;for(const o in s){const l=[],c=s[o];for(let h=0,d=c.length;h<d;h++){const p=e(c[h],i);l.push(p)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const c=a[o];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const n={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let d=0,p=c.length;d<p;d++){const m=c[d];h.push(m.toJSON(e.data))}h.length>0&&(n[l]=h,s=!0)}s&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(t));const n=e.attributes;for(const c in n){const h=n[c];this.setAttribute(c,h.clone(t))}const s=e.morphAttributes;for(const c in s){const h=[],d=s[c];for(let p=0,m=d.length;p<m;p++)h.push(d[p].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let c=0,h=a.length;c<h;c++){const d=a[c];this.addGroup(d.start,d.count,d.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const ka=new Ue,Cn=new Tn,Ys=new Wt,Zo=new R,_r=new R,Jn=new R,$n=new R,Ha=new R,Zs=new R,Js=new te,$s=new te,Ks=new te,Xi=new R,Ga=new R,Jo=new R,Qs=new R,ea=new R;class Ft extends Xe{constructor(e=new Ye,t=new An){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const i=e[t[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,s=i.length;n<s;n++){const a=i[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=n}}}}getVertexPosition(e,t){const i=this.geometry,n=i.attributes.position,s=i.morphAttributes.position,a=i.morphTargetsRelative;t.fromBufferAttribute(n,e);const o=this.morphTargetInfluences;if(s&&o){Zs.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const h=o[l],d=s[l];h!==0&&(Ha.fromBufferAttribute(d,e),a?Zs.addScaledVector(Ha,h):Zs.addScaledVector(Ha.sub(t),h))}t.add(Zs)}return t}raycast(e,t){const i=this.geometry,n=this.material,s=this.matrixWorld;if(n!==void 0){if(i.boundingSphere===null&&i.computeBoundingSphere(),Ys.copy(i.boundingSphere),Ys.applyMatrix4(s),Cn.copy(e.ray).recast(e.near),Ys.containsPoint(Cn.origin)===!1&&(Cn.intersectSphere(Ys,Zo)===null||Cn.origin.distanceToSquared(Zo)>(e.far-e.near)**2))return;ka.copy(s).invert(),Cn.copy(e.ray).applyMatrix4(ka),i.boundingBox!==null&&Cn.intersectsBox(i.boundingBox)===!1||this._computeIntersections(e,t,Cn)}}_computeIntersections(e,t,i){let n;const s=this.geometry,a=this.material,o=s.index,l=s.attributes.position,c=s.attributes.uv,h=s.attributes.uv1,d=s.attributes.normal,p=s.groups,m=s.drawRange;if(o!==null)if(Array.isArray(a))for(let f=0,v=p.length;f<v;f++){const g=p[f],M=a[g.materialIndex];for(let y=Math.max(g.start,m.start),x=Math.min(o.count,Math.min(g.start+g.count,m.start+m.count));y<x;y+=3)n=ta(this,M,e,i,c,h,d,o.getX(y),o.getX(y+1),o.getX(y+2)),n&&(n.faceIndex=Math.floor(y/3),n.face.materialIndex=g.materialIndex,t.push(n))}else for(let f=Math.max(0,m.start),v=Math.min(o.count,m.start+m.count);f<v;f+=3)n=ta(this,a,e,i,c,h,d,o.getX(f),o.getX(f+1),o.getX(f+2)),n&&(n.faceIndex=Math.floor(f/3),t.push(n));else if(l!==void 0)if(Array.isArray(a))for(let f=0,v=p.length;f<v;f++){const g=p[f],M=a[g.materialIndex];for(let y=Math.max(g.start,m.start),x=Math.min(l.count,Math.min(g.start+g.count,m.start+m.count));y<x;y+=3)n=ta(this,M,e,i,c,h,d,y,y+1,y+2),n&&(n.faceIndex=Math.floor(y/3),n.face.materialIndex=g.materialIndex,t.push(n))}else for(let f=Math.max(0,m.start),v=Math.min(l.count,m.start+m.count);f<v;f+=3)n=ta(this,a,e,i,c,h,d,f,f+1,f+2),n&&(n.faceIndex=Math.floor(f/3),t.push(n))}}function ta(r,e,t,i,n,s,a,o,l,c){r.getVertexPosition(o,_r),r.getVertexPosition(l,Jn),r.getVertexPosition(c,$n);const h=function(d,p,m,f,v,g,M,y){let x;if(x=p.side===1?f.intersectTriangle(M,g,v,!0,y):f.intersectTriangle(v,g,M,p.side===0,y),x===null)return null;ea.copy(y),ea.applyMatrix4(d.matrixWorld);const T=m.ray.origin.distanceTo(ea);return T<m.near||T>m.far?null:{distance:T,point:ea.clone(),object:d}}(r,e,t,i,_r,Jn,$n,Qs);if(h){n&&(Js.fromBufferAttribute(n,o),$s.fromBufferAttribute(n,l),Ks.fromBufferAttribute(n,c),h.uv=ni.getInterpolation(Qs,_r,Jn,$n,Js,$s,Ks,new te)),s&&(Js.fromBufferAttribute(s,o),$s.fromBufferAttribute(s,l),Ks.fromBufferAttribute(s,c),h.uv1=ni.getInterpolation(Qs,_r,Jn,$n,Js,$s,Ks,new te),h.uv2=h.uv1),a&&(Xi.fromBufferAttribute(a,o),Ga.fromBufferAttribute(a,l),Jo.fromBufferAttribute(a,c),h.normal=ni.getInterpolation(Qs,_r,Jn,$n,Xi,Ga,Jo,new R),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const d={a:o,b:l,c,normal:new R,materialIndex:0};ni.getNormal(_r,Jn,$n,d.normal),h.face=d}return h}class Kn extends Ye{constructor(e=1,t=1,i=1,n=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:s,depthSegments:a};const o=this;n=Math.floor(n),s=Math.floor(s),a=Math.floor(a);const l=[],c=[],h=[],d=[];let p=0,m=0;function f(v,g,M,y,x,T,A,C,D,V,k){const K=T/D,z=A/V,O=T/2,se=A/2,oe=C/2,_e=D+1,ve=V+1;let ee=0,le=0;const ce=new R;for(let Y=0;Y<ve;Y++){const ie=Y*z-se;for(let Se=0;Se<_e;Se++){const me=Se*K-O;ce[v]=me*y,ce[g]=ie*x,ce[M]=oe,c.push(ce.x,ce.y,ce.z),ce[v]=0,ce[g]=0,ce[M]=C>0?1:-1,h.push(ce.x,ce.y,ce.z),d.push(Se/D),d.push(1-Y/V),ee+=1}}for(let Y=0;Y<V;Y++)for(let ie=0;ie<D;ie++){const Se=p+ie+_e*Y,me=p+ie+_e*(Y+1),Ae=p+(ie+1)+_e*(Y+1),Ce=p+(ie+1)+_e*Y;l.push(Se,me,Ce),l.push(me,Ae,Ce),le+=6}o.addGroup(m,le,k),m+=le,p+=ee}f("z","y","x",-1,-1,i,t,e,a,s,0),f("z","y","x",1,-1,i,t,-e,a,s,1),f("x","z","y",1,1,e,i,t,n,a,2),f("x","z","y",1,-1,e,i,-t,n,a,3),f("x","y","z",1,-1,e,t,i,n,s,4),f("x","y","z",-1,-1,e,t,-i,n,s,5),this.setIndex(l),this.setAttribute("position",new Ee(c,3)),this.setAttribute("normal",new Ee(h,3)),this.setAttribute("uv",new Ee(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Kn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function vr(r){const e={};for(const t in r){e[t]={};for(const i in r[t]){const n=r[t][i];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?n.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=n.clone():Array.isArray(n)?e[t][i]=n.slice():e[t][i]=n}}return e}function $t(r){const e={};for(let t=0;t<r.length;t++){const i=vr(r[t]);for(const n in i)e[n]=i[n]}return e}function ia(r){return r.getRenderTarget()===null?r.outputColorSpace:Qe.workingColorSpace}const Kr={clone:vr,merge:$t};class Pi extends qt{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,this.fragmentShader=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=vr(e.uniforms),this.uniformsGroups=function(t){const i=[];for(let n=0;n<t.length;n++)i.push(t[n].clone());return i}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const s=this.uniforms[n].value;s&&s.isTexture?t.uniforms[n]={type:"t",value:s.toJSON(e).uuid}:s&&s.isColor?t.uniforms[n]={type:"c",value:s.getHex()}:s&&s.isVector2?t.uniforms[n]={type:"v2",value:s.toArray()}:s&&s.isVector3?t.uniforms[n]={type:"v3",value:s.toArray()}:s&&s.isVector4?t.uniforms[n]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?t.uniforms[n]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?t.uniforms[n]={type:"m4",value:s.toArray()}:t.uniforms[n]={value:s}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const n in this.extensions)this.extensions[n]===!0&&(i[n]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class Qr extends Xe{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ue,this.projectionMatrix=new Ue,this.projectionMatrixInverse=new Ue,this.coordinateSystem=2e3}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Tt extends Qr{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*zn*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*Mn*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*zn*Math.atan(Math.tan(.5*Mn*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,n,s,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*Mn*this.fov)/this.zoom,i=2*t,n=this.aspect*i,s=-.5*n;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,c=a.fullHeight;s+=a.offsetX*n/l,t-=a.offsetY*i/c,n*=a.width/l,i*=a.height/c}const o=this.filmOffset;o!==0&&(s+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+n,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Rn=-90;class $o extends Xe{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const n=new Tt(Rn,1,e,t);n.layers=this.layers,this.add(n);const s=new Tt(Rn,1,e,t);s.layers=this.layers,this.add(s);const a=new Tt(Rn,1,e,t);a.layers=this.layers,this.add(a);const o=new Tt(Rn,1,e,t);o.layers=this.layers,this.add(o);const l=new Tt(Rn,1,e,t);l.layers=this.layers,this.add(l);const c=new Tt(Rn,1,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,n,s,a,o,l]=t;for(const c of t)this.remove(c);if(e===2e3)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else{if(e!==2001)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1)}for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,a,o,l,c,h]=this.children,d=e.getRenderTarget(),p=e.getActiveCubeFace(),m=e.getActiveMipmapLevel(),f=e.xr.enabled;e.xr.enabled=!1;const v=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,n),e.render(t,s),e.setRenderTarget(i,1,n),e.render(t,a),e.setRenderTarget(i,2,n),e.render(t,o),e.setRenderTarget(i,3,n),e.render(t,l),e.setRenderTarget(i,4,n),e.render(t,c),i.texture.generateMipmaps=v,e.setRenderTarget(i,5,n),e.render(t,h),e.setRenderTarget(d,p,m),e.xr.enabled=f,i.texture.needsPMREMUpdate=!0}}class es extends St{constructor(e,t,i,n,s,a,o,l,c,h){super(e=e!==void 0?e:[],t=t!==void 0?t:301,i,n,s,a,o,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Ko extends Li{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},n=[i,i,i,i,i,i];t.encoding!==void 0&&(Hn("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===3001?Dt:ui),this.texture=new es(n,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0&&t.generateMipmaps,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:1006}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new Kn(5,5,5),s=new Pi({name:"CubemapFromEquirect",uniforms:vr(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:1,blending:0});s.uniforms.tEquirect.value=t;const a=new Ft(n,s),o=t.minFilter;return t.minFilter===1008&&(t.minFilter=1006),new $o(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,i,n){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,i,n);e.setRenderTarget(s)}}const un=new R,Nc=new R,Oc=new Oe;class Ii{constructor(e=new R(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const n=un.subVectors(i,t).cross(Nc.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(un),n=this.normal.dot(i);if(n===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/n;return s<0||s>1?null:t.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||Oc.getNormalMatrix(e),n=this.coplanarPoint(un).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const dn=new Wt,na=new R;class yr{constructor(e=new Ii,t=new Ii,i=new Ii,n=new Ii,s=new Ii,a=new Ii){this.planes=[e,t,i,n,s,a]}set(e,t,i,n,s,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(i),o[3].copy(n),o[4].copy(s),o[5].copy(a),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=2e3){const i=this.planes,n=e.elements,s=n[0],a=n[1],o=n[2],l=n[3],c=n[4],h=n[5],d=n[6],p=n[7],m=n[8],f=n[9],v=n[10],g=n[11],M=n[12],y=n[13],x=n[14],T=n[15];if(i[0].setComponents(l-s,p-c,g-m,T-M).normalize(),i[1].setComponents(l+s,p+c,g+m,T+M).normalize(),i[2].setComponents(l+a,p+h,g+f,T+y).normalize(),i[3].setComponents(l-a,p-h,g-f,T-y).normalize(),i[4].setComponents(l-o,p-d,g-v,T-x).normalize(),t===2e3)i[5].setComponents(l+o,p+d,g+v,T+x).normalize();else{if(t!==2001)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);i[5].setComponents(o,d,v,x).normalize()}return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),dn.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),dn.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(dn)}intersectsSprite(e){return dn.center.set(0,0,0),dn.radius=.7071067811865476,dn.applyMatrix4(e.matrixWorld),this.intersectsSphere(dn)}intersectsSphere(e){const t=this.planes,i=e.center,n=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<n)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const n=t[i];if(na.x=n.normal.x>0?e.max.x:e.min.x,na.y=n.normal.y>0?e.max.y:e.min.y,na.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(na)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Qo(){let r=null,e=!1,t=null,i=null;function n(s,a){t(s,a),i=r.requestAnimationFrame(n)}return{start:function(){e!==!0&&t!==null&&(i=r.requestAnimationFrame(n),e=!0)},stop:function(){r.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function xr(r,e){const t=e.isWebGL2,i=new WeakMap;return{get:function(n){return n.isInterleavedBufferAttribute&&(n=n.data),i.get(n)},remove:function(n){n.isInterleavedBufferAttribute&&(n=n.data);const s=i.get(n);s&&(r.deleteBuffer(s.buffer),i.delete(n))},update:function(n,s){if(n.isGLBufferAttribute){const o=i.get(n);return void((!o||o.version<n.version)&&i.set(n,{buffer:n.buffer,type:n.type,bytesPerElement:n.elementSize,version:n.version}))}n.isInterleavedBufferAttribute&&(n=n.data);const a=i.get(n);if(a===void 0)i.set(n,function(o,l){const c=o.array,h=o.usage,d=c.byteLength,p=r.createBuffer();let m;if(r.bindBuffer(l,p),r.bufferData(l,c,h),o.onUploadCallback(),c instanceof Float32Array)m=r.FLOAT;else if(c instanceof Uint16Array)if(o.isFloat16BufferAttribute){if(!t)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");m=r.HALF_FLOAT}else m=r.UNSIGNED_SHORT;else if(c instanceof Int16Array)m=r.SHORT;else if(c instanceof Uint32Array)m=r.UNSIGNED_INT;else if(c instanceof Int32Array)m=r.INT;else if(c instanceof Int8Array)m=r.BYTE;else if(c instanceof Uint8Array)m=r.UNSIGNED_BYTE;else{if(!(c instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);m=r.UNSIGNED_BYTE}return{buffer:p,type:m,bytesPerElement:c.BYTES_PER_ELEMENT,version:o.version,size:d}}(n,s));else if(a.version<n.version){if(a.size!==n.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");(function(o,l,c){const h=l.array,d=l._updateRange,p=l.updateRanges;if(r.bindBuffer(c,o),d.count===-1&&p.length===0&&r.bufferSubData(c,0,h),p.length!==0){for(let m=0,f=p.length;m<f;m++){const v=p[m];t?r.bufferSubData(c,v.start*h.BYTES_PER_ELEMENT,h,v.start,v.count):r.bufferSubData(c,v.start*h.BYTES_PER_ELEMENT,h.subarray(v.start,v.start+v.count))}l.clearUpdateRanges()}d.count!==-1&&(t?r.bufferSubData(c,d.offset*h.BYTES_PER_ELEMENT,h,d.offset,d.count):r.bufferSubData(c,d.offset*h.BYTES_PER_ELEMENT,h.subarray(d.offset,d.offset+d.count)),d.count=-1),l.onUploadCallback()})(a.buffer,n,s),a.version=n.version}}}}class Qn extends Ye{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};const s=e/2,a=t/2,o=Math.floor(i),l=Math.floor(n),c=o+1,h=l+1,d=e/o,p=t/l,m=[],f=[],v=[],g=[];for(let M=0;M<h;M++){const y=M*p-a;for(let x=0;x<c;x++){const T=x*d-s;f.push(T,-y,0),v.push(0,0,1),g.push(x/o),g.push(1-M/l)}}for(let M=0;M<l;M++)for(let y=0;y<o;y++){const x=y+c*M,T=y+c*(M+1),A=y+1+c*(M+1),C=y+1+c*M;m.push(x,T,C),m.push(T,A,C)}this.setIndex(m),this.setAttribute("position",new Ee(f,3)),this.setAttribute("normal",new Ee(v,3)),this.setAttribute("uv",new Ee(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Qn(e.width,e.height,e.widthSegments,e.heightSegments)}}const qe={alphahash_fragment:`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,alphahash_pars_fragment:`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,alphamap_fragment:`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,alphamap_pars_fragment:`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,alphatest_fragment:`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,alphatest_pars_fragment:`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,aomap_fragment:`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,aomap_pars_fragment:`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,batching_pars_vertex:`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,batching_vertex:`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,begin_vertex:`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,beginnormal_vertex:`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,bsdfs:`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,iridescence_fragment:`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,bumpmap_pars_fragment:`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,clipping_planes_fragment:`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,clipping_planes_pars_fragment:`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,clipping_planes_pars_vertex:`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,clipping_planes_vertex:`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,color_fragment:`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,color_pars_fragment:`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,color_pars_vertex:`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,color_vertex:`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,common:`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,cube_uv_reflection_fragment:`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,defaultnormal_vertex:`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,displacementmap_pars_vertex:`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,displacementmap_vertex:`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,emissivemap_fragment:`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,emissivemap_pars_fragment:`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,envmap_fragment:`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,envmap_common_pars_fragment:`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,envmap_pars_fragment:`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,envmap_pars_vertex:`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,envmap_physical_pars_fragment:`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,envmap_vertex:`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,fog_vertex:`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,fog_pars_vertex:`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,fog_fragment:`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,fog_pars_fragment:`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,gradientmap_pars_fragment:`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,lightmap_fragment:`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,lightmap_pars_fragment:`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,lights_lambert_fragment:`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,lights_lambert_pars_fragment:`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,lights_pars_begin:`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,lights_toon_fragment:`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,lights_toon_pars_fragment:`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,lights_phong_fragment:`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,lights_phong_pars_fragment:`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,lights_physical_fragment:`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,lights_physical_pars_fragment:`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,lights_fragment_begin:`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,lights_fragment_maps:`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,lights_fragment_end:`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,logdepthbuf_fragment:`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,logdepthbuf_pars_fragment:`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,logdepthbuf_pars_vertex:`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,logdepthbuf_vertex:`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,map_fragment:`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,map_pars_fragment:`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,map_particle_fragment:`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,map_particle_pars_fragment:`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,metalnessmap_fragment:`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,metalnessmap_pars_fragment:`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,morphcolor_vertex:`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,morphnormal_vertex:`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,morphtarget_pars_vertex:`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,morphtarget_vertex:`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,normal_fragment_begin:`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,normal_fragment_maps:`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,normal_pars_fragment:`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,normal_pars_vertex:`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,normal_vertex:`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,normalmap_pars_fragment:`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,clearcoat_normal_fragment_begin:`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,clearcoat_normal_fragment_maps:`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,clearcoat_pars_fragment:`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,iridescence_pars_fragment:`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,opaque_fragment:`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,packing:`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,premultiplied_alpha_fragment:`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,project_vertex:`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,dithering_fragment:`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,dithering_pars_fragment:`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,roughnessmap_fragment:`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,roughnessmap_pars_fragment:`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,shadowmap_pars_fragment:`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,shadowmap_pars_vertex:`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,shadowmap_vertex:`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,shadowmask_pars_fragment:`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,skinbase_vertex:`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,skinning_pars_vertex:`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,skinning_vertex:`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,skinnormal_vertex:`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,specularmap_fragment:`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,specularmap_pars_fragment:`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,tonemapping_fragment:`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,tonemapping_pars_fragment:`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,transmission_fragment:`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,transmission_pars_fragment:`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,uv_pars_fragment:`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,uv_pars_vertex:`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,uv_vertex:`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,worldpos_vertex:`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,background_vert:`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,background_frag:`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,backgroundCube_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,backgroundCube_frag:`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,cube_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,cube_frag:`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,depth_vert:`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,depth_frag:`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,distanceRGBA_vert:`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,distanceRGBA_frag:`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,equirect_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,equirect_frag:`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,linedashed_vert:`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,linedashed_frag:`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,meshbasic_vert:`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,meshbasic_frag:`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshlambert_vert:`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshlambert_frag:`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshmatcap_vert:`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,meshmatcap_frag:`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshnormal_vert:`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,meshnormal_frag:`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,meshphong_vert:`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshphong_frag:`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshphysical_vert:`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,meshphysical_frag:`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshtoon_vert:`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshtoon_frag:`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,points_vert:`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,points_frag:`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,shadow_vert:`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,shadow_frag:`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,sprite_vert:`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,sprite_frag:`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`},fe={common:{diffuse:{value:new be(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Oe},alphaMap:{value:null},alphaMapTransform:{value:new Oe},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Oe}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Oe}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Oe}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Oe},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Oe},normalScale:{value:new te(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Oe},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Oe}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Oe}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Oe}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new be(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new be(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Oe},alphaTest:{value:0},uvTransform:{value:new Oe}},sprite:{diffuse:{value:new be(16777215)},opacity:{value:1},center:{value:new te(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Oe},alphaMap:{value:null},alphaMapTransform:{value:new Oe},alphaTest:{value:0}}},Di={basic:{uniforms:$t([fe.common,fe.specularmap,fe.envmap,fe.aomap,fe.lightmap,fe.fog]),vertexShader:qe.meshbasic_vert,fragmentShader:qe.meshbasic_frag},lambert:{uniforms:$t([fe.common,fe.specularmap,fe.envmap,fe.aomap,fe.lightmap,fe.emissivemap,fe.bumpmap,fe.normalmap,fe.displacementmap,fe.fog,fe.lights,{emissive:{value:new be(0)}}]),vertexShader:qe.meshlambert_vert,fragmentShader:qe.meshlambert_frag},phong:{uniforms:$t([fe.common,fe.specularmap,fe.envmap,fe.aomap,fe.lightmap,fe.emissivemap,fe.bumpmap,fe.normalmap,fe.displacementmap,fe.fog,fe.lights,{emissive:{value:new be(0)},specular:{value:new be(1118481)},shininess:{value:30}}]),vertexShader:qe.meshphong_vert,fragmentShader:qe.meshphong_frag},standard:{uniforms:$t([fe.common,fe.envmap,fe.aomap,fe.lightmap,fe.emissivemap,fe.bumpmap,fe.normalmap,fe.displacementmap,fe.roughnessmap,fe.metalnessmap,fe.fog,fe.lights,{emissive:{value:new be(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:qe.meshphysical_vert,fragmentShader:qe.meshphysical_frag},toon:{uniforms:$t([fe.common,fe.aomap,fe.lightmap,fe.emissivemap,fe.bumpmap,fe.normalmap,fe.displacementmap,fe.gradientmap,fe.fog,fe.lights,{emissive:{value:new be(0)}}]),vertexShader:qe.meshtoon_vert,fragmentShader:qe.meshtoon_frag},matcap:{uniforms:$t([fe.common,fe.bumpmap,fe.normalmap,fe.displacementmap,fe.fog,{matcap:{value:null}}]),vertexShader:qe.meshmatcap_vert,fragmentShader:qe.meshmatcap_frag},points:{uniforms:$t([fe.points,fe.fog]),vertexShader:qe.points_vert,fragmentShader:qe.points_frag},dashed:{uniforms:$t([fe.common,fe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:qe.linedashed_vert,fragmentShader:qe.linedashed_frag},depth:{uniforms:$t([fe.common,fe.displacementmap]),vertexShader:qe.depth_vert,fragmentShader:qe.depth_frag},normal:{uniforms:$t([fe.common,fe.bumpmap,fe.normalmap,fe.displacementmap,{opacity:{value:1}}]),vertexShader:qe.meshnormal_vert,fragmentShader:qe.meshnormal_frag},sprite:{uniforms:$t([fe.sprite,fe.fog]),vertexShader:qe.sprite_vert,fragmentShader:qe.sprite_frag},background:{uniforms:{uvTransform:{value:new Oe},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:qe.background_vert,fragmentShader:qe.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:qe.backgroundCube_vert,fragmentShader:qe.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:qe.cube_vert,fragmentShader:qe.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:qe.equirect_vert,fragmentShader:qe.equirect_frag},distanceRGBA:{uniforms:$t([fe.common,fe.displacementmap,{referencePosition:{value:new R},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:qe.distanceRGBA_vert,fragmentShader:qe.distanceRGBA_frag},shadow:{uniforms:$t([fe.lights,fe.fog,{color:{value:new be(0)},opacity:{value:1}}]),vertexShader:qe.shadow_vert,fragmentShader:qe.shadow_frag}};Di.physical={uniforms:$t([Di.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Oe},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Oe},clearcoatNormalScale:{value:new te(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Oe},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Oe},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Oe},sheen:{value:0},sheenColor:{value:new be(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Oe},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Oe},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Oe},transmissionSamplerSize:{value:new te},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Oe},attenuationDistance:{value:0},attenuationColor:{value:new be(0)},specularColor:{value:new be(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Oe},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Oe},anisotropyVector:{value:new te},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Oe}}]),vertexShader:qe.meshphysical_vert,fragmentShader:qe.meshphysical_frag};const ra={r:0,b:0,g:0};function ts(r,e,t,i,n,s,a){const o=new be(0);let l,c,h=s===!0?0:1,d=null,p=0,m=null;function f(v,g){v.getRGB(ra,ia(r)),i.buffers.color.setClear(ra.r,ra.g,ra.b,g,a)}return{getClearColor:function(){return o},setClearColor:function(v,g=1){o.set(v),h=g,f(o,h)},getClearAlpha:function(){return h},setClearAlpha:function(v){h=v,f(o,h)},render:function(v,g){let M=!1,y=g.isScene===!0?g.background:null;y&&y.isTexture&&(y=(g.backgroundBlurriness>0?t:e).get(y)),y===null?f(o,h):y&&y.isColor&&(f(y,1),M=!0);const x=r.xr.getEnvironmentBlendMode();x==="additive"?i.buffers.color.setClear(0,0,0,1,a):x==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,a),(r.autoClear||M)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),y&&(y.isCubeTexture||y.mapping===306)?(c===void 0&&(c=new Ft(new Kn(1,1,1),new Pi({name:"BackgroundCubeMaterial",uniforms:vr(Di.backgroundCube.uniforms),vertexShader:Di.backgroundCube.vertexShader,fragmentShader:Di.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(T,A,C){this.matrixWorld.copyPosition(C.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(c)),c.material.uniforms.envMap.value=y,c.material.uniforms.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,c.material.uniforms.backgroundBlurriness.value=g.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=g.backgroundIntensity,c.material.toneMapped=Qe.getTransfer(y.colorSpace)!==$e,d===y&&p===y.version&&m===r.toneMapping||(c.material.needsUpdate=!0,d=y,p=y.version,m=r.toneMapping),c.layers.enableAll(),v.unshift(c,c.geometry,c.material,0,0,null)):y&&y.isTexture&&(l===void 0&&(l=new Ft(new Qn(2,2),new Pi({name:"BackgroundMaterial",uniforms:vr(Di.background.uniforms),vertexShader:Di.background.vertexShader,fragmentShader:Di.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(l)),l.material.uniforms.t2D.value=y,l.material.uniforms.backgroundIntensity.value=g.backgroundIntensity,l.material.toneMapped=Qe.getTransfer(y.colorSpace)!==$e,y.matrixAutoUpdate===!0&&y.updateMatrix(),l.material.uniforms.uvTransform.value.copy(y.matrix),d===y&&p===y.version&&m===r.toneMapping||(l.material.needsUpdate=!0,d=y,p=y.version,m=r.toneMapping),l.layers.enableAll(),v.unshift(l,l.geometry,l.material,0,0,null))}}}function er(r,e,t,i){const n=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),a=i.isWebGL2||s!==null,o={},l=m(null);let c=l,h=!1;function d(A){return i.isWebGL2?r.bindVertexArray(A):s.bindVertexArrayOES(A)}function p(A){return i.isWebGL2?r.deleteVertexArray(A):s.deleteVertexArrayOES(A)}function m(A){const C=[],D=[],V=[];for(let k=0;k<n;k++)C[k]=0,D[k]=0,V[k]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:C,enabledAttributes:D,attributeDivisors:V,object:A,attributes:{},index:null}}function f(){const A=c.newAttributes;for(let C=0,D=A.length;C<D;C++)A[C]=0}function v(A){g(A,0)}function g(A,C){const D=c.newAttributes,V=c.enabledAttributes,k=c.attributeDivisors;D[A]=1,V[A]===0&&(r.enableVertexAttribArray(A),V[A]=1),k[A]!==C&&((i.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](A,C),k[A]=C)}function M(){const A=c.newAttributes,C=c.enabledAttributes;for(let D=0,V=C.length;D<V;D++)C[D]!==A[D]&&(r.disableVertexAttribArray(D),C[D]=0)}function y(A,C,D,V,k,K,z){z===!0?r.vertexAttribIPointer(A,C,D,k,K):r.vertexAttribPointer(A,C,D,V,k,K)}function x(){T(),h=!0,c!==l&&(c=l,d(c.object))}function T(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(A,C,D,V,k){let K=!1;if(a){const z=function(O,se,oe){const _e=oe.wireframe===!0;let ve=o[O.id];ve===void 0&&(ve={},o[O.id]=ve);let ee=ve[se.id];ee===void 0&&(ee={},ve[se.id]=ee);let le=ee[_e];return le===void 0&&(le=m(i.isWebGL2?r.createVertexArray():s.createVertexArrayOES()),ee[_e]=le),le}(V,D,C);c!==z&&(c=z,d(c.object)),K=function(O,se,oe,_e){const ve=c.attributes,ee=se.attributes;let le=0;const ce=oe.getAttributes();for(const Y in ce)if(ce[Y].location>=0){const ie=ve[Y];let Se=ee[Y];if(Se===void 0&&(Y==="instanceMatrix"&&O.instanceMatrix&&(Se=O.instanceMatrix),Y==="instanceColor"&&O.instanceColor&&(Se=O.instanceColor)),ie===void 0||ie.attribute!==Se||Se&&ie.data!==Se.data)return!0;le++}return c.attributesNum!==le||c.index!==_e}(A,V,D,k),K&&function(O,se,oe,_e){const ve={},ee=se.attributes;let le=0;const ce=oe.getAttributes();for(const Y in ce)if(ce[Y].location>=0){let ie=ee[Y];ie===void 0&&(Y==="instanceMatrix"&&O.instanceMatrix&&(ie=O.instanceMatrix),Y==="instanceColor"&&O.instanceColor&&(ie=O.instanceColor));const Se={};Se.attribute=ie,ie&&ie.data&&(Se.data=ie.data),ve[Y]=Se,le++}c.attributes=ve,c.attributesNum=le,c.index=_e}(A,V,D,k)}else{const z=C.wireframe===!0;c.geometry===V.id&&c.program===D.id&&c.wireframe===z||(c.geometry=V.id,c.program=D.id,c.wireframe=z,K=!0)}k!==null&&t.update(k,r.ELEMENT_ARRAY_BUFFER),(K||h)&&(h=!1,function(z,O,se,oe){if(i.isWebGL2===!1&&(z.isInstancedMesh||oe.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;f();const _e=oe.attributes,ve=se.getAttributes(),ee=O.defaultAttributeValues;for(const le in ve){const ce=ve[le];if(ce.location>=0){let Y=_e[le];if(Y===void 0&&(le==="instanceMatrix"&&z.instanceMatrix&&(Y=z.instanceMatrix),le==="instanceColor"&&z.instanceColor&&(Y=z.instanceColor)),Y!==void 0){const ie=Y.normalized,Se=Y.itemSize,me=t.get(Y);if(me===void 0)continue;const Ae=me.buffer,Ce=me.type,Be=me.bytesPerElement,P=i.isWebGL2===!0&&(Ce===r.INT||Ce===r.UNSIGNED_INT||Y.gpuType===1013);if(Y.isInterleavedBufferAttribute){const L=Y.data,N=L.stride,G=Y.offset;if(L.isInstancedInterleavedBuffer){for(let U=0;U<ce.locationSize;U++)g(ce.location+U,L.meshPerAttribute);z.isInstancedMesh!==!0&&oe._maxInstanceCount===void 0&&(oe._maxInstanceCount=L.meshPerAttribute*L.count)}else for(let U=0;U<ce.locationSize;U++)v(ce.location+U);r.bindBuffer(r.ARRAY_BUFFER,Ae);for(let U=0;U<ce.locationSize;U++)y(ce.location+U,Se/ce.locationSize,Ce,ie,N*Be,(G+Se/ce.locationSize*U)*Be,P)}else{if(Y.isInstancedBufferAttribute){for(let L=0;L<ce.locationSize;L++)g(ce.location+L,Y.meshPerAttribute);z.isInstancedMesh!==!0&&oe._maxInstanceCount===void 0&&(oe._maxInstanceCount=Y.meshPerAttribute*Y.count)}else for(let L=0;L<ce.locationSize;L++)v(ce.location+L);r.bindBuffer(r.ARRAY_BUFFER,Ae);for(let L=0;L<ce.locationSize;L++)y(ce.location+L,Se/ce.locationSize,Ce,ie,Se*Be,Se/ce.locationSize*L*Be,P)}}else if(ee!==void 0){const ie=ee[le];if(ie!==void 0)switch(ie.length){case 2:r.vertexAttrib2fv(ce.location,ie);break;case 3:r.vertexAttrib3fv(ce.location,ie);break;case 4:r.vertexAttrib4fv(ce.location,ie);break;default:r.vertexAttrib1fv(ce.location,ie)}}}}M()}(A,C,D,V),k!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(k).buffer))},reset:x,resetDefaultState:T,dispose:function(){x();for(const A in o){const C=o[A];for(const D in C){const V=C[D];for(const k in V)p(V[k].object),delete V[k];delete C[D]}delete o[A]}},releaseStatesOfGeometry:function(A){if(o[A.id]===void 0)return;const C=o[A.id];for(const D in C){const V=C[D];for(const k in V)p(V[k].object),delete V[k];delete C[D]}delete o[A.id]},releaseStatesOfProgram:function(A){for(const C in o){const D=o[C];if(D[A.id]===void 0)continue;const V=D[A.id];for(const k in V)p(V[k].object),delete V[k];delete D[A.id]}},initAttributes:f,enableAttribute:v,disableUnusedAttributes:M}}function Fc(r,e,t,i){const n=i.isWebGL2;let s;this.setMode=function(a){s=a},this.render=function(a,o){r.drawArrays(s,a,o),t.update(o,s,1)},this.renderInstances=function(a,o,l){if(l===0)return;let c,h;if(n)c=r,h="drawArraysInstanced";else if(c=e.get("ANGLE_instanced_arrays"),h="drawArraysInstancedANGLE",c===null)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[h](s,a,o,l),t.update(o,s,l)},this.renderMultiDraw=function(a,o,l){if(l===0)return;const c=e.get("WEBGL_multi_draw");if(c===null)for(let h=0;h<l;h++)this.render(a[h],o[h]);else{c.multiDrawArraysWEBGL(s,a,0,o,0,l);let h=0;for(let d=0;d<l;d++)h+=o[d];t.update(h,s,1)}}}function Bc(r,e,t){let i;function n(T){if(T==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";T="mediump"}return T==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const s=typeof WebGL2RenderingContext<"u"&&r.constructor.name==="WebGL2RenderingContext";let a=t.precision!==void 0?t.precision:"highp";const o=n(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);const l=s||e.has("WEBGL_draw_buffers"),c=t.logarithmicDepthBuffer===!0,h=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),d=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),p=r.getParameter(r.MAX_TEXTURE_SIZE),m=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),f=r.getParameter(r.MAX_VERTEX_ATTRIBS),v=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),g=r.getParameter(r.MAX_VARYING_VECTORS),M=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),y=d>0,x=s||e.has("OES_texture_float");return{isWebGL2:s,drawBuffers:l,getMaxAnisotropy:function(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const T=e.get("EXT_texture_filter_anisotropic");i=r.getParameter(T.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:n,precision:a,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:d,maxTextureSize:p,maxCubemapSize:m,maxAttributes:f,maxVertexUniforms:v,maxVaryings:g,maxFragmentUniforms:M,vertexTextures:y,floatFragmentTextures:x,floatVertexTextures:y&&x,maxSamples:s?r.getParameter(r.MAX_SAMPLES):0}}function zc(r){const e=this;let t=null,i=0,n=!1,s=!1;const a=new Ii,o=new Oe,l={value:null,needsUpdate:!1};function c(h,d,p,m){const f=h!==null?h.length:0;let v=null;if(f!==0){if(v=l.value,m!==!0||v===null){const g=p+4*f,M=d.matrixWorldInverse;o.getNormalMatrix(M),(v===null||v.length<g)&&(v=new Float32Array(g));for(let y=0,x=p;y!==f;++y,x+=4)a.copy(h[y]).applyMatrix4(M,o),a.normal.toArray(v,x),v[x+3]=a.constant}l.value=v,l.needsUpdate=!0}return e.numPlanes=f,e.numIntersection=0,v}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d){const p=h.length!==0||d||i!==0||n;return n=d,i=h.length,p},this.beginShadows=function(){s=!0,c(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(h,d){t=c(h,d,0)},this.setState=function(h,d,p){const m=h.clippingPlanes,f=h.clipIntersection,v=h.clipShadows,g=r.get(h);if(!n||m===null||m.length===0||s&&!v)s?c(null):function(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}();else{const M=s?0:i,y=4*M;let x=g.clippingState||null;l.value=x,x=c(m,d,y,p);for(let T=0;T!==y;++T)x[T]=t[T];g.clippingState=x,this.numIntersection=f?this.numPlanes:0,this.numPlanes+=M}}}function kc(r){let e=new WeakMap;function t(n,s){return s===303?n.mapping=301:s===304&&(n.mapping=302),n}function i(n){const s=n.target;s.removeEventListener("dispose",i);const a=e.get(s);a!==void 0&&(e.delete(s),a.dispose())}return{get:function(n){if(n&&n.isTexture){const s=n.mapping;if(s===303||s===304){if(e.has(n))return t(e.get(n).texture,n.mapping);{const a=n.image;if(a&&a.height>0){const o=new Ko(a.height/2);return o.fromEquirectangularTexture(r,n),e.set(n,o),n.addEventListener("dispose",i),t(o.texture,n.mapping)}return null}}}return n},dispose:function(){e=new WeakMap}}}class sa extends Qr{constructor(e=-1,t=1,i=1,n=-1,s=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let s=i-e,a=i+e,o=n+t,l=n-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,a=s+c*this.view.width,o-=h*this.view.offsetY,l=o-h*this.view.height}this.projectionMatrix.makeOrthographic(s,a,o,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const el=[.125,.215,.35,.446,.526,.582],is=20,Va=new sa,Wa=new be;let ja=null,aa=0,ns=0;const Ln=(1+Math.sqrt(5))/2,bi=1/Ln,Xa=[new R(1,1,1),new R(-1,1,1),new R(1,1,-1),new R(-1,1,-1),new R(0,Ln,bi),new R(0,Ln,-bi),new R(bi,0,Ln),new R(-bi,0,Ln),new R(Ln,bi,0),new R(-Ln,bi,0)];class rs{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100){ja=this._renderer.getRenderTarget(),aa=this._renderer.getActiveCubeFace(),ns=this._renderer.getActiveMipmapLevel(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,n,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=oa(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Ya(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(ja,aa,ns),e.scissorTest=!1,br(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===301||e.mapping===302?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),ja=this._renderer.getRenderTarget(),aa=this._renderer.getActiveCubeFace(),ns=this._renderer.getActiveMipmapLevel();const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:1006,minFilter:1006,generateMipmaps:!1,type:1016,format:1023,colorSpace:Oi,depthBuffer:!1},n=qa(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=qa(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(a){const o=[],l=[],c=[];let h=a;const d=a-4+1+el.length;for(let p=0;p<d;p++){const m=Math.pow(2,h);l.push(m);let f=1/m;p>a-4?f=el[p-a+4-1]:p===0&&(f=0),c.push(f);const v=1/(m-2),g=-v,M=1+v,y=[g,g,M,g,M,M,g,g,M,M,g,M],x=6,T=6,A=3,C=2,D=1,V=new Float32Array(A*T*x),k=new Float32Array(C*T*x),K=new Float32Array(D*T*x);for(let O=0;O<x;O++){const se=O%3*2/3-1,oe=O>2?0:-1,_e=[se,oe,0,se+2/3,oe,0,se+2/3,oe+1,0,se,oe,0,se+2/3,oe+1,0,se,oe+1,0];V.set(_e,A*T*O),k.set(y,C*T*O);const ve=[O,O,O,O,O,O];K.set(ve,D*T*O)}const z=new Ye;z.setAttribute("position",new mt(V,A)),z.setAttribute("uv",new mt(k,C)),z.setAttribute("faceIndex",new mt(K,D)),o.push(z),h>4&&h--}return{lodPlanes:o,sizeLods:l,sigmas:c}}(s)),this._blurMaterial=function(a,o,l){const c=new Float32Array(is),h=new R(0,1,0);return new Pi({name:"SphericalGaussianBlur",defines:{n:is,CUBEUV_TEXEL_WIDTH:1/o,CUBEUV_TEXEL_HEIGHT:1/l,CUBEUV_MAX_MIP:`${a}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:c},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:h}},vertexShader:Za(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}(s,e,t)}return n}_compileMaterial(e){const t=new Ft(this._lodPlanes[0],e);this._renderer.compile(t,Va)}_sceneToCubeUV(e,t,i,n){const s=new Tt(90,1,t,i),a=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],l=this._renderer,c=l.autoClear,h=l.toneMapping;l.getClearColor(Wa),l.toneMapping=0,l.autoClear=!1;const d=new An({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),p=new Ft(new Kn,d);let m=!1;const f=e.background;f?f.isColor&&(d.color.copy(f),e.background=null,m=!0):(d.color.copy(Wa),m=!0);for(let v=0;v<6;v++){const g=v%3;g===0?(s.up.set(0,a[v],0),s.lookAt(o[v],0,0)):g===1?(s.up.set(0,0,a[v]),s.lookAt(0,o[v],0)):(s.up.set(0,a[v],0),s.lookAt(0,0,o[v]));const M=this._cubeSize;br(n,g*M,v>2?M:0,M,M),l.setRenderTarget(n),m&&l.render(p,s),l.render(e,s)}p.geometry.dispose(),p.material.dispose(),l.toneMapping=h,l.autoClear=c,e.background=f}_textureToCubeUV(e,t){const i=this._renderer,n=e.mapping===301||e.mapping===302;n?(this._cubemapMaterial===null&&(this._cubemapMaterial=oa()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Ya());const s=n?this._cubemapMaterial:this._equirectMaterial,a=new Ft(this._lodPlanes[0],s);s.uniforms.envMap.value=e;const o=this._cubeSize;br(t,0,0,3*o,2*o),i.setRenderTarget(t),i.render(a,Va)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let n=1;n<this._lodPlanes.length;n++){const s=Math.sqrt(this._sigmas[n]*this._sigmas[n]-this._sigmas[n-1]*this._sigmas[n-1]),a=Xa[(n-1)%Xa.length];this._blur(e,n-1,n,s,a)}t.autoClear=i}_blur(e,t,i,n,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,i,n,"latitudinal",s),this._halfBlur(a,e,i,i,n,"longitudinal",s)}_halfBlur(e,t,i,n,s,a,o){const l=this._renderer,c=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=new Ft(this._lodPlanes[n],c),d=c.uniforms,p=this._sizeLods[i]-1,m=isFinite(s)?Math.PI/(2*p):2*Math.PI/39,f=s/m,v=isFinite(s)?1+Math.floor(3*f):is;v>is&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${v} samples when the maximum is set to 20`);const g=[];let M=0;for(let T=0;T<is;++T){const A=T/f,C=Math.exp(-A*A/2);g.push(C),T===0?M+=C:T<v&&(M+=2*C)}for(let T=0;T<g.length;T++)g[T]=g[T]/M;d.envMap.value=e.texture,d.samples.value=v,d.weights.value=g,d.latitudinal.value=a==="latitudinal",o&&(d.poleAxis.value=o);const{_lodMax:y}=this;d.dTheta.value=m,d.mipInt.value=y-i;const x=this._sizeLods[n];br(t,3*x*(n>y-4?n-y+4:0),4*(this._cubeSize-x),3*x,2*x),l.setRenderTarget(t),l.render(h,Va)}}function qa(r,e,t){const i=new Li(r,e,t);return i.texture.mapping=306,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function br(r,e,t,i,n){r.viewport.set(e,t,i,n),r.scissor.set(e,t,i,n)}function Ya(){return new Pi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Za(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function oa(){return new Pi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Za(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function Za(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function tr(r){let e=new WeakMap,t=null;function i(n){const s=n.target;s.removeEventListener("dispose",i);const a=e.get(s);a!==void 0&&(e.delete(s),a.dispose())}return{get:function(n){if(n&&n.isTexture){const s=n.mapping,a=s===303||s===304,o=s===301||s===302;if(a||o){if(n.isRenderTargetTexture&&n.needsPMREMUpdate===!0){n.needsPMREMUpdate=!1;let l=e.get(n);return t===null&&(t=new rs(r)),l=a?t.fromEquirectangular(n,l):t.fromCubemap(n,l),e.set(n,l),l.texture}if(e.has(n))return e.get(n).texture;{const l=n.image;if(a&&l&&l.height>0||o&&l&&function(c){let h=0;const d=6;for(let p=0;p<d;p++)c[p]!==void 0&&h++;return h===d}(l)){t===null&&(t=new rs(r));const c=a?t.fromEquirectangular(n):t.fromCubemap(n);return e.set(n,c),n.addEventListener("dispose",i),c.texture}return null}}}return n},dispose:function(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}}}function Pn(r){const e={};function t(i){if(e[i]!==void 0)return e[i];let n;switch(i){case"WEBGL_depth_texture":n=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=r.getExtension(i)}return e[i]=n,n}return{has:function(i){return t(i)!==null},init:function(i){i.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(i){const n=t(i);return n===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),n}}}function Hc(r,e,t,i){const n={},s=new WeakMap;function a(l){const c=l.target;c.index!==null&&e.remove(c.index);for(const d in c.attributes)e.remove(c.attributes[d]);for(const d in c.morphAttributes){const p=c.morphAttributes[d];for(let m=0,f=p.length;m<f;m++)e.remove(p[m])}c.removeEventListener("dispose",a),delete n[c.id];const h=s.get(c);h&&(e.remove(h),s.delete(c)),i.releaseStatesOfGeometry(c),c.isInstancedBufferGeometry===!0&&delete c._maxInstanceCount,t.memory.geometries--}function o(l){const c=[],h=l.index,d=l.attributes.position;let p=0;if(h!==null){const v=h.array;p=h.version;for(let g=0,M=v.length;g<M;g+=3){const y=v[g+0],x=v[g+1],T=v[g+2];c.push(y,x,x,T,T,y)}}else{if(d===void 0)return;{const v=d.array;p=d.version;for(let g=0,M=v.length/3-1;g<M;g+=3){const y=g+0,x=g+1,T=g+2;c.push(y,x,x,T,T,y)}}}const m=new(Os(c)?qs:Xs)(c,1);m.version=p;const f=s.get(l);f&&e.remove(f),s.set(l,m)}return{get:function(l,c){return n[c.id]===!0||(c.addEventListener("dispose",a),n[c.id]=!0,t.memory.geometries++),c},update:function(l){const c=l.attributes;for(const d in c)e.update(c[d],r.ARRAY_BUFFER);const h=l.morphAttributes;for(const d in h){const p=h[d];for(let m=0,f=p.length;m<f;m++)e.update(p[m],r.ARRAY_BUFFER)}},getWireframeAttribute:function(l){const c=s.get(l);if(c){const h=l.index;h!==null&&c.version<h.version&&o(l)}else o(l);return s.get(l)}}}function Gc(r,e,t,i){const n=i.isWebGL2;let s,a,o;this.setMode=function(l){s=l},this.setIndex=function(l){a=l.type,o=l.bytesPerElement},this.render=function(l,c){r.drawElements(s,c,a,l*o),t.update(c,s,1)},this.renderInstances=function(l,c,h){if(h===0)return;let d,p;if(n)d=r,p="drawElementsInstanced";else if(d=e.get("ANGLE_instanced_arrays"),p="drawElementsInstancedANGLE",d===null)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");d[p](s,c,a,l*o,h),t.update(c,s,h)},this.renderMultiDraw=function(l,c,h){if(h===0)return;const d=e.get("WEBGL_multi_draw");if(d===null)for(let p=0;p<h;p++)this.render(l[p]/o,c[p]);else{d.multiDrawElementsWEBGL(s,c,0,a,l,0,h);let p=0;for(let m=0;m<h;m++)p+=c[m];t.update(p,s,1)}}}function Vc(r){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,i,n){switch(e.calls++,i){case r.TRIANGLES:e.triangles+=n*(t/3);break;case r.LINES:e.lines+=n*(t/2);break;case r.LINE_STRIP:e.lines+=n*(t-1);break;case r.LINE_LOOP:e.lines+=n*t;break;case r.POINTS:e.points+=n*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function Wc(r,e){return r[0]-e[0]}function jc(r,e){return Math.abs(e[1])-Math.abs(r[1])}function Xc(r,e,t){const i={},n=new Float32Array(8),s=new WeakMap,a=new dt,o=[];for(let l=0;l<8;l++)o[l]=[l,0];return{update:function(l,c,h){const d=l.morphTargetInfluences;if(e.isWebGL2===!0){const p=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=p!==void 0?p.length:0;let f=s.get(c);if(f===void 0||f.count!==m){let se=function(){z.dispose(),s.delete(c),c.removeEventListener("dispose",se)};f!==void 0&&f.texture.dispose();const M=c.morphAttributes.position!==void 0,y=c.morphAttributes.normal!==void 0,x=c.morphAttributes.color!==void 0,T=c.morphAttributes.position||[],A=c.morphAttributes.normal||[],C=c.morphAttributes.color||[];let D=0;M===!0&&(D=1),y===!0&&(D=2),x===!0&&(D=3);let V=c.attributes.position.count*D,k=1;V>e.maxTextureSize&&(k=Math.ceil(V/e.maxTextureSize),V=e.maxTextureSize);const K=new Float32Array(V*k*4*m),z=new kr(K,V,k,m);z.type=1015,z.needsUpdate=!0;const O=4*D;for(let oe=0;oe<m;oe++){const _e=T[oe],ve=A[oe],ee=C[oe],le=V*k*4*oe;for(let ce=0;ce<_e.count;ce++){const Y=ce*O;M===!0&&(a.fromBufferAttribute(_e,ce),K[le+Y+0]=a.x,K[le+Y+1]=a.y,K[le+Y+2]=a.z,K[le+Y+3]=0),y===!0&&(a.fromBufferAttribute(ve,ce),K[le+Y+4]=a.x,K[le+Y+5]=a.y,K[le+Y+6]=a.z,K[le+Y+7]=0),x===!0&&(a.fromBufferAttribute(ee,ce),K[le+Y+8]=a.x,K[le+Y+9]=a.y,K[le+Y+10]=a.z,K[le+Y+11]=ee.itemSize===4?a.w:1)}}f={count:m,texture:z,size:new te(V,k)},s.set(c,f),c.addEventListener("dispose",se)}let v=0;for(let M=0;M<d.length;M++)v+=d[M];const g=c.morphTargetsRelative?1:1-v;h.getUniforms().setValue(r,"morphTargetBaseInfluence",g),h.getUniforms().setValue(r,"morphTargetInfluences",d),h.getUniforms().setValue(r,"morphTargetsTexture",f.texture,t),h.getUniforms().setValue(r,"morphTargetsTextureSize",f.size)}else{const p=d===void 0?0:d.length;let m=i[c.id];if(m===void 0||m.length!==p){m=[];for(let y=0;y<p;y++)m[y]=[y,0];i[c.id]=m}for(let y=0;y<p;y++){const x=m[y];x[0]=y,x[1]=d[y]}m.sort(jc);for(let y=0;y<8;y++)y<p&&m[y][1]?(o[y][0]=m[y][0],o[y][1]=m[y][1]):(o[y][0]=Number.MAX_SAFE_INTEGER,o[y][1]=0);o.sort(Wc);const f=c.morphAttributes.position,v=c.morphAttributes.normal;let g=0;for(let y=0;y<8;y++){const x=o[y],T=x[0],A=x[1];T!==Number.MAX_SAFE_INTEGER&&A?(f&&c.getAttribute("morphTarget"+y)!==f[T]&&c.setAttribute("morphTarget"+y,f[T]),v&&c.getAttribute("morphNormal"+y)!==v[T]&&c.setAttribute("morphNormal"+y,v[T]),n[y]=A,g+=A):(f&&c.hasAttribute("morphTarget"+y)===!0&&c.deleteAttribute("morphTarget"+y),v&&c.hasAttribute("morphNormal"+y)===!0&&c.deleteAttribute("morphNormal"+y),n[y]=0)}const M=c.morphTargetsRelative?1:1-g;h.getUniforms().setValue(r,"morphTargetBaseInfluence",M),h.getUniforms().setValue(r,"morphTargetInfluences",n)}}}}function qc(r,e,t,i){let n=new WeakMap;function s(a){const o=a.target;o.removeEventListener("dispose",s),t.remove(o.instanceMatrix),o.instanceColor!==null&&t.remove(o.instanceColor)}return{update:function(a){const o=i.render.frame,l=a.geometry,c=e.get(a,l);if(n.get(c)!==o&&(e.update(c),n.set(c,o)),a.isInstancedMesh&&(a.hasEventListener("dispose",s)===!1&&a.addEventListener("dispose",s),n.get(a)!==o&&(t.update(a.instanceMatrix,r.ARRAY_BUFFER),a.instanceColor!==null&&t.update(a.instanceColor,r.ARRAY_BUFFER),n.set(a,o))),a.isSkinnedMesh){const h=a.skeleton;n.get(h)!==o&&(h.update(),n.set(h,o))}return c},dispose:function(){n=new WeakMap}}}class Ja extends St{constructor(e,t,i,n,s,a,o,l,c,h){if((h=h!==void 0?h:1026)!==1026&&h!==1027)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&h===1026&&(i=1014),i===void 0&&h===1027&&(i=1020),super(null,n,s,a,o,l,h,i,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:1003,this.minFilter=l!==void 0?l:1003,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const $a=new St,ss=new Ja(1,1);ss.compareFunction=515;const as=new kr,tl=new Hr,il=new es,Mr=[],S=[],u=new Float32Array(16),_=new Float32Array(9),w=new Float32Array(4);function B(r,e,t){const i=r[0];if(i<=0||i>0)return r;const n=e*t;let s=Mr[n];if(s===void 0&&(s=new Float32Array(n),Mr[n]=s),e!==0){i.toArray(s,0);for(let a=1,o=0;a!==e;++a)o+=t,r[a].toArray(s,o)}return s}function F(r,e){if(r.length!==e.length)return!1;for(let t=0,i=r.length;t<i;t++)if(r[t]!==e[t])return!1;return!0}function j(r,e){for(let t=0,i=e.length;t<i;t++)r[t]=e[t]}function re(r,e){let t=S[e];t===void 0&&(t=new Int32Array(e),S[e]=t);for(let i=0;i!==e;++i)t[i]=r.allocateTextureUnit();return t}function pe(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function Me(r,e){const t=this.cache;if(e.x!==void 0)t[0]===e.x&&t[1]===e.y||(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(F(t,e))return;r.uniform2fv(this.addr,e),j(t,e)}}function we(r,e){const t=this.cache;if(e.x!==void 0)t[0]===e.x&&t[1]===e.y&&t[2]===e.z||(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)t[0]===e.r&&t[1]===e.g&&t[2]===e.b||(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(F(t,e))return;r.uniform3fv(this.addr,e),j(t,e)}}function ge(r,e){const t=this.cache;if(e.x!==void 0)t[0]===e.x&&t[1]===e.y&&t[2]===e.z&&t[3]===e.w||(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(F(t,e))return;r.uniform4fv(this.addr,e),j(t,e)}}function Ze(r,e){const t=this.cache,i=e.elements;if(i===void 0){if(F(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),j(t,e)}else{if(F(t,i))return;w.set(i),r.uniformMatrix2fv(this.addr,!1,w),j(t,i)}}function Ie(r,e){const t=this.cache,i=e.elements;if(i===void 0){if(F(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),j(t,e)}else{if(F(t,i))return;_.set(i),r.uniformMatrix3fv(this.addr,!1,_),j(t,i)}}function He(r,e){const t=this.cache,i=e.elements;if(i===void 0){if(F(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),j(t,e)}else{if(F(t,i))return;u.set(i),r.uniformMatrix4fv(this.addr,!1,u),j(t,i)}}function Fe(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function Ge(r,e){const t=this.cache;if(e.x!==void 0)t[0]===e.x&&t[1]===e.y||(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(F(t,e))return;r.uniform2iv(this.addr,e),j(t,e)}}function _t(r,e){const t=this.cache;if(e.x!==void 0)t[0]===e.x&&t[1]===e.y&&t[2]===e.z||(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(F(t,e))return;r.uniform3iv(this.addr,e),j(t,e)}}function bt(r,e){const t=this.cache;if(e.x!==void 0)t[0]===e.x&&t[1]===e.y&&t[2]===e.z&&t[3]===e.w||(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(F(t,e))return;r.uniform4iv(this.addr,e),j(t,e)}}function Ke(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function ct(r,e){const t=this.cache;if(e.x!==void 0)t[0]===e.x&&t[1]===e.y||(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(F(t,e))return;r.uniform2uiv(this.addr,e),j(t,e)}}function Je(r,e){const t=this.cache;if(e.x!==void 0)t[0]===e.x&&t[1]===e.y&&t[2]===e.z||(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(F(t,e))return;r.uniform3uiv(this.addr,e),j(t,e)}}function tt(r,e){const t=this.cache;if(e.x!==void 0)t[0]===e.x&&t[1]===e.y&&t[2]===e.z&&t[3]===e.w||(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(F(t,e))return;r.uniform4uiv(this.addr,e),j(t,e)}}function ft(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n);const s=this.type===r.SAMPLER_2D_SHADOW?ss:$a;t.setTexture2D(e||s,n)}function vt(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n),t.setTexture3D(e||tl,n)}function gt(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n),t.setTextureCube(e||il,n)}function At(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n),t.setTexture2DArray(e||as,n)}function mi(r,e){r.uniform1fv(this.addr,e)}function Ui(r,e){const t=B(e,this.size,2);r.uniform2fv(this.addr,t)}function Kt(r,e){const t=B(e,this.size,3);r.uniform3fv(this.addr,t)}function Mi(r,e){const t=B(e,this.size,4);r.uniform4fv(this.addr,t)}function Si(r,e){const t=B(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function wt(r,e){const t=B(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function qi(r,e){const t=B(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function Yi(r,e){r.uniform1iv(this.addr,e)}function Sr(r,e){r.uniform2iv(this.addr,e)}function Ht(r,e){r.uniform3iv(this.addr,e)}function xt(r,e){r.uniform4iv(this.addr,e)}function Qt(r,e){r.uniform1uiv(this.addr,e)}function wi(r,e){r.uniform2uiv(this.addr,e)}function In(r,e){r.uniform3uiv(this.addr,e)}function la(r,e){r.uniform4uiv(this.addr,e)}function nl(r,e,t){const i=this.cache,n=e.length,s=re(t,n);F(i,s)||(r.uniform1iv(this.addr,s),j(i,s));for(let a=0;a!==n;++a)t.setTexture2D(e[a]||$a,s[a])}function rl(r,e,t){const i=this.cache,n=e.length,s=re(t,n);F(i,s)||(r.uniform1iv(this.addr,s),j(i,s));for(let a=0;a!==n;++a)t.setTexture3D(e[a]||tl,s[a])}function ca(r,e,t){const i=this.cache,n=e.length,s=re(t,n);F(i,s)||(r.uniform1iv(this.addr,s),j(i,s));for(let a=0;a!==n;++a)t.setTextureCube(e[a]||il,s[a])}function Yc(r,e,t){const i=this.cache,n=e.length,s=re(t,n);F(i,s)||(r.uniform1iv(this.addr,s),j(i,s));for(let a=0;a!==n;++a)t.setTexture2DArray(e[a]||as,s[a])}class Zc{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=function(n){switch(n){case 5126:return pe;case 35664:return Me;case 35665:return we;case 35666:return ge;case 35674:return Ze;case 35675:return Ie;case 35676:return He;case 5124:case 35670:return Fe;case 35667:case 35671:return Ge;case 35668:case 35672:return _t;case 35669:case 35673:return bt;case 5125:return Ke;case 36294:return ct;case 36295:return Je;case 36296:return tt;case 35678:case 36198:case 36298:case 36306:case 35682:return ft;case 35679:case 36299:case 36307:return vt;case 35680:case 36300:case 36308:case 36293:return gt;case 36289:case 36303:case 36311:case 36292:return At}}(t.type)}}class Ka{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=function(n){switch(n){case 5126:return mi;case 35664:return Ui;case 35665:return Kt;case 35666:return Mi;case 35674:return Si;case 35675:return wt;case 35676:return qi;case 5124:case 35670:return Yi;case 35667:case 35671:return Sr;case 35668:case 35672:return Ht;case 35669:case 35673:return xt;case 5125:return Qt;case 36294:return wi;case 36295:return In;case 36296:return la;case 35678:case 36198:case 36298:case 36306:case 35682:return nl;case 35679:case 36299:case 36307:return rl;case 35680:case 36300:case 36308:case 36293:return ca;case 36289:case 36303:case 36311:case 36292:return Yc}}(t.type)}}class Jc{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const n=this.seq;for(let s=0,a=n.length;s!==a;++s){const o=n[s];o.setValue(e,t[o.id],i)}}}const ha=/(\w+)(\])?(\[|\.)?/g;function sl(r,e){r.seq.push(e),r.map[e.id]=e}function al(r,e,t){const i=r.name,n=i.length;for(ha.lastIndex=0;;){const s=ha.exec(i),a=ha.lastIndex;let o=s[1];const l=s[2]==="]",c=s[3];if(l&&(o|=0),c===void 0||c==="["&&a+2===n){sl(t,c===void 0?new Zc(o,r,e):new Ka(o,r,e));break}{let h=t.map[o];h===void 0&&(h=new Jc(o),sl(t,h)),t=h}}}class os{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let n=0;n<i;++n){const s=e.getActiveUniform(t,n);al(s,e.getUniformLocation(t,s.name),this)}}setValue(e,t,i,n){const s=this.map[t];s!==void 0&&s.setValue(e,i,n)}setOptional(e,t,i){const n=t[i];n!==void 0&&this.setValue(e,i,n)}static upload(e,t,i,n){for(let s=0,a=t.length;s!==a;++s){const o=t[s],l=i[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,n)}}static seqWithValue(e,t){const i=[];for(let n=0,s=e.length;n!==s;++n){const a=e[n];a.id in t&&i.push(a)}return i}}function ol(r,e,t){const i=r.createShader(e);return r.shaderSource(i,t),r.compileShader(i),i}const $c=37297;let ir=0;function ls(r,e,t){const i=r.getShaderParameter(e,r.COMPILE_STATUS),n=r.getShaderInfoLog(e).trim();if(i&&n==="")return"";const s=/ERROR: 0:(\d+)/.exec(n);if(s){const a=parseInt(s[1]);return t.toUpperCase()+`

`+n+`

`+function(o,l){const c=o.split(`
`),h=[],d=Math.max(l-6,0),p=Math.min(l+6,c.length);for(let m=d;m<p;m++){const f=m+1;h.push(`${f===l?">":" "} ${f}: ${c[m]}`)}return h.join(`
`)}(r.getShaderSource(e),a)}return n}function ll(r,e){const t=function(i){const n=Qe.getPrimaries(Qe.workingColorSpace),s=Qe.getPrimaries(i);let a;switch(n===s?a="":n===xn&&s===Nt?a="LinearDisplayP3ToLinearSRGB":n===Nt&&s===xn&&(a="LinearSRGBToLinearDisplayP3"),i){case Oi:case Ut:return[a,"LinearTransferOETF"];case Dt:case Qi:return[a,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",i),[a,"LinearTransferOETF"]}}(e);return`vec4 ${r}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function cl(r,e){let t;switch(e){case 1:t="Linear";break;case 2:t="Reinhard";break;case 3:t="OptimizedCineon";break;case 4:t="ACESFilmic";break;case 5:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function nr(r){return r!==""}function Qa(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function eo(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const hl=/^[ \t]*#include +<([\w\d./]+)>/gm;function ua(r){return r.replace(hl,Qc)}const Kc=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function Qc(r,e){let t=qe[e];if(t===void 0){const i=Kc.get(e);if(i===void 0)throw new Error("Can not resolve #include <"+e+">");t=qe[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i)}return ua(t)}const to=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function io(r){return r.replace(to,Ip)}function Ip(r,e,t,i){let n="";for(let s=parseInt(e);s<parseInt(t);s++)n+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return n}function Mu(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Dp(r,e,t,i){const n=r.getContext(),s=t.defines;let a=t.vertexShader,o=t.fragmentShader;const l=function(z){let O="SHADOWMAP_TYPE_BASIC";return z.shadowMapType===1?O="SHADOWMAP_TYPE_PCF":z.shadowMapType===2?O="SHADOWMAP_TYPE_PCF_SOFT":z.shadowMapType===3&&(O="SHADOWMAP_TYPE_VSM"),O}(t),c=function(z){let O="ENVMAP_TYPE_CUBE";if(z.envMap)switch(z.envMapMode){case 301:case 302:O="ENVMAP_TYPE_CUBE";break;case 306:O="ENVMAP_TYPE_CUBE_UV"}return O}(t),h=function(z){let O="ENVMAP_MODE_REFLECTION";return z.envMap&&z.envMapMode===302&&(O="ENVMAP_MODE_REFRACTION"),O}(t),d=function(z){let O="ENVMAP_BLENDING_NONE";if(z.envMap)switch(z.combine){case 0:O="ENVMAP_BLENDING_MULTIPLY";break;case 1:O="ENVMAP_BLENDING_MIX";break;case 2:O="ENVMAP_BLENDING_ADD"}return O}(t),p=function(z){const O=z.envMapCubeUVHeight;if(O===null)return null;const se=Math.log2(O)-2,oe=1/O;return{texelWidth:1/(3*Math.max(Math.pow(2,se),112)),texelHeight:oe,maxMip:se}}(t),m=t.isWebGL2?"":function(z){return[z.extensionDerivatives||z.envMapCubeUVHeight||z.bumpMap||z.normalMapTangentSpace||z.clearcoatNormalMap||z.flatShading||z.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(z.extensionFragDepth||z.logarithmicDepthBuffer)&&z.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",z.extensionDrawBuffers&&z.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(z.extensionShaderTextureLOD||z.envMap||z.transmission)&&z.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(nr).join(`
`)}(t),f=function(z){const O=[];for(const se in z){const oe=z[se];oe!==!1&&O.push("#define "+se+" "+oe)}return O.join(`
`)}(s),v=n.createProgram();let g,M,y=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,f].filter(nr).join(`
`),g.length>0&&(g+=`
`),M=[m,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,f].filter(nr).join(`
`),M.length>0&&(M+=`
`)):(g=[Mu(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,f,t.batching?"#define USE_BATCHING":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(nr).join(`
`),M=[m,Mu(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,f,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",p?"#define CUBEUV_TEXEL_WIDTH "+p.texelWidth:"",p?"#define CUBEUV_TEXEL_HEIGHT "+p.texelHeight:"",p?"#define CUBEUV_MAX_MIP "+p.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==0?"#define TONE_MAPPING":"",t.toneMapping!==0?qe.tonemapping_pars_fragment:"",t.toneMapping!==0?cl("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",qe.colorspace_pars_fragment,ll("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(nr).join(`
`)),a=ua(a),a=Qa(a,t),a=eo(a,t),o=ua(o),o=Qa(o,t),o=eo(o,t),a=io(a),o=io(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,M=["precision mediump sampler2DArray;","#define varying in",t.glslVersion===bn?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===bn?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+M);const x=y+g+a,T=y+M+o,A=ol(n,n.VERTEX_SHADER,x),C=ol(n,n.FRAGMENT_SHADER,T);function D(z){if(r.debug.checkShaderErrors){const O=n.getProgramInfoLog(v).trim(),se=n.getShaderInfoLog(A).trim(),oe=n.getShaderInfoLog(C).trim();let _e=!0,ve=!0;if(n.getProgramParameter(v,n.LINK_STATUS)===!1)if(_e=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(n,v,A,C);else{const ee=ls(n,A,"vertex"),le=ls(n,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(v,n.VALIDATE_STATUS)+`

Program Info Log: `+O+`
`+ee+`
`+le)}else O!==""?console.warn("THREE.WebGLProgram: Program Info Log:",O):se!==""&&oe!==""||(ve=!1);ve&&(z.diagnostics={runnable:_e,programLog:O,vertexShader:{log:se,prefix:g},fragmentShader:{log:oe,prefix:M}})}n.deleteShader(A),n.deleteShader(C),V=new os(n,v),k=function(O,se){const oe={},_e=O.getProgramParameter(se,O.ACTIVE_ATTRIBUTES);for(let ve=0;ve<_e;ve++){const ee=O.getActiveAttrib(se,ve),le=ee.name;let ce=1;ee.type===O.FLOAT_MAT2&&(ce=2),ee.type===O.FLOAT_MAT3&&(ce=3),ee.type===O.FLOAT_MAT4&&(ce=4),oe[le]={type:ee.type,location:O.getAttribLocation(se,le),locationSize:ce}}return oe}(n,v)}let V,k;n.attachShader(v,A),n.attachShader(v,C),t.index0AttributeName!==void 0?n.bindAttribLocation(v,0,t.index0AttributeName):t.morphTargets===!0&&n.bindAttribLocation(v,0,"position"),n.linkProgram(v),this.getUniforms=function(){return V===void 0&&D(this),V},this.getAttributes=function(){return k===void 0&&D(this),k};let K=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return K===!1&&(K=n.getProgramParameter(v,$c)),K},this.destroy=function(){i.releaseStatesOfProgram(this),n.deleteProgram(v),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=ir++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=A,this.fragmentShader=C,this}let Up=0;class Np{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,n=this._getShaderStage(t),s=this._getShaderStage(i),a=this._getShaderCacheForMaterial(e);return a.has(n)===!1&&(a.add(n),n.usedTimes++),a.has(s)===!1&&(a.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new Op(e),t.set(e,i)),i}}class Op{constructor(e){this.id=Up++,this.code=e,this.usedTimes=0}}function Fp(r,e,t,i,n,s,a){const o=new Xr,l=new Np,c=[],h=n.isWebGL2,d=n.logarithmicDepthBuffer,p=n.vertexTextures;let m=n.precision;const f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(g){return g===0?"uv":`uv${g}`}return{getParameters:function(g,M,y,x,T){const A=x.fog,C=T.geometry,D=g.isMeshStandardMaterial?x.environment:null,V=(g.isMeshStandardMaterial?t:e).get(g.envMap||D),k=V&&V.mapping===306?V.image.height:null,K=f[g.type];g.precision!==null&&(m=n.getMaxPrecision(g.precision),m!==g.precision&&console.warn("THREE.WebGLProgram.getParameters:",g.precision,"not supported, using",m,"instead."));const z=C.morphAttributes.position||C.morphAttributes.normal||C.morphAttributes.color,O=z!==void 0?z.length:0;let se,oe,_e,ve,ee=0;if(C.morphAttributes.position!==void 0&&(ee=1),C.morphAttributes.normal!==void 0&&(ee=2),C.morphAttributes.color!==void 0&&(ee=3),K){const li=Di[K];se=li.vertexShader,oe=li.fragmentShader}else se=g.vertexShader,oe=g.fragmentShader,l.update(g),_e=l.getVertexShaderID(g),ve=l.getFragmentShaderID(g);const le=r.getRenderTarget(),ce=T.isInstancedMesh===!0,Y=T.isBatchedMesh===!0,ie=!!g.map,Se=!!g.matcap,me=!!V,Ae=!!g.aoMap,Ce=!!g.lightMap,Be=!!g.bumpMap,P=!!g.normalMap,L=!!g.displacementMap,N=!!g.emissiveMap,G=!!g.metalnessMap,U=!!g.roughnessMap,W=g.anisotropy>0,H=g.clearcoat>0,E=g.iridescence>0,X=g.sheen>0,q=g.transmission>0,ae=W&&!!g.anisotropyMap,J=H&&!!g.clearcoatMap,Ne=H&&!!g.clearcoatNormalMap,Te=H&&!!g.clearcoatRoughnessMap,de=E&&!!g.iridescenceMap,De=E&&!!g.iridescenceThicknessMap,ye=X&&!!g.sheenColorMap,Pe=X&&!!g.sheenRoughnessMap,ke=!!g.specularMap,yt=!!g.specularColorMap,ut=!!g.specularIntensityMap,Le=q&&!!g.transmissionMap,ot=q&&!!g.thicknessMap,Zi=!!g.gradientMap,Ve=!!g.alphaMap,Et=g.alphaTest>0,rt=!!g.alphaHash,Ji=!!g.extensions,Sa=!!C.attributes.uv1,$=!!C.attributes.uv2,ic=!!C.attributes.uv3;let Eo=0;return g.toneMapped&&(le!==null&&le.isXRRenderTarget!==!0||(Eo=r.toneMapping)),{isWebGL2:h,shaderID:K,shaderType:g.type,shaderName:g.name,vertexShader:se,fragmentShader:oe,defines:g.defines,customVertexShaderID:_e,customFragmentShaderID:ve,isRawShaderMaterial:g.isRawShaderMaterial===!0,glslVersion:g.glslVersion,precision:m,batching:Y,instancing:ce,instancingColor:ce&&T.instanceColor!==null,supportsVertexTextures:p,outputColorSpace:le===null?r.outputColorSpace:le.isXRRenderTarget===!0?le.texture.colorSpace:Oi,map:ie,matcap:Se,envMap:me,envMapMode:me&&V.mapping,envMapCubeUVHeight:k,aoMap:Ae,lightMap:Ce,bumpMap:Be,normalMap:P,displacementMap:p&&L,emissiveMap:N,normalMapObjectSpace:P&&g.normalMapType===1,normalMapTangentSpace:P&&g.normalMapType===0,metalnessMap:G,roughnessMap:U,anisotropy:W,anisotropyMap:ae,clearcoat:H,clearcoatMap:J,clearcoatNormalMap:Ne,clearcoatRoughnessMap:Te,iridescence:E,iridescenceMap:de,iridescenceThicknessMap:De,sheen:X,sheenColorMap:ye,sheenRoughnessMap:Pe,specularMap:ke,specularColorMap:yt,specularIntensityMap:ut,transmission:q,transmissionMap:Le,thicknessMap:ot,gradientMap:Zi,opaque:g.transparent===!1&&g.blending===1,alphaMap:Ve,alphaTest:Et,alphaHash:rt,combine:g.combine,mapUv:ie&&v(g.map.channel),aoMapUv:Ae&&v(g.aoMap.channel),lightMapUv:Ce&&v(g.lightMap.channel),bumpMapUv:Be&&v(g.bumpMap.channel),normalMapUv:P&&v(g.normalMap.channel),displacementMapUv:L&&v(g.displacementMap.channel),emissiveMapUv:N&&v(g.emissiveMap.channel),metalnessMapUv:G&&v(g.metalnessMap.channel),roughnessMapUv:U&&v(g.roughnessMap.channel),anisotropyMapUv:ae&&v(g.anisotropyMap.channel),clearcoatMapUv:J&&v(g.clearcoatMap.channel),clearcoatNormalMapUv:Ne&&v(g.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Te&&v(g.clearcoatRoughnessMap.channel),iridescenceMapUv:de&&v(g.iridescenceMap.channel),iridescenceThicknessMapUv:De&&v(g.iridescenceThicknessMap.channel),sheenColorMapUv:ye&&v(g.sheenColorMap.channel),sheenRoughnessMapUv:Pe&&v(g.sheenRoughnessMap.channel),specularMapUv:ke&&v(g.specularMap.channel),specularColorMapUv:yt&&v(g.specularColorMap.channel),specularIntensityMapUv:ut&&v(g.specularIntensityMap.channel),transmissionMapUv:Le&&v(g.transmissionMap.channel),thicknessMapUv:ot&&v(g.thicknessMap.channel),alphaMapUv:Ve&&v(g.alphaMap.channel),vertexTangents:!!C.attributes.tangent&&(P||W),vertexColors:g.vertexColors,vertexAlphas:g.vertexColors===!0&&!!C.attributes.color&&C.attributes.color.itemSize===4,vertexUv1s:Sa,vertexUv2s:$,vertexUv3s:ic,pointsUvs:T.isPoints===!0&&!!C.attributes.uv&&(ie||Ve),fog:!!A,useFog:g.fog===!0,fogExp2:A&&A.isFogExp2,flatShading:g.flatShading===!0,sizeAttenuation:g.sizeAttenuation===!0,logarithmicDepthBuffer:d,skinning:T.isSkinnedMesh===!0,morphTargets:C.morphAttributes.position!==void 0,morphNormals:C.morphAttributes.normal!==void 0,morphColors:C.morphAttributes.color!==void 0,morphTargetsCount:O,morphTextureStride:ee,numDirLights:M.directional.length,numPointLights:M.point.length,numSpotLights:M.spot.length,numSpotLightMaps:M.spotLightMap.length,numRectAreaLights:M.rectArea.length,numHemiLights:M.hemi.length,numDirLightShadows:M.directionalShadowMap.length,numPointLightShadows:M.pointShadowMap.length,numSpotLightShadows:M.spotShadowMap.length,numSpotLightShadowsWithMaps:M.numSpotLightShadowsWithMaps,numLightProbes:M.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:g.dithering,shadowMapEnabled:r.shadowMap.enabled&&y.length>0,shadowMapType:r.shadowMap.type,toneMapping:Eo,useLegacyLights:r._useLegacyLights,decodeVideoTexture:ie&&g.map.isVideoTexture===!0&&Qe.getTransfer(g.map.colorSpace)===$e,premultipliedAlpha:g.premultipliedAlpha,doubleSided:g.side===2,flipSided:g.side===1,useDepthPacking:g.depthPacking>=0,depthPacking:g.depthPacking||0,index0AttributeName:g.index0AttributeName,extensionDerivatives:Ji&&g.extensions.derivatives===!0,extensionFragDepth:Ji&&g.extensions.fragDepth===!0,extensionDrawBuffers:Ji&&g.extensions.drawBuffers===!0,extensionShaderTextureLOD:Ji&&g.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:h||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||i.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:g.customProgramCacheKey()}},getProgramCacheKey:function(g){const M=[];if(g.shaderID?M.push(g.shaderID):(M.push(g.customVertexShaderID),M.push(g.customFragmentShaderID)),g.defines!==void 0)for(const y in g.defines)M.push(y),M.push(g.defines[y]);return g.isRawShaderMaterial===!1&&(function(y,x){y.push(x.precision),y.push(x.outputColorSpace),y.push(x.envMapMode),y.push(x.envMapCubeUVHeight),y.push(x.mapUv),y.push(x.alphaMapUv),y.push(x.lightMapUv),y.push(x.aoMapUv),y.push(x.bumpMapUv),y.push(x.normalMapUv),y.push(x.displacementMapUv),y.push(x.emissiveMapUv),y.push(x.metalnessMapUv),y.push(x.roughnessMapUv),y.push(x.anisotropyMapUv),y.push(x.clearcoatMapUv),y.push(x.clearcoatNormalMapUv),y.push(x.clearcoatRoughnessMapUv),y.push(x.iridescenceMapUv),y.push(x.iridescenceThicknessMapUv),y.push(x.sheenColorMapUv),y.push(x.sheenRoughnessMapUv),y.push(x.specularMapUv),y.push(x.specularColorMapUv),y.push(x.specularIntensityMapUv),y.push(x.transmissionMapUv),y.push(x.thicknessMapUv),y.push(x.combine),y.push(x.fogExp2),y.push(x.sizeAttenuation),y.push(x.morphTargetsCount),y.push(x.morphAttributeCount),y.push(x.numDirLights),y.push(x.numPointLights),y.push(x.numSpotLights),y.push(x.numSpotLightMaps),y.push(x.numHemiLights),y.push(x.numRectAreaLights),y.push(x.numDirLightShadows),y.push(x.numPointLightShadows),y.push(x.numSpotLightShadows),y.push(x.numSpotLightShadowsWithMaps),y.push(x.numLightProbes),y.push(x.shadowMapType),y.push(x.toneMapping),y.push(x.numClippingPlanes),y.push(x.numClipIntersection),y.push(x.depthPacking)}(M,g),function(y,x){o.disableAll(),x.isWebGL2&&o.enable(0),x.supportsVertexTextures&&o.enable(1),x.instancing&&o.enable(2),x.instancingColor&&o.enable(3),x.matcap&&o.enable(4),x.envMap&&o.enable(5),x.normalMapObjectSpace&&o.enable(6),x.normalMapTangentSpace&&o.enable(7),x.clearcoat&&o.enable(8),x.iridescence&&o.enable(9),x.alphaTest&&o.enable(10),x.vertexColors&&o.enable(11),x.vertexAlphas&&o.enable(12),x.vertexUv1s&&o.enable(13),x.vertexUv2s&&o.enable(14),x.vertexUv3s&&o.enable(15),x.vertexTangents&&o.enable(16),x.anisotropy&&o.enable(17),x.alphaHash&&o.enable(18),x.batching&&o.enable(19),y.push(o.mask),o.disableAll(),x.fog&&o.enable(0),x.useFog&&o.enable(1),x.flatShading&&o.enable(2),x.logarithmicDepthBuffer&&o.enable(3),x.skinning&&o.enable(4),x.morphTargets&&o.enable(5),x.morphNormals&&o.enable(6),x.morphColors&&o.enable(7),x.premultipliedAlpha&&o.enable(8),x.shadowMapEnabled&&o.enable(9),x.useLegacyLights&&o.enable(10),x.doubleSided&&o.enable(11),x.flipSided&&o.enable(12),x.useDepthPacking&&o.enable(13),x.dithering&&o.enable(14),x.transmission&&o.enable(15),x.sheen&&o.enable(16),x.opaque&&o.enable(17),x.pointsUvs&&o.enable(18),x.decodeVideoTexture&&o.enable(19),y.push(o.mask)}(M,g),M.push(r.outputColorSpace)),M.push(g.customProgramCacheKey),M.join()},getUniforms:function(g){const M=f[g.type];let y;if(M){const x=Di[M];y=Kr.clone(x.uniforms)}else y=g.uniforms;return y},acquireProgram:function(g,M){let y;for(let x=0,T=c.length;x<T;x++){const A=c[x];if(A.cacheKey===M){y=A,++y.usedTimes;break}}return y===void 0&&(y=new Dp(r,M,g,s),c.push(y)),y},releaseProgram:function(g){if(--g.usedTimes==0){const M=c.indexOf(g);c[M]=c[c.length-1],c.pop(),g.destroy()}},releaseShaderCache:function(g){l.remove(g)},programs:c,dispose:function(){l.dispose()}}}function Bp(){let r=new WeakMap;return{get:function(e){let t=r.get(e);return t===void 0&&(t={},r.set(e,t)),t},remove:function(e){r.delete(e)},update:function(e,t,i){r.get(e)[t]=i},dispose:function(){r=new WeakMap}}}function zp(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function Su(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function wu(){const r=[];let e=0;const t=[],i=[],n=[];function s(a,o,l,c,h,d){let p=r[e];return p===void 0?(p={id:a.id,object:a,geometry:o,material:l,groupOrder:c,renderOrder:a.renderOrder,z:h,group:d},r[e]=p):(p.id=a.id,p.object=a,p.geometry=o,p.material=l,p.groupOrder=c,p.renderOrder=a.renderOrder,p.z=h,p.group=d),e++,p}return{opaque:t,transmissive:i,transparent:n,init:function(){e=0,t.length=0,i.length=0,n.length=0},push:function(a,o,l,c,h,d){const p=s(a,o,l,c,h,d);l.transmission>0?i.push(p):l.transparent===!0?n.push(p):t.push(p)},unshift:function(a,o,l,c,h,d){const p=s(a,o,l,c,h,d);l.transmission>0?i.unshift(p):l.transparent===!0?n.unshift(p):t.unshift(p)},finish:function(){for(let a=e,o=r.length;a<o;a++){const l=r[a];if(l.id===null)break;l.id=null,l.object=null,l.geometry=null,l.material=null,l.group=null}},sort:function(a,o){t.length>1&&t.sort(a||zp),i.length>1&&i.sort(o||Su),n.length>1&&n.sort(o||Su)}}}function kp(){let r=new WeakMap;return{get:function(e,t){const i=r.get(e);let n;return i===void 0?(n=new wu,r.set(e,[n])):t>=i.length?(n=new wu,i.push(n)):n=i[t],n},dispose:function(){r=new WeakMap}}}function Hp(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new R,color:new be};break;case"SpotLight":t={position:new R,direction:new R,color:new be,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new R,color:new be,distance:0,decay:0};break;case"HemisphereLight":t={direction:new R,skyColor:new be,groundColor:new be};break;case"RectAreaLight":t={color:new be,position:new R,halfWidth:new R,halfHeight:new R}}return r[e.id]=t,t}}}let Gp=0;function Vp(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function Wp(r,e){const t=new Hp,i=function(){const l={};return{get:function(c){if(l[c.id]!==void 0)return l[c.id];let h;switch(c.type){case"DirectionalLight":case"SpotLight":h={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new te};break;case"PointLight":h={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new te,shadowCameraNear:1,shadowCameraFar:1e3}}return l[c.id]=h,h}}}(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let l=0;l<9;l++)n.probe.push(new R);const s=new R,a=new Ue,o=new Ue;return{setup:function(l,c){let h=0,d=0,p=0;for(let K=0;K<9;K++)n.probe[K].set(0,0,0);let m=0,f=0,v=0,g=0,M=0,y=0,x=0,T=0,A=0,C=0,D=0;l.sort(Vp);const V=c===!0?Math.PI:1;for(let K=0,z=l.length;K<z;K++){const O=l[K],se=O.color,oe=O.intensity,_e=O.distance,ve=O.shadow&&O.shadow.map?O.shadow.map.texture:null;if(O.isAmbientLight)h+=se.r*oe*V,d+=se.g*oe*V,p+=se.b*oe*V;else if(O.isLightProbe){for(let ee=0;ee<9;ee++)n.probe[ee].addScaledVector(O.sh.coefficients[ee],oe);D++}else if(O.isDirectionalLight){const ee=t.get(O);if(ee.color.copy(O.color).multiplyScalar(O.intensity*V),O.castShadow){const le=O.shadow,ce=i.get(O);ce.shadowBias=le.bias,ce.shadowNormalBias=le.normalBias,ce.shadowRadius=le.radius,ce.shadowMapSize=le.mapSize,n.directionalShadow[m]=ce,n.directionalShadowMap[m]=ve,n.directionalShadowMatrix[m]=O.shadow.matrix,y++}n.directional[m]=ee,m++}else if(O.isSpotLight){const ee=t.get(O);ee.position.setFromMatrixPosition(O.matrixWorld),ee.color.copy(se).multiplyScalar(oe*V),ee.distance=_e,ee.coneCos=Math.cos(O.angle),ee.penumbraCos=Math.cos(O.angle*(1-O.penumbra)),ee.decay=O.decay,n.spot[v]=ee;const le=O.shadow;if(O.map&&(n.spotLightMap[A]=O.map,A++,le.updateMatrices(O),O.castShadow&&C++),n.spotLightMatrix[v]=le.matrix,O.castShadow){const ce=i.get(O);ce.shadowBias=le.bias,ce.shadowNormalBias=le.normalBias,ce.shadowRadius=le.radius,ce.shadowMapSize=le.mapSize,n.spotShadow[v]=ce,n.spotShadowMap[v]=ve,T++}v++}else if(O.isRectAreaLight){const ee=t.get(O);ee.color.copy(se).multiplyScalar(oe),ee.halfWidth.set(.5*O.width,0,0),ee.halfHeight.set(0,.5*O.height,0),n.rectArea[g]=ee,g++}else if(O.isPointLight){const ee=t.get(O);if(ee.color.copy(O.color).multiplyScalar(O.intensity*V),ee.distance=O.distance,ee.decay=O.decay,O.castShadow){const le=O.shadow,ce=i.get(O);ce.shadowBias=le.bias,ce.shadowNormalBias=le.normalBias,ce.shadowRadius=le.radius,ce.shadowMapSize=le.mapSize,ce.shadowCameraNear=le.camera.near,ce.shadowCameraFar=le.camera.far,n.pointShadow[f]=ce,n.pointShadowMap[f]=ve,n.pointShadowMatrix[f]=O.shadow.matrix,x++}n.point[f]=ee,f++}else if(O.isHemisphereLight){const ee=t.get(O);ee.skyColor.copy(O.color).multiplyScalar(oe*V),ee.groundColor.copy(O.groundColor).multiplyScalar(oe*V),n.hemi[M]=ee,M++}}g>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=fe.LTC_FLOAT_1,n.rectAreaLTC2=fe.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(n.rectAreaLTC1=fe.LTC_HALF_1,n.rectAreaLTC2=fe.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),n.ambient[0]=h,n.ambient[1]=d,n.ambient[2]=p;const k=n.hash;k.directionalLength===m&&k.pointLength===f&&k.spotLength===v&&k.rectAreaLength===g&&k.hemiLength===M&&k.numDirectionalShadows===y&&k.numPointShadows===x&&k.numSpotShadows===T&&k.numSpotMaps===A&&k.numLightProbes===D||(n.directional.length=m,n.spot.length=v,n.rectArea.length=g,n.point.length=f,n.hemi.length=M,n.directionalShadow.length=y,n.directionalShadowMap.length=y,n.pointShadow.length=x,n.pointShadowMap.length=x,n.spotShadow.length=T,n.spotShadowMap.length=T,n.directionalShadowMatrix.length=y,n.pointShadowMatrix.length=x,n.spotLightMatrix.length=T+A-C,n.spotLightMap.length=A,n.numSpotLightShadowsWithMaps=C,n.numLightProbes=D,k.directionalLength=m,k.pointLength=f,k.spotLength=v,k.rectAreaLength=g,k.hemiLength=M,k.numDirectionalShadows=y,k.numPointShadows=x,k.numSpotShadows=T,k.numSpotMaps=A,k.numLightProbes=D,n.version=Gp++)},setupView:function(l,c){let h=0,d=0,p=0,m=0,f=0;const v=c.matrixWorldInverse;for(let g=0,M=l.length;g<M;g++){const y=l[g];if(y.isDirectionalLight){const x=n.directional[h];x.direction.setFromMatrixPosition(y.matrixWorld),s.setFromMatrixPosition(y.target.matrixWorld),x.direction.sub(s),x.direction.transformDirection(v),h++}else if(y.isSpotLight){const x=n.spot[p];x.position.setFromMatrixPosition(y.matrixWorld),x.position.applyMatrix4(v),x.direction.setFromMatrixPosition(y.matrixWorld),s.setFromMatrixPosition(y.target.matrixWorld),x.direction.sub(s),x.direction.transformDirection(v),p++}else if(y.isRectAreaLight){const x=n.rectArea[m];x.position.setFromMatrixPosition(y.matrixWorld),x.position.applyMatrix4(v),o.identity(),a.copy(y.matrixWorld),a.premultiply(v),o.extractRotation(a),x.halfWidth.set(.5*y.width,0,0),x.halfHeight.set(0,.5*y.height,0),x.halfWidth.applyMatrix4(o),x.halfHeight.applyMatrix4(o),m++}else if(y.isPointLight){const x=n.point[d];x.position.setFromMatrixPosition(y.matrixWorld),x.position.applyMatrix4(v),d++}else if(y.isHemisphereLight){const x=n.hemi[f];x.direction.setFromMatrixPosition(y.matrixWorld),x.direction.transformDirection(v),f++}}},state:n}}function Eu(r,e){const t=new Wp(r,e),i=[],n=[];return{init:function(){i.length=0,n.length=0},state:{lightsArray:i,shadowsArray:n,lights:t},setupLights:function(s){t.setup(i,s)},setupLightsView:function(s){t.setupView(i,s)},pushLight:function(s){i.push(s)},pushShadow:function(s){n.push(s)}}}function jp(r,e){let t=new WeakMap;return{get:function(i,n=0){const s=t.get(i);let a;return s===void 0?(a=new Eu(r,e),t.set(i,[a])):n>=s.length?(a=new Eu(r,e),s.push(a)):a=s[n],a},dispose:function(){t=new WeakMap}}}class eh extends qt{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class th extends qt{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function Xp(r,e,t){let i=new yr;const n=new te,s=new te,a=new dt,o=new eh({depthPacking:3201}),l=new th,c={},h=t.maxTextureSize,d={0:1,1:0,2:2},p=new Pi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new te},radius:{value:4}},vertexShader:`void main() {
	gl_Position = vec4( position, 1.0 );
}`,fragmentShader:`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`}),m=p.clone();m.defines.HORIZONTAL_PASS=1;const f=new Ye;f.setAttribute("position",new mt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const v=new Ft(f,p),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1;let M=this.type;function y(A,C){const D=e.update(v);p.defines.VSM_SAMPLES!==A.blurSamples&&(p.defines.VSM_SAMPLES=A.blurSamples,m.defines.VSM_SAMPLES=A.blurSamples,p.needsUpdate=!0,m.needsUpdate=!0),A.mapPass===null&&(A.mapPass=new Li(n.x,n.y)),p.uniforms.shadow_pass.value=A.map.texture,p.uniforms.resolution.value=A.mapSize,p.uniforms.radius.value=A.radius,r.setRenderTarget(A.mapPass),r.clear(),r.renderBufferDirect(C,null,D,p,v,null),m.uniforms.shadow_pass.value=A.mapPass.texture,m.uniforms.resolution.value=A.mapSize,m.uniforms.radius.value=A.radius,r.setRenderTarget(A.map),r.clear(),r.renderBufferDirect(C,null,D,m,v,null)}function x(A,C,D,V){let k=null;const K=D.isPointLight===!0?A.customDistanceMaterial:A.customDepthMaterial;if(K!==void 0)k=K;else if(k=D.isPointLight===!0?l:o,r.localClippingEnabled&&C.clipShadows===!0&&Array.isArray(C.clippingPlanes)&&C.clippingPlanes.length!==0||C.displacementMap&&C.displacementScale!==0||C.alphaMap&&C.alphaTest>0||C.map&&C.alphaTest>0){const z=k.uuid,O=C.uuid;let se=c[z];se===void 0&&(se={},c[z]=se);let oe=se[O];oe===void 0&&(oe=k.clone(),se[O]=oe),k=oe}return k.visible=C.visible,k.wireframe=C.wireframe,k.side=V===3?C.shadowSide!==null?C.shadowSide:C.side:C.shadowSide!==null?C.shadowSide:d[C.side],k.alphaMap=C.alphaMap,k.alphaTest=C.alphaTest,k.map=C.map,k.clipShadows=C.clipShadows,k.clippingPlanes=C.clippingPlanes,k.clipIntersection=C.clipIntersection,k.displacementMap=C.displacementMap,k.displacementScale=C.displacementScale,k.displacementBias=C.displacementBias,k.wireframeLinewidth=C.wireframeLinewidth,k.linewidth=C.linewidth,D.isPointLight===!0&&k.isMeshDistanceMaterial===!0&&(r.properties.get(k).light=D),k}function T(A,C,D,V,k){if(A.visible===!1)return;if(A.layers.test(C.layers)&&(A.isMesh||A.isLine||A.isPoints)&&(A.castShadow||A.receiveShadow&&k===3)&&(!A.frustumCulled||i.intersectsObject(A))){A.modelViewMatrix.multiplyMatrices(D.matrixWorldInverse,A.matrixWorld);const z=e.update(A),O=A.material;if(Array.isArray(O)){const se=z.groups;for(let oe=0,_e=se.length;oe<_e;oe++){const ve=se[oe],ee=O[ve.materialIndex];if(ee&&ee.visible){const le=x(A,ee,V,k);A.onBeforeShadow(r,A,C,D,z,le,ve),r.renderBufferDirect(D,null,z,le,A,ve),A.onAfterShadow(r,A,C,D,z,le,ve)}}}else if(O.visible){const se=x(A,O,V,k);A.onBeforeShadow(r,A,C,D,z,se,null),r.renderBufferDirect(D,null,z,se,A,null),A.onAfterShadow(r,A,C,D,z,se,null)}}const K=A.children;for(let z=0,O=K.length;z<O;z++)T(K[z],C,D,V,k)}this.render=function(A,C,D){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||A.length===0)return;const V=r.getRenderTarget(),k=r.getActiveCubeFace(),K=r.getActiveMipmapLevel(),z=r.state;z.setBlending(0),z.buffers.color.setClear(1,1,1,1),z.buffers.depth.setTest(!0),z.setScissorTest(!1);const O=M!==3&&this.type===3,se=M===3&&this.type!==3;for(let oe=0,_e=A.length;oe<_e;oe++){const ve=A[oe],ee=ve.shadow;if(ee===void 0){console.warn("THREE.WebGLShadowMap:",ve,"has no shadow.");continue}if(ee.autoUpdate===!1&&ee.needsUpdate===!1)continue;n.copy(ee.mapSize);const le=ee.getFrameExtents();if(n.multiply(le),s.copy(ee.mapSize),(n.x>h||n.y>h)&&(n.x>h&&(s.x=Math.floor(h/le.x),n.x=s.x*le.x,ee.mapSize.x=s.x),n.y>h&&(s.y=Math.floor(h/le.y),n.y=s.y*le.y,ee.mapSize.y=s.y)),ee.map===null||O===!0||se===!0){const Y=this.type!==3?{minFilter:1003,magFilter:1003}:{};ee.map!==null&&ee.map.dispose(),ee.map=new Li(n.x,n.y,Y),ee.map.texture.name=ve.name+".shadowMap",ee.camera.updateProjectionMatrix()}r.setRenderTarget(ee.map),r.clear();const ce=ee.getViewportCount();for(let Y=0;Y<ce;Y++){const ie=ee.getViewport(Y);a.set(s.x*ie.x,s.y*ie.y,s.x*ie.z,s.y*ie.w),z.viewport(a),ee.updateMatrices(ve,Y),i=ee.getFrustum(),T(C,D,ee.camera,ve,this.type)}ee.isPointLightShadow!==!0&&this.type===3&&y(ee,D),ee.needsUpdate=!1}M=this.type,g.needsUpdate=!1,r.setRenderTarget(V,k,K)}}function qp(r,e,t){const i=t.isWebGL2,n=new function(){let E=!1;const X=new dt;let q=null;const ae=new dt(0,0,0,0);return{setMask:function(J){q===J||E||(r.colorMask(J,J,J,J),q=J)},setLocked:function(J){E=J},setClear:function(J,Ne,Te,de,De){De===!0&&(J*=de,Ne*=de,Te*=de),X.set(J,Ne,Te,de),ae.equals(X)===!1&&(r.clearColor(J,Ne,Te,de),ae.copy(X))},reset:function(){E=!1,q=null,ae.set(-1,0,0,0)}}},s=new function(){let E=!1,X=null,q=null,ae=null;return{setTest:function(J){J?Be(r.DEPTH_TEST):P(r.DEPTH_TEST)},setMask:function(J){X===J||E||(r.depthMask(J),X=J)},setFunc:function(J){if(q!==J){switch(J){case 0:r.depthFunc(r.NEVER);break;case 1:r.depthFunc(r.ALWAYS);break;case 2:r.depthFunc(r.LESS);break;case 3:default:r.depthFunc(r.LEQUAL);break;case 4:r.depthFunc(r.EQUAL);break;case 5:r.depthFunc(r.GEQUAL);break;case 6:r.depthFunc(r.GREATER);break;case 7:r.depthFunc(r.NOTEQUAL)}q=J}},setLocked:function(J){E=J},setClear:function(J){ae!==J&&(r.clearDepth(J),ae=J)},reset:function(){E=!1,X=null,q=null,ae=null}}},a=new function(){let E=!1,X=null,q=null,ae=null,J=null,Ne=null,Te=null,de=null,De=null;return{setTest:function(ye){E||(ye?Be(r.STENCIL_TEST):P(r.STENCIL_TEST))},setMask:function(ye){X===ye||E||(r.stencilMask(ye),X=ye)},setFunc:function(ye,Pe,ke){q===ye&&ae===Pe&&J===ke||(r.stencilFunc(ye,Pe,ke),q=ye,ae=Pe,J=ke)},setOp:function(ye,Pe,ke){Ne===ye&&Te===Pe&&de===ke||(r.stencilOp(ye,Pe,ke),Ne=ye,Te=Pe,de=ke)},setLocked:function(ye){E=ye},setClear:function(ye){De!==ye&&(r.clearStencil(ye),De=ye)},reset:function(){E=!1,X=null,q=null,ae=null,J=null,Ne=null,Te=null,de=null,De=null}}},o=new WeakMap,l=new WeakMap;let c={},h={},d=new WeakMap,p=[],m=null,f=!1,v=null,g=null,M=null,y=null,x=null,T=null,A=null,C=new be(0,0,0),D=0,V=!1,k=null,K=null,z=null,O=null,se=null;const oe=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let _e=!1,ve=0;const ee=r.getParameter(r.VERSION);ee.indexOf("WebGL")!==-1?(ve=parseFloat(/^WebGL (\d)/.exec(ee)[1]),_e=ve>=1):ee.indexOf("OpenGL ES")!==-1&&(ve=parseFloat(/^OpenGL ES (\d)/.exec(ee)[1]),_e=ve>=2);let le=null,ce={};const Y=r.getParameter(r.SCISSOR_BOX),ie=r.getParameter(r.VIEWPORT),Se=new dt().fromArray(Y),me=new dt().fromArray(ie);function Ae(E,X,q,ae){const J=new Uint8Array(4),Ne=r.createTexture();r.bindTexture(E,Ne),r.texParameteri(E,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(E,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Te=0;Te<q;Te++)!i||E!==r.TEXTURE_3D&&E!==r.TEXTURE_2D_ARRAY?r.texImage2D(X+Te,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,J):r.texImage3D(X,0,r.RGBA,1,1,ae,0,r.RGBA,r.UNSIGNED_BYTE,J);return Ne}const Ce={};function Be(E){c[E]!==!0&&(r.enable(E),c[E]=!0)}function P(E){c[E]!==!1&&(r.disable(E),c[E]=!1)}Ce[r.TEXTURE_2D]=Ae(r.TEXTURE_2D,r.TEXTURE_2D,1),Ce[r.TEXTURE_CUBE_MAP]=Ae(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),i&&(Ce[r.TEXTURE_2D_ARRAY]=Ae(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Ce[r.TEXTURE_3D]=Ae(r.TEXTURE_3D,r.TEXTURE_3D,1,1)),n.setClear(0,0,0,1),s.setClear(1),a.setClear(0),Be(r.DEPTH_TEST),s.setFunc(3),U(!1),W(1),Be(r.CULL_FACE),G(0);const L={100:r.FUNC_ADD,101:r.FUNC_SUBTRACT,102:r.FUNC_REVERSE_SUBTRACT};if(i)L[103]=r.MIN,L[104]=r.MAX;else{const E=e.get("EXT_blend_minmax");E!==null&&(L[103]=E.MIN_EXT,L[104]=E.MAX_EXT)}const N={200:r.ZERO,201:r.ONE,202:r.SRC_COLOR,204:r.SRC_ALPHA,210:r.SRC_ALPHA_SATURATE,208:r.DST_COLOR,206:r.DST_ALPHA,203:r.ONE_MINUS_SRC_COLOR,205:r.ONE_MINUS_SRC_ALPHA,209:r.ONE_MINUS_DST_COLOR,207:r.ONE_MINUS_DST_ALPHA,211:r.CONSTANT_COLOR,212:r.ONE_MINUS_CONSTANT_COLOR,213:r.CONSTANT_ALPHA,214:r.ONE_MINUS_CONSTANT_ALPHA};function G(E,X,q,ae,J,Ne,Te,de,De,ye){if(E!==0){if(f===!1&&(Be(r.BLEND),f=!0),E===5)J=J||X,Ne=Ne||q,Te=Te||ae,X===g&&J===x||(r.blendEquationSeparate(L[X],L[J]),g=X,x=J),q===M&&ae===y&&Ne===T&&Te===A||(r.blendFuncSeparate(N[q],N[ae],N[Ne],N[Te]),M=q,y=ae,T=Ne,A=Te),de.equals(C)!==!1&&De===D||(r.blendColor(de.r,de.g,de.b,De),C.copy(de),D=De),v=E,V=!1;else if(E!==v||ye!==V){if(g===100&&x===100||(r.blendEquation(r.FUNC_ADD),g=100,x=100),ye)switch(E){case 1:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case 2:r.blendFunc(r.ONE,r.ONE);break;case 3:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case 4:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",E)}else switch(E){case 1:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case 2:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case 3:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case 4:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",E)}M=null,y=null,T=null,A=null,C.set(0,0,0),D=0,v=E,V=ye}}else f===!0&&(P(r.BLEND),f=!1)}function U(E){k!==E&&(E?r.frontFace(r.CW):r.frontFace(r.CCW),k=E)}function W(E){E!==0?(Be(r.CULL_FACE),E!==K&&(E===1?r.cullFace(r.BACK):E===2?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):P(r.CULL_FACE),K=E}function H(E,X,q){E?(Be(r.POLYGON_OFFSET_FILL),O===X&&se===q||(r.polygonOffset(X,q),O=X,se=q)):P(r.POLYGON_OFFSET_FILL)}return{buffers:{color:n,depth:s,stencil:a},enable:Be,disable:P,bindFramebuffer:function(E,X){return h[E]!==X&&(r.bindFramebuffer(E,X),h[E]=X,i&&(E===r.DRAW_FRAMEBUFFER&&(h[r.FRAMEBUFFER]=X),E===r.FRAMEBUFFER&&(h[r.DRAW_FRAMEBUFFER]=X)),!0)},drawBuffers:function(E,X){let q=p,ae=!1;if(E)if(q=d.get(X),q===void 0&&(q=[],d.set(X,q)),E.isWebGLMultipleRenderTargets){const J=E.texture;if(q.length!==J.length||q[0]!==r.COLOR_ATTACHMENT0){for(let Ne=0,Te=J.length;Ne<Te;Ne++)q[Ne]=r.COLOR_ATTACHMENT0+Ne;q.length=J.length,ae=!0}}else q[0]!==r.COLOR_ATTACHMENT0&&(q[0]=r.COLOR_ATTACHMENT0,ae=!0);else q[0]!==r.BACK&&(q[0]=r.BACK,ae=!0);ae&&(t.isWebGL2?r.drawBuffers(q):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(q))},useProgram:function(E){return m!==E&&(r.useProgram(E),m=E,!0)},setBlending:G,setMaterial:function(E,X){E.side===2?P(r.CULL_FACE):Be(r.CULL_FACE);let q=E.side===1;X&&(q=!q),U(q),E.blending===1&&E.transparent===!1?G(0):G(E.blending,E.blendEquation,E.blendSrc,E.blendDst,E.blendEquationAlpha,E.blendSrcAlpha,E.blendDstAlpha,E.blendColor,E.blendAlpha,E.premultipliedAlpha),s.setFunc(E.depthFunc),s.setTest(E.depthTest),s.setMask(E.depthWrite),n.setMask(E.colorWrite);const ae=E.stencilWrite;a.setTest(ae),ae&&(a.setMask(E.stencilWriteMask),a.setFunc(E.stencilFunc,E.stencilRef,E.stencilFuncMask),a.setOp(E.stencilFail,E.stencilZFail,E.stencilZPass)),H(E.polygonOffset,E.polygonOffsetFactor,E.polygonOffsetUnits),E.alphaToCoverage===!0?Be(r.SAMPLE_ALPHA_TO_COVERAGE):P(r.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:U,setCullFace:W,setLineWidth:function(E){E!==z&&(_e&&r.lineWidth(E),z=E)},setPolygonOffset:H,setScissorTest:function(E){E?Be(r.SCISSOR_TEST):P(r.SCISSOR_TEST)},activeTexture:function(E){E===void 0&&(E=r.TEXTURE0+oe-1),le!==E&&(r.activeTexture(E),le=E)},bindTexture:function(E,X,q){q===void 0&&(q=le===null?r.TEXTURE0+oe-1:le);let ae=ce[q];ae===void 0&&(ae={type:void 0,texture:void 0},ce[q]=ae),ae.type===E&&ae.texture===X||(le!==q&&(r.activeTexture(q),le=q),r.bindTexture(E,X||Ce[E]),ae.type=E,ae.texture=X)},unbindTexture:function(){const E=ce[le];E!==void 0&&E.type!==void 0&&(r.bindTexture(E.type,null),E.type=void 0,E.texture=void 0)},compressedTexImage2D:function(){try{r.compressedTexImage2D.apply(r,arguments)}catch(E){console.error("THREE.WebGLState:",E)}},compressedTexImage3D:function(){try{r.compressedTexImage3D.apply(r,arguments)}catch(E){console.error("THREE.WebGLState:",E)}},texImage2D:function(){try{r.texImage2D.apply(r,arguments)}catch(E){console.error("THREE.WebGLState:",E)}},texImage3D:function(){try{r.texImage3D.apply(r,arguments)}catch(E){console.error("THREE.WebGLState:",E)}},updateUBOMapping:function(E,X){let q=l.get(X);q===void 0&&(q=new WeakMap,l.set(X,q));let ae=q.get(E);ae===void 0&&(ae=r.getUniformBlockIndex(X,E.name),q.set(E,ae))},uniformBlockBinding:function(E,X){const q=l.get(X).get(E);o.get(X)!==q&&(r.uniformBlockBinding(X,q,E.__bindingPointIndex),o.set(X,q))},texStorage2D:function(){try{r.texStorage2D.apply(r,arguments)}catch(E){console.error("THREE.WebGLState:",E)}},texStorage3D:function(){try{r.texStorage3D.apply(r,arguments)}catch(E){console.error("THREE.WebGLState:",E)}},texSubImage2D:function(){try{r.texSubImage2D.apply(r,arguments)}catch(E){console.error("THREE.WebGLState:",E)}},texSubImage3D:function(){try{r.texSubImage3D.apply(r,arguments)}catch(E){console.error("THREE.WebGLState:",E)}},compressedTexSubImage2D:function(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(E){console.error("THREE.WebGLState:",E)}},compressedTexSubImage3D:function(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(E){console.error("THREE.WebGLState:",E)}},scissor:function(E){Se.equals(E)===!1&&(r.scissor(E.x,E.y,E.z,E.w),Se.copy(E))},viewport:function(E){me.equals(E)===!1&&(r.viewport(E.x,E.y,E.z,E.w),me.copy(E))},reset:function(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),i===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),c={},le=null,ce={},h={},d=new WeakMap,p=[],m=null,f=!1,v=null,g=null,M=null,y=null,x=null,T=null,A=null,C=new be(0,0,0),D=0,V=!1,k=null,K=null,z=null,O=null,se=null,Se.set(0,0,r.canvas.width,r.canvas.height),me.set(0,0,r.canvas.width,r.canvas.height),n.reset(),s.reset(),a.reset()}}}function Yp(r,e,t,i,n,s,a){const o=n.isWebGL2,l=n.maxTextures,c=n.maxCubemapSize,h=n.maxTextureSize,d=n.maxSamples,p=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,m=typeof navigator<"u"&&/OculusBrowser/g.test(navigator.userAgent),f=new WeakMap;let v;const g=new WeakMap;let M=!1;try{M=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(P,L){return M?new OffscreenCanvas(P,L):Ri("canvas")}function x(P,L,N,G){let U=1;if((P.width>G||P.height>G)&&(U=G/Math.max(P.width,P.height)),U<1||L===!0){if(typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&P instanceof ImageBitmap){const W=L?Fr:Math.floor,H=W(U*P.width),E=W(U*P.height);v===void 0&&(v=y(H,E));const X=N?y(H,E):v;return X.width=H,X.height=E,X.getContext("2d").drawImage(P,0,0,H,E),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+P.width+"x"+P.height+") to ("+H+"x"+E+")."),X}return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+P.width+"x"+P.height+")."),P}return P}function T(P){return Ns(P.width)&&Ns(P.height)}function A(P,L){return P.generateMipmaps&&L&&P.minFilter!==1003&&P.minFilter!==1006}function C(P){r.generateMipmap(P)}function D(P,L,N,G,U=!1){if(o===!1)return L;if(P!==null){if(r[P]!==void 0)return r[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let W=L;if(L===r.RED&&(N===r.FLOAT&&(W=r.R32F),N===r.HALF_FLOAT&&(W=r.R16F),N===r.UNSIGNED_BYTE&&(W=r.R8)),L===r.RED_INTEGER&&(N===r.UNSIGNED_BYTE&&(W=r.R8UI),N===r.UNSIGNED_SHORT&&(W=r.R16UI),N===r.UNSIGNED_INT&&(W=r.R32UI),N===r.BYTE&&(W=r.R8I),N===r.SHORT&&(W=r.R16I),N===r.INT&&(W=r.R32I)),L===r.RG&&(N===r.FLOAT&&(W=r.RG32F),N===r.HALF_FLOAT&&(W=r.RG16F),N===r.UNSIGNED_BYTE&&(W=r.RG8)),L===r.RGBA){const H=U?Gt:Qe.getTransfer(G);N===r.FLOAT&&(W=r.RGBA32F),N===r.HALF_FLOAT&&(W=r.RGBA16F),N===r.UNSIGNED_BYTE&&(W=H===$e?r.SRGB8_ALPHA8:r.RGBA8),N===r.UNSIGNED_SHORT_4_4_4_4&&(W=r.RGBA4),N===r.UNSIGNED_SHORT_5_5_5_1&&(W=r.RGB5_A1)}return W!==r.R16F&&W!==r.R32F&&W!==r.RG16F&&W!==r.RG32F&&W!==r.RGBA16F&&W!==r.RGBA32F||e.get("EXT_color_buffer_float"),W}function V(P,L,N){return A(P,N)===!0||P.isFramebufferTexture&&P.minFilter!==1003&&P.minFilter!==1006?Math.log2(Math.max(L.width,L.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?L.mipmaps.length:1}function k(P){return P===1003||P===1004||P===1005?r.NEAREST:r.LINEAR}function K(P){const L=P.target;L.removeEventListener("dispose",K),function(N){const G=i.get(N);if(G.__webglInit===void 0)return;const U=N.source,W=g.get(U);if(W){const H=W[G.__cacheKey];H.usedTimes--,H.usedTimes===0&&O(N),Object.keys(W).length===0&&g.delete(U)}i.remove(N)}(L),L.isVideoTexture&&f.delete(L)}function z(P){const L=P.target;L.removeEventListener("dispose",z),function(N){const G=N.texture,U=i.get(N),W=i.get(G);if(W.__webglTexture!==void 0&&(r.deleteTexture(W.__webglTexture),a.memory.textures--),N.depthTexture&&N.depthTexture.dispose(),N.isWebGLCubeRenderTarget)for(let H=0;H<6;H++){if(Array.isArray(U.__webglFramebuffer[H]))for(let E=0;E<U.__webglFramebuffer[H].length;E++)r.deleteFramebuffer(U.__webglFramebuffer[H][E]);else r.deleteFramebuffer(U.__webglFramebuffer[H]);U.__webglDepthbuffer&&r.deleteRenderbuffer(U.__webglDepthbuffer[H])}else{if(Array.isArray(U.__webglFramebuffer))for(let H=0;H<U.__webglFramebuffer.length;H++)r.deleteFramebuffer(U.__webglFramebuffer[H]);else r.deleteFramebuffer(U.__webglFramebuffer);if(U.__webglDepthbuffer&&r.deleteRenderbuffer(U.__webglDepthbuffer),U.__webglMultisampledFramebuffer&&r.deleteFramebuffer(U.__webglMultisampledFramebuffer),U.__webglColorRenderbuffer)for(let H=0;H<U.__webglColorRenderbuffer.length;H++)U.__webglColorRenderbuffer[H]&&r.deleteRenderbuffer(U.__webglColorRenderbuffer[H]);U.__webglDepthRenderbuffer&&r.deleteRenderbuffer(U.__webglDepthRenderbuffer)}if(N.isWebGLMultipleRenderTargets)for(let H=0,E=G.length;H<E;H++){const X=i.get(G[H]);X.__webglTexture&&(r.deleteTexture(X.__webglTexture),a.memory.textures--),i.remove(G[H])}i.remove(G),i.remove(N)}(L)}function O(P){const L=i.get(P);r.deleteTexture(L.__webglTexture);const N=P.source;delete g.get(N)[L.__cacheKey],a.memory.textures--}let se=0;function oe(P,L){const N=i.get(P);if(P.isVideoTexture&&function(G){const U=a.render.frame;f.get(G)!==U&&(f.set(G,U),G.update())}(P),P.isRenderTargetTexture===!1&&P.version>0&&N.__version!==P.version){const G=P.image;if(G===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(G.complete!==!1)return void Y(N,P,L);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}t.bindTexture(r.TEXTURE_2D,N.__webglTexture,r.TEXTURE0+L)}const _e={1e3:r.REPEAT,1001:r.CLAMP_TO_EDGE,1002:r.MIRRORED_REPEAT},ve={1003:r.NEAREST,1004:r.NEAREST_MIPMAP_NEAREST,1005:r.NEAREST_MIPMAP_LINEAR,1006:r.LINEAR,1007:r.LINEAR_MIPMAP_NEAREST,1008:r.LINEAR_MIPMAP_LINEAR},ee={512:r.NEVER,519:r.ALWAYS,513:r.LESS,515:r.LEQUAL,514:r.EQUAL,518:r.GEQUAL,516:r.GREATER,517:r.NOTEQUAL};function le(P,L,N){if(N?(r.texParameteri(P,r.TEXTURE_WRAP_S,_e[L.wrapS]),r.texParameteri(P,r.TEXTURE_WRAP_T,_e[L.wrapT]),P!==r.TEXTURE_3D&&P!==r.TEXTURE_2D_ARRAY||r.texParameteri(P,r.TEXTURE_WRAP_R,_e[L.wrapR]),r.texParameteri(P,r.TEXTURE_MAG_FILTER,ve[L.magFilter]),r.texParameteri(P,r.TEXTURE_MIN_FILTER,ve[L.minFilter])):(r.texParameteri(P,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(P,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),P!==r.TEXTURE_3D&&P!==r.TEXTURE_2D_ARRAY||r.texParameteri(P,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),L.wrapS===1001&&L.wrapT===1001||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(P,r.TEXTURE_MAG_FILTER,k(L.magFilter)),r.texParameteri(P,r.TEXTURE_MIN_FILTER,k(L.minFilter)),L.minFilter!==1003&&L.minFilter!==1006&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),L.compareFunction&&(r.texParameteri(P,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(P,r.TEXTURE_COMPARE_FUNC,ee[L.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const G=e.get("EXT_texture_filter_anisotropic");if(L.magFilter===1003||L.minFilter!==1005&&L.minFilter!==1008||L.type===1015&&e.has("OES_texture_float_linear")===!1||o===!1&&L.type===1016&&e.has("OES_texture_half_float_linear")===!1)return;(L.anisotropy>1||i.get(L).__currentAnisotropy)&&(r.texParameterf(P,G.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(L.anisotropy,n.getMaxAnisotropy())),i.get(L).__currentAnisotropy=L.anisotropy)}}function ce(P,L){let N=!1;P.__webglInit===void 0&&(P.__webglInit=!0,L.addEventListener("dispose",K));const G=L.source;let U=g.get(G);U===void 0&&(U={},g.set(G,U));const W=function(H){const E=[];return E.push(H.wrapS),E.push(H.wrapT),E.push(H.wrapR||0),E.push(H.magFilter),E.push(H.minFilter),E.push(H.anisotropy),E.push(H.internalFormat),E.push(H.format),E.push(H.type),E.push(H.generateMipmaps),E.push(H.premultiplyAlpha),E.push(H.flipY),E.push(H.unpackAlignment),E.push(H.colorSpace),E.join()}(L);if(W!==P.__cacheKey){U[W]===void 0&&(U[W]={texture:r.createTexture(),usedTimes:0},a.memory.textures++,N=!0),U[W].usedTimes++;const H=U[P.__cacheKey];H!==void 0&&(U[P.__cacheKey].usedTimes--,H.usedTimes===0&&O(L)),P.__cacheKey=W,P.__webglTexture=U[W].texture}return N}function Y(P,L,N){let G=r.TEXTURE_2D;(L.isDataArrayTexture||L.isCompressedArrayTexture)&&(G=r.TEXTURE_2D_ARRAY),L.isData3DTexture&&(G=r.TEXTURE_3D);const U=ce(P,L),W=L.source;t.bindTexture(G,P.__webglTexture,r.TEXTURE0+N);const H=i.get(W);if(W.version!==H.__version||U===!0){t.activeTexture(r.TEXTURE0+N);const E=Qe.getPrimaries(Qe.workingColorSpace),X=L.colorSpace===ui?null:Qe.getPrimaries(L.colorSpace),q=L.colorSpace===ui||E===X?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,L.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,L.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,L.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,q);const ae=function(Le){return!o&&(Le.wrapS!==1001||Le.wrapT!==1001||Le.minFilter!==1003&&Le.minFilter!==1006)}(L)&&T(L.image)===!1;let J=x(L.image,ae,!1,h);J=Be(L,J);const Ne=T(J)||o,Te=s.convert(L.format,L.colorSpace);let de,De=s.convert(L.type),ye=D(L.internalFormat,Te,De,L.colorSpace,L.isVideoTexture);le(G,L,Ne);const Pe=L.mipmaps,ke=o&&L.isVideoTexture!==!0&&ye!==36196,yt=H.__version===void 0||U===!0,ut=V(L,J,Ne);if(L.isDepthTexture)ye=r.DEPTH_COMPONENT,o?ye=L.type===1015?r.DEPTH_COMPONENT32F:L.type===1014?r.DEPTH_COMPONENT24:L.type===1020?r.DEPTH24_STENCIL8:r.DEPTH_COMPONENT16:L.type===1015&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),L.format===1026&&ye===r.DEPTH_COMPONENT&&L.type!==1012&&L.type!==1014&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),L.type=1014,De=s.convert(L.type)),L.format===1027&&ye===r.DEPTH_COMPONENT&&(ye=r.DEPTH_STENCIL,L.type!==1020&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),L.type=1020,De=s.convert(L.type))),yt&&(ke?t.texStorage2D(r.TEXTURE_2D,1,ye,J.width,J.height):t.texImage2D(r.TEXTURE_2D,0,ye,J.width,J.height,0,Te,De,null));else if(L.isDataTexture)if(Pe.length>0&&Ne){ke&&yt&&t.texStorage2D(r.TEXTURE_2D,ut,ye,Pe[0].width,Pe[0].height);for(let Le=0,ot=Pe.length;Le<ot;Le++)de=Pe[Le],ke?t.texSubImage2D(r.TEXTURE_2D,Le,0,0,de.width,de.height,Te,De,de.data):t.texImage2D(r.TEXTURE_2D,Le,ye,de.width,de.height,0,Te,De,de.data);L.generateMipmaps=!1}else ke?(yt&&t.texStorage2D(r.TEXTURE_2D,ut,ye,J.width,J.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,J.width,J.height,Te,De,J.data)):t.texImage2D(r.TEXTURE_2D,0,ye,J.width,J.height,0,Te,De,J.data);else if(L.isCompressedTexture)if(L.isCompressedArrayTexture){ke&&yt&&t.texStorage3D(r.TEXTURE_2D_ARRAY,ut,ye,Pe[0].width,Pe[0].height,J.depth);for(let Le=0,ot=Pe.length;Le<ot;Le++)de=Pe[Le],L.format!==1023?Te!==null?ke?t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,Le,0,0,0,de.width,de.height,J.depth,Te,de.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,Le,ye,de.width,de.height,J.depth,0,de.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ke?t.texSubImage3D(r.TEXTURE_2D_ARRAY,Le,0,0,0,de.width,de.height,J.depth,Te,De,de.data):t.texImage3D(r.TEXTURE_2D_ARRAY,Le,ye,de.width,de.height,J.depth,0,Te,De,de.data)}else{ke&&yt&&t.texStorage2D(r.TEXTURE_2D,ut,ye,Pe[0].width,Pe[0].height);for(let Le=0,ot=Pe.length;Le<ot;Le++)de=Pe[Le],L.format!==1023?Te!==null?ke?t.compressedTexSubImage2D(r.TEXTURE_2D,Le,0,0,de.width,de.height,Te,de.data):t.compressedTexImage2D(r.TEXTURE_2D,Le,ye,de.width,de.height,0,de.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ke?t.texSubImage2D(r.TEXTURE_2D,Le,0,0,de.width,de.height,Te,De,de.data):t.texImage2D(r.TEXTURE_2D,Le,ye,de.width,de.height,0,Te,De,de.data)}else if(L.isDataArrayTexture)ke?(yt&&t.texStorage3D(r.TEXTURE_2D_ARRAY,ut,ye,J.width,J.height,J.depth),t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,J.width,J.height,J.depth,Te,De,J.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,ye,J.width,J.height,J.depth,0,Te,De,J.data);else if(L.isData3DTexture)ke?(yt&&t.texStorage3D(r.TEXTURE_3D,ut,ye,J.width,J.height,J.depth),t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,J.width,J.height,J.depth,Te,De,J.data)):t.texImage3D(r.TEXTURE_3D,0,ye,J.width,J.height,J.depth,0,Te,De,J.data);else if(L.isFramebufferTexture){if(yt)if(ke)t.texStorage2D(r.TEXTURE_2D,ut,ye,J.width,J.height);else{let Le=J.width,ot=J.height;for(let Zi=0;Zi<ut;Zi++)t.texImage2D(r.TEXTURE_2D,Zi,ye,Le,ot,0,Te,De,null),Le>>=1,ot>>=1}}else if(Pe.length>0&&Ne){ke&&yt&&t.texStorage2D(r.TEXTURE_2D,ut,ye,Pe[0].width,Pe[0].height);for(let Le=0,ot=Pe.length;Le<ot;Le++)de=Pe[Le],ke?t.texSubImage2D(r.TEXTURE_2D,Le,0,0,Te,De,de):t.texImage2D(r.TEXTURE_2D,Le,ye,Te,De,de);L.generateMipmaps=!1}else ke?(yt&&t.texStorage2D(r.TEXTURE_2D,ut,ye,J.width,J.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,Te,De,J)):t.texImage2D(r.TEXTURE_2D,0,ye,Te,De,J);A(L,Ne)&&C(G),H.__version=W.version,L.onUpdate&&L.onUpdate(L)}P.__version=L.version}function ie(P,L,N,G,U,W){const H=s.convert(N.format,N.colorSpace),E=s.convert(N.type),X=D(N.internalFormat,H,E,N.colorSpace);if(!i.get(L).__hasExternalTextures){const q=Math.max(1,L.width>>W),ae=Math.max(1,L.height>>W);U===r.TEXTURE_3D||U===r.TEXTURE_2D_ARRAY?t.texImage3D(U,W,X,q,ae,L.depth,0,H,E,null):t.texImage2D(U,W,X,q,ae,0,H,E,null)}t.bindFramebuffer(r.FRAMEBUFFER,P),Ce(L)?p.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,G,U,i.get(N).__webglTexture,0,Ae(L)):(U===r.TEXTURE_2D||U>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&U<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,G,U,i.get(N).__webglTexture,W),t.bindFramebuffer(r.FRAMEBUFFER,null)}function Se(P,L,N){if(r.bindRenderbuffer(r.RENDERBUFFER,P),L.depthBuffer&&!L.stencilBuffer){let G=o===!0?r.DEPTH_COMPONENT24:r.DEPTH_COMPONENT16;if(N||Ce(L)){const U=L.depthTexture;U&&U.isDepthTexture&&(U.type===1015?G=r.DEPTH_COMPONENT32F:U.type===1014&&(G=r.DEPTH_COMPONENT24));const W=Ae(L);Ce(L)?p.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,W,G,L.width,L.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,W,G,L.width,L.height)}else r.renderbufferStorage(r.RENDERBUFFER,G,L.width,L.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,P)}else if(L.depthBuffer&&L.stencilBuffer){const G=Ae(L);N&&Ce(L)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,G,r.DEPTH24_STENCIL8,L.width,L.height):Ce(L)?p.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,G,r.DEPTH24_STENCIL8,L.width,L.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,L.width,L.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,P)}else{const G=L.isWebGLMultipleRenderTargets===!0?L.texture:[L.texture];for(let U=0;U<G.length;U++){const W=G[U],H=s.convert(W.format,W.colorSpace),E=s.convert(W.type),X=D(W.internalFormat,H,E,W.colorSpace),q=Ae(L);N&&Ce(L)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,q,X,L.width,L.height):Ce(L)?p.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,q,X,L.width,L.height):r.renderbufferStorage(r.RENDERBUFFER,X,L.width,L.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function me(P){const L=i.get(P),N=P.isWebGLCubeRenderTarget===!0;if(P.depthTexture&&!L.__autoAllocateDepthBuffer){if(N)throw new Error("target.depthTexture not supported in Cube render targets");(function(G,U){if(U&&U.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,G),!U.depthTexture||!U.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(U.depthTexture).__webglTexture&&U.depthTexture.image.width===U.width&&U.depthTexture.image.height===U.height||(U.depthTexture.image.width=U.width,U.depthTexture.image.height=U.height,U.depthTexture.needsUpdate=!0),oe(U.depthTexture,0);const W=i.get(U.depthTexture).__webglTexture,H=Ae(U);if(U.depthTexture.format===1026)Ce(U)?p.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,W,0,H):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,W,0);else{if(U.depthTexture.format!==1027)throw new Error("Unknown depthTexture format");Ce(U)?p.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,W,0,H):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,W,0)}})(L.__webglFramebuffer,P)}else if(N){L.__webglDepthbuffer=[];for(let G=0;G<6;G++)t.bindFramebuffer(r.FRAMEBUFFER,L.__webglFramebuffer[G]),L.__webglDepthbuffer[G]=r.createRenderbuffer(),Se(L.__webglDepthbuffer[G],P,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,L.__webglFramebuffer),L.__webglDepthbuffer=r.createRenderbuffer(),Se(L.__webglDepthbuffer,P,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function Ae(P){return Math.min(d,P.samples)}function Ce(P){const L=i.get(P);return o&&P.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&L.__useRenderToTexture!==!1}function Be(P,L){const N=P.colorSpace,G=P.format,U=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||P.format===1035||N!==Oi&&N!==ui&&(Qe.getTransfer(N)===$e?o===!1?e.has("EXT_sRGB")===!0&&G===1023?(P.format=1035,P.minFilter=1006,P.generateMipmaps=!1):L=Fs.sRGBToLinear(L):G===1023&&U===1009||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",N)),L}this.allocateTextureUnit=function(){const P=se;return P>=l&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+l),se+=1,P},this.resetTextureUnits=function(){se=0},this.setTexture2D=oe,this.setTexture2DArray=function(P,L){const N=i.get(P);P.version>0&&N.__version!==P.version?Y(N,P,L):t.bindTexture(r.TEXTURE_2D_ARRAY,N.__webglTexture,r.TEXTURE0+L)},this.setTexture3D=function(P,L){const N=i.get(P);P.version>0&&N.__version!==P.version?Y(N,P,L):t.bindTexture(r.TEXTURE_3D,N.__webglTexture,r.TEXTURE0+L)},this.setTextureCube=function(P,L){const N=i.get(P);P.version>0&&N.__version!==P.version?function(G,U,W){if(U.image.length!==6)return;const H=ce(G,U),E=U.source;t.bindTexture(r.TEXTURE_CUBE_MAP,G.__webglTexture,r.TEXTURE0+W);const X=i.get(E);if(E.version!==X.__version||H===!0){t.activeTexture(r.TEXTURE0+W);const q=Qe.getPrimaries(Qe.workingColorSpace),ae=U.colorSpace===ui?null:Qe.getPrimaries(U.colorSpace),J=U.colorSpace===ui||q===ae?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,U.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,U.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,U.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,J);const Ne=U.isCompressedTexture||U.image[0].isCompressedTexture,Te=U.image[0]&&U.image[0].isDataTexture,de=[];for(let Ve=0;Ve<6;Ve++)de[Ve]=Ne||Te?Te?U.image[Ve].image:U.image[Ve]:x(U.image[Ve],!1,!0,c),de[Ve]=Be(U,de[Ve]);const De=de[0],ye=T(De)||o,Pe=s.convert(U.format,U.colorSpace),ke=s.convert(U.type),yt=D(U.internalFormat,Pe,ke,U.colorSpace),ut=o&&U.isVideoTexture!==!0,Le=X.__version===void 0||H===!0;let ot,Zi=V(U,De,ye);if(le(r.TEXTURE_CUBE_MAP,U,ye),Ne){ut&&Le&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Zi,yt,De.width,De.height);for(let Ve=0;Ve<6;Ve++){ot=de[Ve].mipmaps;for(let Et=0;Et<ot.length;Et++){const rt=ot[Et];U.format!==1023?Pe!==null?ut?t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,Et,0,0,rt.width,rt.height,Pe,rt.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,Et,yt,rt.width,rt.height,0,rt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):ut?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,Et,0,0,rt.width,rt.height,Pe,ke,rt.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,Et,yt,rt.width,rt.height,0,Pe,ke,rt.data)}}}else{ot=U.mipmaps,ut&&Le&&(ot.length>0&&Zi++,t.texStorage2D(r.TEXTURE_CUBE_MAP,Zi,yt,de[0].width,de[0].height));for(let Ve=0;Ve<6;Ve++)if(Te){ut?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,0,0,0,de[Ve].width,de[Ve].height,Pe,ke,de[Ve].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,0,yt,de[Ve].width,de[Ve].height,0,Pe,ke,de[Ve].data);for(let Et=0;Et<ot.length;Et++){const rt=ot[Et].image[Ve].image;ut?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,Et+1,0,0,rt.width,rt.height,Pe,ke,rt.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,Et+1,yt,rt.width,rt.height,0,Pe,ke,rt.data)}}else{ut?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,0,0,0,Pe,ke,de[Ve]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,0,yt,Pe,ke,de[Ve]);for(let Et=0;Et<ot.length;Et++){const rt=ot[Et];ut?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,Et+1,0,0,Pe,ke,rt.image[Ve]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,Et+1,yt,Pe,ke,rt.image[Ve])}}}A(U,ye)&&C(r.TEXTURE_CUBE_MAP),X.__version=E.version,U.onUpdate&&U.onUpdate(U)}G.__version=U.version}(N,P,L):t.bindTexture(r.TEXTURE_CUBE_MAP,N.__webglTexture,r.TEXTURE0+L)},this.rebindTextures=function(P,L,N){const G=i.get(P);L!==void 0&&ie(G.__webglFramebuffer,P,P.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),N!==void 0&&me(P)},this.setupRenderTarget=function(P){const L=P.texture,N=i.get(P),G=i.get(L);P.addEventListener("dispose",z),P.isWebGLMultipleRenderTargets!==!0&&(G.__webglTexture===void 0&&(G.__webglTexture=r.createTexture()),G.__version=L.version,a.memory.textures++);const U=P.isWebGLCubeRenderTarget===!0,W=P.isWebGLMultipleRenderTargets===!0,H=T(P)||o;if(U){N.__webglFramebuffer=[];for(let E=0;E<6;E++)if(o&&L.mipmaps&&L.mipmaps.length>0){N.__webglFramebuffer[E]=[];for(let X=0;X<L.mipmaps.length;X++)N.__webglFramebuffer[E][X]=r.createFramebuffer()}else N.__webglFramebuffer[E]=r.createFramebuffer()}else{if(o&&L.mipmaps&&L.mipmaps.length>0){N.__webglFramebuffer=[];for(let E=0;E<L.mipmaps.length;E++)N.__webglFramebuffer[E]=r.createFramebuffer()}else N.__webglFramebuffer=r.createFramebuffer();if(W)if(n.drawBuffers){const E=P.texture;for(let X=0,q=E.length;X<q;X++){const ae=i.get(E[X]);ae.__webglTexture===void 0&&(ae.__webglTexture=r.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&P.samples>0&&Ce(P)===!1){const E=W?L:[L];N.__webglMultisampledFramebuffer=r.createFramebuffer(),N.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,N.__webglMultisampledFramebuffer);for(let X=0;X<E.length;X++){const q=E[X];N.__webglColorRenderbuffer[X]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,N.__webglColorRenderbuffer[X]);const ae=s.convert(q.format,q.colorSpace),J=s.convert(q.type),Ne=D(q.internalFormat,ae,J,q.colorSpace,P.isXRRenderTarget===!0),Te=Ae(P);r.renderbufferStorageMultisample(r.RENDERBUFFER,Te,Ne,P.width,P.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+X,r.RENDERBUFFER,N.__webglColorRenderbuffer[X])}r.bindRenderbuffer(r.RENDERBUFFER,null),P.depthBuffer&&(N.__webglDepthRenderbuffer=r.createRenderbuffer(),Se(N.__webglDepthRenderbuffer,P,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(U){t.bindTexture(r.TEXTURE_CUBE_MAP,G.__webglTexture),le(r.TEXTURE_CUBE_MAP,L,H);for(let E=0;E<6;E++)if(o&&L.mipmaps&&L.mipmaps.length>0)for(let X=0;X<L.mipmaps.length;X++)ie(N.__webglFramebuffer[E][X],P,L,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+E,X);else ie(N.__webglFramebuffer[E],P,L,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+E,0);A(L,H)&&C(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(W){const E=P.texture;for(let X=0,q=E.length;X<q;X++){const ae=E[X],J=i.get(ae);t.bindTexture(r.TEXTURE_2D,J.__webglTexture),le(r.TEXTURE_2D,ae,H),ie(N.__webglFramebuffer,P,ae,r.COLOR_ATTACHMENT0+X,r.TEXTURE_2D,0),A(ae,H)&&C(r.TEXTURE_2D)}t.unbindTexture()}else{let E=r.TEXTURE_2D;if((P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(o?E=P.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(E,G.__webglTexture),le(E,L,H),o&&L.mipmaps&&L.mipmaps.length>0)for(let X=0;X<L.mipmaps.length;X++)ie(N.__webglFramebuffer[X],P,L,r.COLOR_ATTACHMENT0,E,X);else ie(N.__webglFramebuffer,P,L,r.COLOR_ATTACHMENT0,E,0);A(L,H)&&C(E),t.unbindTexture()}P.depthBuffer&&me(P)},this.updateRenderTargetMipmap=function(P){const L=T(P)||o,N=P.isWebGLMultipleRenderTargets===!0?P.texture:[P.texture];for(let G=0,U=N.length;G<U;G++){const W=N[G];if(A(W,L)){const H=P.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,E=i.get(W).__webglTexture;t.bindTexture(H,E),C(H),t.unbindTexture()}}},this.updateMultisampleRenderTarget=function(P){if(o&&P.samples>0&&Ce(P)===!1){const L=P.isWebGLMultipleRenderTargets?P.texture:[P.texture],N=P.width,G=P.height;let U=r.COLOR_BUFFER_BIT;const W=[],H=P.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,E=i.get(P),X=P.isWebGLMultipleRenderTargets===!0;if(X)for(let q=0;q<L.length;q++)t.bindFramebuffer(r.FRAMEBUFFER,E.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+q,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,E.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+q,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,E.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,E.__webglFramebuffer);for(let q=0;q<L.length;q++){W.push(r.COLOR_ATTACHMENT0+q),P.depthBuffer&&W.push(H);const ae=E.__ignoreDepthValues!==void 0&&E.__ignoreDepthValues;if(ae===!1&&(P.depthBuffer&&(U|=r.DEPTH_BUFFER_BIT),P.stencilBuffer&&(U|=r.STENCIL_BUFFER_BIT)),X&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,E.__webglColorRenderbuffer[q]),ae===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[H]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[H])),X){const J=i.get(L[q]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,J,0)}r.blitFramebuffer(0,0,N,G,0,0,N,G,U,r.NEAREST),m&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,W)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),X)for(let q=0;q<L.length;q++){t.bindFramebuffer(r.FRAMEBUFFER,E.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+q,r.RENDERBUFFER,E.__webglColorRenderbuffer[q]);const ae=i.get(L[q]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,E.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+q,r.TEXTURE_2D,ae,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,E.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=me,this.setupFrameBufferTexture=ie,this.useMultisampledRTT=Ce}function Tu(r,e,t){const i=t.isWebGL2;return{convert:function(n,s=""){let a;const o=Qe.getTransfer(s);if(n===1009)return r.UNSIGNED_BYTE;if(n===1017)return r.UNSIGNED_SHORT_4_4_4_4;if(n===1018)return r.UNSIGNED_SHORT_5_5_5_1;if(n===1010)return r.BYTE;if(n===1011)return r.SHORT;if(n===1012)return r.UNSIGNED_SHORT;if(n===1013)return r.INT;if(n===1014)return r.UNSIGNED_INT;if(n===1015)return r.FLOAT;if(n===1016)return i?r.HALF_FLOAT:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(n===1021)return r.ALPHA;if(n===1023)return r.RGBA;if(n===1024)return r.LUMINANCE;if(n===1025)return r.LUMINANCE_ALPHA;if(n===1026)return r.DEPTH_COMPONENT;if(n===1027)return r.DEPTH_STENCIL;if(n===1035)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(n===1028)return r.RED;if(n===1029)return r.RED_INTEGER;if(n===1030)return r.RG;if(n===1031)return r.RG_INTEGER;if(n===1033)return r.RGBA_INTEGER;if(n===33776||n===33777||n===33778||n===33779)if(o===$e){if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a===null)return null;if(n===33776)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===33777)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===33778)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===33779)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(a=e.get("WEBGL_compressed_texture_s3tc"),a===null)return null;if(n===33776)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===33777)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===33778)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===33779)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(n===35840||n===35841||n===35842||n===35843){if(a=e.get("WEBGL_compressed_texture_pvrtc"),a===null)return null;if(n===35840)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===35841)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===35842)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===35843)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(n===36196)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(n===37492||n===37496){if(a=e.get("WEBGL_compressed_texture_etc"),a===null)return null;if(n===37492)return o===$e?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(n===37496)return o===$e?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}if(n===37808||n===37809||n===37810||n===37811||n===37812||n===37813||n===37814||n===37815||n===37816||n===37817||n===37818||n===37819||n===37820||n===37821){if(a=e.get("WEBGL_compressed_texture_astc"),a===null)return null;if(n===37808)return o===$e?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===37809)return o===$e?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===37810)return o===$e?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===37811)return o===$e?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===37812)return o===$e?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===37813)return o===$e?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===37814)return o===$e?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===37815)return o===$e?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===37816)return o===$e?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===37817)return o===$e?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===37818)return o===$e?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===37819)return o===$e?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===37820)return o===$e?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===37821)return o===$e?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===36492||n===36494||n===36495){if(a=e.get("EXT_texture_compression_bptc"),a===null)return null;if(n===36492)return o===$e?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===36494)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===36495)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(n===36283||n===36284||n===36285||n===36286){if(a=e.get("EXT_texture_compression_rgtc"),a===null)return null;if(n===36492)return a.COMPRESSED_RED_RGTC1_EXT;if(n===36284)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===36285)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===36286)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return n===1020?i?r.UNSIGNED_INT_24_8:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):r[n]!==void 0?r[n]:null}}}class Au extends Tt{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class da extends Xe{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Zp={type:"move"};class ih{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new da,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new da,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new R,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new R),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new da,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new R,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new R),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let n=null,s=null,a=null;const o=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){a=!0;for(const v of e.hand.values()){const g=t.getJointPose(v,i),M=this._getHandJoint(c,v);g!==null&&(M.matrix.fromArray(g.transform.matrix),M.matrix.decompose(M.position,M.rotation,M.scale),M.matrixWorldNeedsUpdate=!0,M.jointRadius=g.radius),M.visible=g!==null}const h=c.joints["index-finger-tip"],d=c.joints["thumb-tip"],p=h.position.distanceTo(d.position),m=.02,f=.005;c.inputState.pinching&&p>m+f?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&p<=m-f&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(n=t.getPose(e.targetRaySpace,i),n===null&&s!==null&&(n=s),n!==null&&(o.matrix.fromArray(n.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,n.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(n.linearVelocity)):o.hasLinearVelocity=!1,n.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(n.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(Zp)))}return o!==null&&(o.visible=n!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new da;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}class Jp extends Fi{constructor(e,t){super();const i=this;let n=null,s=1,a=null,o="local-floor",l=1,c=null,h=null,d=null,p=null,m=null,f=null;const v=t.getContextAttributes();let g=null,M=null;const y=[],x=[],T=new te;let A=null;const C=new Tt;C.layers.enable(1),C.viewport=new dt;const D=new Tt;D.layers.enable(2),D.viewport=new dt;const V=[C,D],k=new Au;k.layers.enable(1),k.layers.enable(2);let K=null,z=null;function O(Y){const ie=x.indexOf(Y.inputSource);if(ie===-1)return;const Se=y[ie];Se!==void 0&&(Se.update(Y.inputSource,Y.frame,c||a),Se.dispatchEvent({type:Y.type,data:Y.inputSource}))}function se(){n.removeEventListener("select",O),n.removeEventListener("selectstart",O),n.removeEventListener("selectend",O),n.removeEventListener("squeeze",O),n.removeEventListener("squeezestart",O),n.removeEventListener("squeezeend",O),n.removeEventListener("end",se),n.removeEventListener("inputsourceschange",oe);for(let Y=0;Y<y.length;Y++){const ie=x[Y];ie!==null&&(x[Y]=null,y[Y].disconnect(ie))}K=null,z=null,e.setRenderTarget(g),m=null,p=null,d=null,n=null,M=null,ce.stop(),i.isPresenting=!1,e.setPixelRatio(A),e.setSize(T.width,T.height,!1),i.dispatchEvent({type:"sessionend"})}function oe(Y){for(let ie=0;ie<Y.removed.length;ie++){const Se=Y.removed[ie],me=x.indexOf(Se);me>=0&&(x[me]=null,y[me].disconnect(Se))}for(let ie=0;ie<Y.added.length;ie++){const Se=Y.added[ie];let me=x.indexOf(Se);if(me===-1){for(let Ce=0;Ce<y.length;Ce++){if(Ce>=x.length){x.push(Se),me=Ce;break}if(x[Ce]===null){x[Ce]=Se,me=Ce;break}}if(me===-1)break}const Ae=y[me];Ae&&Ae.connect(Se)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(Y){let ie=y[Y];return ie===void 0&&(ie=new ih,y[Y]=ie),ie.getTargetRaySpace()},this.getControllerGrip=function(Y){let ie=y[Y];return ie===void 0&&(ie=new ih,y[Y]=ie),ie.getGripSpace()},this.getHand=function(Y){let ie=y[Y];return ie===void 0&&(ie=new ih,y[Y]=ie),ie.getHandSpace()},this.setFramebufferScaleFactor=function(Y){s=Y,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(Y){o=Y,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||a},this.setReferenceSpace=function(Y){c=Y},this.getBaseLayer=function(){return p!==null?p:m},this.getBinding=function(){return d},this.getFrame=function(){return f},this.getSession=function(){return n},this.setSession=async function(Y){if(n=Y,n!==null){if(g=e.getRenderTarget(),n.addEventListener("select",O),n.addEventListener("selectstart",O),n.addEventListener("selectend",O),n.addEventListener("squeeze",O),n.addEventListener("squeezestart",O),n.addEventListener("squeezeend",O),n.addEventListener("end",se),n.addEventListener("inputsourceschange",oe),v.xrCompatible!==!0&&await t.makeXRCompatible(),A=e.getPixelRatio(),e.getSize(T),n.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const ie={antialias:n.renderState.layers!==void 0||v.antialias,alpha:!0,depth:v.depth,stencil:v.stencil,framebufferScaleFactor:s};m=new XRWebGLLayer(n,t,ie),n.updateRenderState({baseLayer:m}),e.setPixelRatio(1),e.setSize(m.framebufferWidth,m.framebufferHeight,!1),M=new Li(m.framebufferWidth,m.framebufferHeight,{format:1023,type:1009,colorSpace:e.outputColorSpace,stencilBuffer:v.stencil})}else{let ie=null,Se=null,me=null;v.depth&&(me=v.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,ie=v.stencil?1027:1026,Se=v.stencil?1020:1014);const Ae={colorFormat:t.RGBA8,depthFormat:me,scaleFactor:s};d=new XRWebGLBinding(n,t),p=d.createProjectionLayer(Ae),n.updateRenderState({layers:[p]}),e.setPixelRatio(1),e.setSize(p.textureWidth,p.textureHeight,!1),M=new Li(p.textureWidth,p.textureHeight,{format:1023,type:1009,depthTexture:new Ja(p.textureWidth,p.textureHeight,Se,void 0,void 0,void 0,void 0,void 0,void 0,ie),stencilBuffer:v.stencil,colorSpace:e.outputColorSpace,samples:v.antialias?4:0}),e.properties.get(M).__ignoreDepthValues=p.ignoreDepthValues}M.isXRRenderTarget=!0,this.setFoveation(l),c=null,a=await n.requestReferenceSpace(o),ce.setContext(n),ce.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(n!==null)return n.environmentBlendMode};const _e=new R,ve=new R;function ee(Y,ie){ie===null?Y.matrixWorld.copy(Y.matrix):Y.matrixWorld.multiplyMatrices(ie.matrixWorld,Y.matrix),Y.matrixWorldInverse.copy(Y.matrixWorld).invert()}this.updateCamera=function(Y){if(n===null)return;k.near=D.near=C.near=Y.near,k.far=D.far=C.far=Y.far,K===k.near&&z===k.far||(n.updateRenderState({depthNear:k.near,depthFar:k.far}),K=k.near,z=k.far);const ie=Y.parent,Se=k.cameras;ee(k,ie);for(let me=0;me<Se.length;me++)ee(Se[me],ie);Se.length===2?function(me,Ae,Ce){_e.setFromMatrixPosition(Ae.matrixWorld),ve.setFromMatrixPosition(Ce.matrixWorld);const Be=_e.distanceTo(ve),P=Ae.projectionMatrix.elements,L=Ce.projectionMatrix.elements,N=P[14]/(P[10]-1),G=P[14]/(P[10]+1),U=(P[9]+1)/P[5],W=(P[9]-1)/P[5],H=(P[8]-1)/P[0],E=(L[8]+1)/L[0],X=N*H,q=N*E,ae=Be/(-H+E),J=ae*-H;Ae.matrixWorld.decompose(me.position,me.quaternion,me.scale),me.translateX(J),me.translateZ(ae),me.matrixWorld.compose(me.position,me.quaternion,me.scale),me.matrixWorldInverse.copy(me.matrixWorld).invert();const Ne=N+ae,Te=G+ae,de=X-J,De=q+(Be-J),ye=U*G/Te*Ne,Pe=W*G/Te*Ne;me.projectionMatrix.makePerspective(de,De,ye,Pe,Ne,Te),me.projectionMatrixInverse.copy(me.projectionMatrix).invert()}(k,C,D):k.projectionMatrix.copy(C.projectionMatrix),function(me,Ae,Ce){Ce===null?me.matrix.copy(Ae.matrixWorld):(me.matrix.copy(Ce.matrixWorld),me.matrix.invert(),me.matrix.multiply(Ae.matrixWorld)),me.matrix.decompose(me.position,me.quaternion,me.scale),me.updateMatrixWorld(!0),me.projectionMatrix.copy(Ae.projectionMatrix),me.projectionMatrixInverse.copy(Ae.projectionMatrixInverse),me.isPerspectiveCamera&&(me.fov=2*zn*Math.atan(1/me.projectionMatrix.elements[5]),me.zoom=1)}(Y,k,ie)},this.getCamera=function(){return k},this.getFoveation=function(){if(p!==null||m!==null)return l},this.setFoveation=function(Y){l=Y,p!==null&&(p.fixedFoveation=Y),m!==null&&m.fixedFoveation!==void 0&&(m.fixedFoveation=Y)};let le=null;const ce=new Qo;ce.setAnimationLoop(function(Y,ie){if(h=ie.getViewerPose(c||a),f=ie,h!==null){const Se=h.views;m!==null&&(e.setRenderTargetFramebuffer(M,m.framebuffer),e.setRenderTarget(M));let me=!1;Se.length!==k.cameras.length&&(k.cameras.length=0,me=!0);for(let Ae=0;Ae<Se.length;Ae++){const Ce=Se[Ae];let Be=null;if(m!==null)Be=m.getViewport(Ce);else{const L=d.getViewSubImage(p,Ce);Be=L.viewport,Ae===0&&(e.setRenderTargetTextures(M,L.colorTexture,p.ignoreDepthValues?void 0:L.depthStencilTexture),e.setRenderTarget(M))}let P=V[Ae];P===void 0&&(P=new Tt,P.layers.enable(Ae),P.viewport=new dt,V[Ae]=P),P.matrix.fromArray(Ce.transform.matrix),P.matrix.decompose(P.position,P.quaternion,P.scale),P.projectionMatrix.fromArray(Ce.projectionMatrix),P.projectionMatrixInverse.copy(P.projectionMatrix).invert(),P.viewport.set(Be.x,Be.y,Be.width,Be.height),Ae===0&&(k.matrix.copy(P.matrix),k.matrix.decompose(k.position,k.quaternion,k.scale)),me===!0&&k.cameras.push(P)}}for(let Se=0;Se<y.length;Se++){const me=x[Se],Ae=y[Se];me!==null&&Ae!==void 0&&Ae.update(me,ie,c||a)}le&&le(Y,ie),ie.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:ie}),f=null}),this.setAnimationLoop=function(Y){le=Y},this.dispose=function(){}}}function $p(r,e){function t(n,s){n.matrixAutoUpdate===!0&&n.updateMatrix(),s.value.copy(n.matrix)}function i(n,s){n.opacity.value=s.opacity,s.color&&n.diffuse.value.copy(s.color),s.emissive&&n.emissive.value.copy(s.emissive).multiplyScalar(s.emissiveIntensity),s.map&&(n.map.value=s.map,t(s.map,n.mapTransform)),s.alphaMap&&(n.alphaMap.value=s.alphaMap,t(s.alphaMap,n.alphaMapTransform)),s.bumpMap&&(n.bumpMap.value=s.bumpMap,t(s.bumpMap,n.bumpMapTransform),n.bumpScale.value=s.bumpScale,s.side===1&&(n.bumpScale.value*=-1)),s.normalMap&&(n.normalMap.value=s.normalMap,t(s.normalMap,n.normalMapTransform),n.normalScale.value.copy(s.normalScale),s.side===1&&n.normalScale.value.negate()),s.displacementMap&&(n.displacementMap.value=s.displacementMap,t(s.displacementMap,n.displacementMapTransform),n.displacementScale.value=s.displacementScale,n.displacementBias.value=s.displacementBias),s.emissiveMap&&(n.emissiveMap.value=s.emissiveMap,t(s.emissiveMap,n.emissiveMapTransform)),s.specularMap&&(n.specularMap.value=s.specularMap,t(s.specularMap,n.specularMapTransform)),s.alphaTest>0&&(n.alphaTest.value=s.alphaTest);const a=e.get(s).envMap;if(a&&(n.envMap.value=a,n.flipEnvMap.value=a.isCubeTexture&&a.isRenderTargetTexture===!1?-1:1,n.reflectivity.value=s.reflectivity,n.ior.value=s.ior,n.refractionRatio.value=s.refractionRatio),s.lightMap){n.lightMap.value=s.lightMap;const o=r._useLegacyLights===!0?Math.PI:1;n.lightMapIntensity.value=s.lightMapIntensity*o,t(s.lightMap,n.lightMapTransform)}s.aoMap&&(n.aoMap.value=s.aoMap,n.aoMapIntensity.value=s.aoMapIntensity,t(s.aoMap,n.aoMapTransform))}return{refreshFogUniforms:function(n,s){s.color.getRGB(n.fogColor.value,ia(r)),s.isFog?(n.fogNear.value=s.near,n.fogFar.value=s.far):s.isFogExp2&&(n.fogDensity.value=s.density)},refreshMaterialUniforms:function(n,s,a,o,l){s.isMeshBasicMaterial||s.isMeshLambertMaterial?i(n,s):s.isMeshToonMaterial?(i(n,s),function(c,h){h.gradientMap&&(c.gradientMap.value=h.gradientMap)}(n,s)):s.isMeshPhongMaterial?(i(n,s),function(c,h){c.specular.value.copy(h.specular),c.shininess.value=Math.max(h.shininess,1e-4)}(n,s)):s.isMeshStandardMaterial?(i(n,s),function(c,h){c.metalness.value=h.metalness,h.metalnessMap&&(c.metalnessMap.value=h.metalnessMap,t(h.metalnessMap,c.metalnessMapTransform)),c.roughness.value=h.roughness,h.roughnessMap&&(c.roughnessMap.value=h.roughnessMap,t(h.roughnessMap,c.roughnessMapTransform)),e.get(h).envMap&&(c.envMapIntensity.value=h.envMapIntensity)}(n,s),s.isMeshPhysicalMaterial&&function(c,h,d){c.ior.value=h.ior,h.sheen>0&&(c.sheenColor.value.copy(h.sheenColor).multiplyScalar(h.sheen),c.sheenRoughness.value=h.sheenRoughness,h.sheenColorMap&&(c.sheenColorMap.value=h.sheenColorMap,t(h.sheenColorMap,c.sheenColorMapTransform)),h.sheenRoughnessMap&&(c.sheenRoughnessMap.value=h.sheenRoughnessMap,t(h.sheenRoughnessMap,c.sheenRoughnessMapTransform))),h.clearcoat>0&&(c.clearcoat.value=h.clearcoat,c.clearcoatRoughness.value=h.clearcoatRoughness,h.clearcoatMap&&(c.clearcoatMap.value=h.clearcoatMap,t(h.clearcoatMap,c.clearcoatMapTransform)),h.clearcoatRoughnessMap&&(c.clearcoatRoughnessMap.value=h.clearcoatRoughnessMap,t(h.clearcoatRoughnessMap,c.clearcoatRoughnessMapTransform)),h.clearcoatNormalMap&&(c.clearcoatNormalMap.value=h.clearcoatNormalMap,t(h.clearcoatNormalMap,c.clearcoatNormalMapTransform),c.clearcoatNormalScale.value.copy(h.clearcoatNormalScale),h.side===1&&c.clearcoatNormalScale.value.negate())),h.iridescence>0&&(c.iridescence.value=h.iridescence,c.iridescenceIOR.value=h.iridescenceIOR,c.iridescenceThicknessMinimum.value=h.iridescenceThicknessRange[0],c.iridescenceThicknessMaximum.value=h.iridescenceThicknessRange[1],h.iridescenceMap&&(c.iridescenceMap.value=h.iridescenceMap,t(h.iridescenceMap,c.iridescenceMapTransform)),h.iridescenceThicknessMap&&(c.iridescenceThicknessMap.value=h.iridescenceThicknessMap,t(h.iridescenceThicknessMap,c.iridescenceThicknessMapTransform))),h.transmission>0&&(c.transmission.value=h.transmission,c.transmissionSamplerMap.value=d.texture,c.transmissionSamplerSize.value.set(d.width,d.height),h.transmissionMap&&(c.transmissionMap.value=h.transmissionMap,t(h.transmissionMap,c.transmissionMapTransform)),c.thickness.value=h.thickness,h.thicknessMap&&(c.thicknessMap.value=h.thicknessMap,t(h.thicknessMap,c.thicknessMapTransform)),c.attenuationDistance.value=h.attenuationDistance,c.attenuationColor.value.copy(h.attenuationColor)),h.anisotropy>0&&(c.anisotropyVector.value.set(h.anisotropy*Math.cos(h.anisotropyRotation),h.anisotropy*Math.sin(h.anisotropyRotation)),h.anisotropyMap&&(c.anisotropyMap.value=h.anisotropyMap,t(h.anisotropyMap,c.anisotropyMapTransform))),c.specularIntensity.value=h.specularIntensity,c.specularColor.value.copy(h.specularColor),h.specularColorMap&&(c.specularColorMap.value=h.specularColorMap,t(h.specularColorMap,c.specularColorMapTransform)),h.specularIntensityMap&&(c.specularIntensityMap.value=h.specularIntensityMap,t(h.specularIntensityMap,c.specularIntensityMapTransform))}(n,s,l)):s.isMeshMatcapMaterial?(i(n,s),function(c,h){h.matcap&&(c.matcap.value=h.matcap)}(n,s)):s.isMeshDepthMaterial?i(n,s):s.isMeshDistanceMaterial?(i(n,s),function(c,h){const d=e.get(h).light;c.referencePosition.value.setFromMatrixPosition(d.matrixWorld),c.nearDistance.value=d.shadow.camera.near,c.farDistance.value=d.shadow.camera.far}(n,s)):s.isMeshNormalMaterial?i(n,s):s.isLineBasicMaterial?(function(c,h){c.diffuse.value.copy(h.color),c.opacity.value=h.opacity,h.map&&(c.map.value=h.map,t(h.map,c.mapTransform))}(n,s),s.isLineDashedMaterial&&function(c,h){c.dashSize.value=h.dashSize,c.totalSize.value=h.dashSize+h.gapSize,c.scale.value=h.scale}(n,s)):s.isPointsMaterial?function(c,h,d,p){c.diffuse.value.copy(h.color),c.opacity.value=h.opacity,c.size.value=h.size*d,c.scale.value=.5*p,h.map&&(c.map.value=h.map,t(h.map,c.uvTransform)),h.alphaMap&&(c.alphaMap.value=h.alphaMap,t(h.alphaMap,c.alphaMapTransform)),h.alphaTest>0&&(c.alphaTest.value=h.alphaTest)}(n,s,a,o):s.isSpriteMaterial?function(c,h){c.diffuse.value.copy(h.color),c.opacity.value=h.opacity,c.rotation.value=h.rotation,h.map&&(c.map.value=h.map,t(h.map,c.mapTransform)),h.alphaMap&&(c.alphaMap.value=h.alphaMap,t(h.alphaMap,c.alphaMapTransform)),h.alphaTest>0&&(c.alphaTest.value=h.alphaTest)}(n,s):s.isShadowMaterial?(n.color.value.copy(s.color),n.opacity.value=s.opacity):s.isShaderMaterial&&(s.uniformsNeedUpdate=!1)}}}function Kp(r,e,t,i){let n={},s={},a=[];const o=t.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(d,p,m){const f=d.value;if(m[p]===void 0){if(typeof f=="number")m[p]=f;else{const v=Array.isArray(f)?f:[f],g=[];for(let M=0;M<v.length;M++)g.push(v[M].clone());m[p]=g}return!0}if(typeof f=="number"){if(m[p]!==f)return m[p]=f,!0}else{const v=Array.isArray(m[p])?m[p]:[m[p]],g=Array.isArray(f)?f:[f];for(let M=0;M<v.length;M++){const y=v[M];if(y.equals(g[M])===!1)return y.copy(g[M]),!0}}return!1}function c(d){const p={boundary:0,storage:0};return typeof d=="number"?(p.boundary=4,p.storage=4):d.isVector2?(p.boundary=8,p.storage=8):d.isVector3||d.isColor?(p.boundary=16,p.storage=12):d.isVector4?(p.boundary=16,p.storage=16):d.isMatrix3?(p.boundary=48,p.storage=48):d.isMatrix4?(p.boundary=64,p.storage=64):d.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",d),p}function h(d){const p=d.target;p.removeEventListener("dispose",h);const m=a.indexOf(p.__bindingPointIndex);a.splice(m,1),r.deleteBuffer(n[p.id]),delete n[p.id],delete s[p.id]}return{bind:function(d,p){const m=p.program;i.uniformBlockBinding(d,m)},update:function(d,p){let m=n[d.id];m===void 0&&(function(g){const M=g.uniforms;let y=0;const x=16;let T=0;for(let A=0,C=M.length;A<C;A++){const D=M[A],V={boundary:0,storage:0},k=Array.isArray(D.value)?D.value:[D.value];for(let K=0,z=k.length;K<z;K++){const O=c(k[K]);V.boundary+=O.boundary,V.storage+=O.storage}D.__data=new Float32Array(V.storage/Float32Array.BYTES_PER_ELEMENT),D.__offset=y,A>0&&(T=y%x,T!==0&&x-T-V.boundary<0&&(y+=x-T,D.__offset=y)),y+=V.storage}T=y%x,T>0&&(y+=x-T),g.__size=y,g.__cache={}}(d),m=function(g){const M=function(){for(let A=0;A<o;A++)if(a.indexOf(A)===-1)return a.push(A),A;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();g.__bindingPointIndex=M;const y=r.createBuffer(),x=g.__size,T=g.usage;return r.bindBuffer(r.UNIFORM_BUFFER,y),r.bufferData(r.UNIFORM_BUFFER,x,T),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,M,y),y}(d),n[d.id]=m,d.addEventListener("dispose",h));const f=p.program;i.updateUBOMapping(d,f);const v=e.render.frame;s[d.id]!==v&&(function(g){const M=n[g.id],y=g.uniforms,x=g.__cache;r.bindBuffer(r.UNIFORM_BUFFER,M);for(let T=0,A=y.length;T<A;T++){const C=y[T];if(l(C,T,x)===!0){const D=C.__offset,V=Array.isArray(C.value)?C.value:[C.value];let k=0;for(let K=0;K<V.length;K++){const z=V[K],O=c(z);typeof z=="number"?(C.__data[0]=z,r.bufferSubData(r.UNIFORM_BUFFER,D+k,C.__data)):z.isMatrix3?(C.__data[0]=z.elements[0],C.__data[1]=z.elements[1],C.__data[2]=z.elements[2],C.__data[3]=z.elements[0],C.__data[4]=z.elements[3],C.__data[5]=z.elements[4],C.__data[6]=z.elements[5],C.__data[7]=z.elements[0],C.__data[8]=z.elements[6],C.__data[9]=z.elements[7],C.__data[10]=z.elements[8],C.__data[11]=z.elements[0]):(z.toArray(C.__data,k),k+=O.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,D,C.__data)}}r.bindBuffer(r.UNIFORM_BUFFER,null)}(d),s[d.id]=v)},dispose:function(){for(const d in n)r.deleteBuffer(n[d]);a=[],n={},s={}}}}class Cu{constructor(e={}){const{canvas:t=Br(),context:i=null,depth:n=!0,stencil:s=!0,alpha:a=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:d=!1}=e;let p;this.isWebGLRenderer=!0,p=i!==null?i.getContextAttributes().alpha:a;const m=new Uint32Array(4),f=new Int32Array(4);let v=null,g=null;const M=[],y=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Dt,this._useLegacyLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const x=this;let T=!1,A=0,C=0,D=null,V=-1,k=null;const K=new dt,z=new dt;let O=null;const se=new be(0);let oe=0,_e=t.width,ve=t.height,ee=1,le=null,ce=null;const Y=new dt(0,0,_e,ve),ie=new dt(0,0,_e,ve);let Se=!1;const me=new yr;let Ae=!1,Ce=!1,Be=null;const P=new Ue,L=new te,N=new R,G={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function U(){return D===null?ee:1}let W,H,E,X,q,ae,J,Ne,Te,de,De,ye,Pe,ke,yt,ut,Le,ot,Zi,Ve,Et,rt,Ji,Sa,$=i;function ic(I,Z){for(let Q=0;Q<I.length;Q++){const ue=I[Q],ne=t.getContext(ue,Z);if(ne!==null)return ne}return null}try{const I={alpha:!0,depth:n,stencil:s,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:d};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${ei}`),t.addEventListener("webglcontextlost",gp,!1),t.addEventListener("webglcontextrestored",_p,!1),t.addEventListener("webglcontextcreationerror",vp,!1),$===null){const Z=["webgl2","webgl","experimental-webgl"];if(x.isWebGL1Renderer===!0&&Z.shift(),$=ic(Z,I),$===null)throw ic(Z)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&$ instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),$.getShaderPrecisionFormat===void 0&&($.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(I){throw console.error("THREE.WebGLRenderer: "+I.message),I}function Eo(){W=new Pn($),H=new Bc($,W,e),W.init(H),rt=new Tu($,W,H),E=new qp($,W,H),X=new Vc($),q=new Bp,ae=new Yp($,W,E,q,H,rt,X),J=new kc(x),Ne=new tr(x),Te=new xr($,H),Ji=new er($,W,Te,H),de=new Hc($,Te,X,Ji),De=new qc($,de,Te,X),Zi=new Xc($,H,ae),ut=new zc(q),ye=new Fp(x,J,Ne,W,H,Ji,ut),Pe=new $p(x,q),ke=new kp,yt=new jp(W,H),ot=new ts(x,J,Ne,E,De,p,l),Le=new Xp(x,De,H),Sa=new Kp($,X,H,E),Ve=new Fc($,W,X,H),Et=new Gc($,W,X,H),X.programs=ye.programs,x.capabilities=H,x.extensions=W,x.properties=q,x.renderLists=ke,x.shadowMap=Le,x.state=E,x.info=X}Eo();const li=new Jp(x,$);function gp(I){I.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),T=!0}function _p(){console.log("THREE.WebGLRenderer: Context Restored."),T=!1;const I=X.autoReset,Z=Le.enabled,Q=Le.autoUpdate,ue=Le.needsUpdate,ne=Le.type;Eo(),X.autoReset=I,Le.enabled=Z,Le.autoUpdate=Q,Le.needsUpdate=ue,Le.type=ne}function vp(I){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",I.statusMessage)}function yp(I){const Z=I.target;Z.removeEventListener("dispose",yp),function(Q){(function(ue){const ne=q.get(ue).programs;ne!==void 0&&(ne.forEach(function(xe){ye.releaseProgram(xe)}),ue.isShaderMaterial&&ye.releaseShaderCache(ue))})(Q),q.remove(Q)}(Z)}function xp(I,Z,Q){I.transparent===!0&&I.side===2&&I.forceSinglePass===!1?(I.side=1,I.needsUpdate=!0,rc(I,Z,Q),I.side=0,I.needsUpdate=!0,rc(I,Z,Q),I.side=2):rc(I,Z,Q)}this.xr=li,this.getContext=function(){return $},this.getContextAttributes=function(){return $.getContextAttributes()},this.forceContextLoss=function(){const I=W.get("WEBGL_lose_context");I&&I.loseContext()},this.forceContextRestore=function(){const I=W.get("WEBGL_lose_context");I&&I.restoreContext()},this.getPixelRatio=function(){return ee},this.setPixelRatio=function(I){I!==void 0&&(ee=I,this.setSize(_e,ve,!1))},this.getSize=function(I){return I.set(_e,ve)},this.setSize=function(I,Z,Q=!0){li.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(_e=I,ve=Z,t.width=Math.floor(I*ee),t.height=Math.floor(Z*ee),Q===!0&&(t.style.width=I+"px",t.style.height=Z+"px"),this.setViewport(0,0,I,Z))},this.getDrawingBufferSize=function(I){return I.set(_e*ee,ve*ee).floor()},this.setDrawingBufferSize=function(I,Z,Q){_e=I,ve=Z,ee=Q,t.width=Math.floor(I*Q),t.height=Math.floor(Z*Q),this.setViewport(0,0,I,Z)},this.getCurrentViewport=function(I){return I.copy(K)},this.getViewport=function(I){return I.copy(Y)},this.setViewport=function(I,Z,Q,ue){I.isVector4?Y.set(I.x,I.y,I.z,I.w):Y.set(I,Z,Q,ue),E.viewport(K.copy(Y).multiplyScalar(ee).floor())},this.getScissor=function(I){return I.copy(ie)},this.setScissor=function(I,Z,Q,ue){I.isVector4?ie.set(I.x,I.y,I.z,I.w):ie.set(I,Z,Q,ue),E.scissor(z.copy(ie).multiplyScalar(ee).floor())},this.getScissorTest=function(){return Se},this.setScissorTest=function(I){E.setScissorTest(Se=I)},this.setOpaqueSort=function(I){le=I},this.setTransparentSort=function(I){ce=I},this.getClearColor=function(I){return I.copy(ot.getClearColor())},this.setClearColor=function(){ot.setClearColor.apply(ot,arguments)},this.getClearAlpha=function(){return ot.getClearAlpha()},this.setClearAlpha=function(){ot.setClearAlpha.apply(ot,arguments)},this.clear=function(I=!0,Z=!0,Q=!0){let ue=0;if(I){let ne=!1;if(D!==null){const xe=D.texture.format;ne=xe===1033||xe===1031||xe===1029}if(ne){const xe=D.texture.type,ze=xe===1009||xe===1014||xe===1012||xe===1020||xe===1017||xe===1018,We=ot.getClearColor(),et=ot.getClearAlpha(),it=We.r,nt=We.g,st=We.b;ze?(m[0]=it,m[1]=nt,m[2]=st,m[3]=et,$.clearBufferuiv($.COLOR,0,m)):(f[0]=it,f[1]=nt,f[2]=st,f[3]=et,$.clearBufferiv($.COLOR,0,f))}else ue|=$.COLOR_BUFFER_BIT}Z&&(ue|=$.DEPTH_BUFFER_BIT),Q&&(ue|=$.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),$.clear(ue)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",gp,!1),t.removeEventListener("webglcontextrestored",_p,!1),t.removeEventListener("webglcontextcreationerror",vp,!1),ke.dispose(),yt.dispose(),q.dispose(),J.dispose(),Ne.dispose(),De.dispose(),Ji.dispose(),Sa.dispose(),ye.dispose(),li.dispose(),li.removeEventListener("sessionstart",bp),li.removeEventListener("sessionend",Mp),Be&&(Be.dispose(),Be=null),Ss.stop()},this.renderBufferDirect=function(I,Z,Q,ue,ne,xe){Z===null&&(Z=G);const ze=ne.isMesh&&ne.matrixWorld.determinant()<0,We=function(Xt,$i,Ti,at,lt){$i.isScene!==!0&&($i=G),ae.resetTextureUnits();const To=$i.fog,Vh=at.isMeshStandardMaterial?$i.environment:null,Um=D===null?x.outputColorSpace:D.isXRRenderTarget===!0?D.texture.colorSpace:Oi,sc=(at.isMeshStandardMaterial?Ne:J).get(at.envMap||Vh),Nm=at.vertexColors===!0&&!!Ti.attributes.color&&Ti.attributes.color.itemSize===4,Om=!!Ti.attributes.tangent&&(!!at.normalMap||at.anisotropy>0),Fm=!!Ti.morphAttributes.position,Bm=!!Ti.morphAttributes.normal,zm=!!Ti.morphAttributes.color;let Cp=0;at.toneMapped&&(D!==null&&D.isXRRenderTarget!==!0||(Cp=x.toneMapping));const Rp=Ti.morphAttributes.position||Ti.morphAttributes.normal||Ti.morphAttributes.color,km=Rp!==void 0?Rp.length:0,pt=q.get(at),Hm=g.state.lights;if(Ae===!0&&(Ce===!0||Xt!==k)){const Ki=Xt===k&&at.id===V;ut.setState(at,Xt,Ki)}let gn=!1;at.version===pt.__version?pt.needsLights&&pt.lightsStateVersion!==Hm.state.version||pt.outputColorSpace!==Um||lt.isBatchedMesh&&pt.batching===!1?gn=!0:lt.isBatchedMesh||pt.batching!==!0?lt.isInstancedMesh&&pt.instancing===!1?gn=!0:lt.isInstancedMesh||pt.instancing!==!0?lt.isSkinnedMesh&&pt.skinning===!1?gn=!0:lt.isSkinnedMesh||pt.skinning!==!0?lt.isInstancedMesh&&pt.instancingColor===!0&&lt.instanceColor===null||lt.isInstancedMesh&&pt.instancingColor===!1&&lt.instanceColor!==null||pt.envMap!==sc||at.fog===!0&&pt.fog!==To?gn=!0:pt.numClippingPlanes===void 0||pt.numClippingPlanes===ut.numPlanes&&pt.numIntersection===ut.numIntersection?(pt.vertexAlphas!==Nm||pt.vertexTangents!==Om||pt.morphTargets!==Fm||pt.morphNormals!==Bm||pt.morphColors!==zm||pt.toneMapping!==Cp||H.isWebGL2===!0&&pt.morphTargetsCount!==km)&&(gn=!0):gn=!0:gn=!0:gn=!0:gn=!0:(gn=!0,pt.__version=at.version);let Es=pt.currentProgram;gn===!0&&(Es=rc(at,$i,lt));let Lp=!1,Ao=!1,Wh=!1;const ci=Es.getUniforms(),Ts=pt.uniforms;if(E.useProgram(Es.program)&&(Lp=!0,Ao=!0,Wh=!0),at.id!==V&&(V=at.id,Ao=!0),Lp||k!==Xt){ci.setValue($,"projectionMatrix",Xt.projectionMatrix),ci.setValue($,"viewMatrix",Xt.matrixWorldInverse);const Ki=ci.map.cameraPosition;Ki!==void 0&&Ki.setValue($,N.setFromMatrixPosition(Xt.matrixWorld)),H.logarithmicDepthBuffer&&ci.setValue($,"logDepthBufFC",2/(Math.log(Xt.far+1)/Math.LN2)),(at.isMeshPhongMaterial||at.isMeshToonMaterial||at.isMeshLambertMaterial||at.isMeshBasicMaterial||at.isMeshStandardMaterial||at.isShaderMaterial)&&ci.setValue($,"isOrthographic",Xt.isOrthographicCamera===!0),k!==Xt&&(k=Xt,Ao=!0,Wh=!0)}if(lt.isSkinnedMesh){ci.setOptional($,lt,"bindMatrix"),ci.setOptional($,lt,"bindMatrixInverse");const Ki=lt.skeleton;Ki&&(H.floatVertexTextures?(Ki.boneTexture===null&&Ki.computeBoneTexture(),ci.setValue($,"boneTexture",Ki.boneTexture,ae)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}lt.isBatchedMesh&&(ci.setOptional($,lt,"batchingTexture"),ci.setValue($,"batchingTexture",lt._matricesTexture,ae));const jh=Ti.morphAttributes;(jh.position!==void 0||jh.normal!==void 0||jh.color!==void 0&&H.isWebGL2===!0)&&Zi.update(lt,Ti,Es),(Ao||pt.receiveShadow!==lt.receiveShadow)&&(pt.receiveShadow=lt.receiveShadow,ci.setValue($,"receiveShadow",lt.receiveShadow)),at.isMeshGouraudMaterial&&at.envMap!==null&&(Ts.envMap.value=sc,Ts.flipEnvMap.value=sc.isCubeTexture&&sc.isRenderTargetTexture===!1?-1:1),Ao&&(ci.setValue($,"toneMappingExposure",x.toneMappingExposure),pt.needsLights&&(_n=Wh,(Nn=Ts).ambientLightColor.needsUpdate=_n,Nn.lightProbe.needsUpdate=_n,Nn.directionalLights.needsUpdate=_n,Nn.directionalLightShadows.needsUpdate=_n,Nn.pointLights.needsUpdate=_n,Nn.pointLightShadows.needsUpdate=_n,Nn.spotLights.needsUpdate=_n,Nn.spotLightShadows.needsUpdate=_n,Nn.rectAreaLights.needsUpdate=_n,Nn.hemisphereLights.needsUpdate=_n),To&&at.fog===!0&&Pe.refreshFogUniforms(Ts,To),Pe.refreshMaterialUniforms(Ts,at,ee,ve,Be),os.upload($,Tp(pt),Ts,ae));var Nn,_n;if(at.isShaderMaterial&&at.uniformsNeedUpdate===!0&&(os.upload($,Tp(pt),Ts,ae),at.uniformsNeedUpdate=!1),at.isSpriteMaterial&&ci.setValue($,"center",lt.center),ci.setValue($,"modelViewMatrix",lt.modelViewMatrix),ci.setValue($,"normalMatrix",lt.normalMatrix),ci.setValue($,"modelMatrix",lt.matrixWorld),at.isShaderMaterial||at.isRawShaderMaterial){const Ki=at.uniformsGroups;for(let Xh=0,Gm=Ki.length;Xh<Gm;Xh++)if(H.isWebGL2){const Pp=Ki[Xh];Sa.update(Pp,Es),Sa.bind(Pp,Es)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Es}(I,Z,Q,ue,ne);E.setMaterial(ue,ze);let et=Q.index,it=1;if(ue.wireframe===!0){if(et=de.getWireframeAttribute(Q),et===void 0)return;it=2}const nt=Q.drawRange,st=Q.attributes.position;let Rt=nt.start*it,fn=(nt.start+nt.count)*it;xe!==null&&(Rt=Math.max(Rt,xe.start*it),fn=Math.min(fn,(xe.start+xe.count)*it)),et!==null?(Rt=Math.max(Rt,0),fn=Math.min(fn,et.count)):st!=null&&(Rt=Math.max(Rt,0),fn=Math.min(fn,st.count));const ar=fn-Rt;if(ar<0||ar===1/0)return;let ws;Ji.setup(ne,ue,We,Q,et);let Lt=Ve;if(et!==null&&(ws=Te.get(et),Lt=Et,Lt.setIndex(ws)),ne.isMesh)ue.wireframe===!0?(E.setLineWidth(ue.wireframeLinewidth*U()),Lt.setMode($.LINES)):Lt.setMode($.TRIANGLES);else if(ne.isLine){let Xt=ue.linewidth;Xt===void 0&&(Xt=1),E.setLineWidth(Xt*U()),ne.isLineSegments?Lt.setMode($.LINES):ne.isLineLoop?Lt.setMode($.LINE_LOOP):Lt.setMode($.LINE_STRIP)}else ne.isPoints?Lt.setMode($.POINTS):ne.isSprite&&Lt.setMode($.TRIANGLES);if(ne.isBatchedMesh)Lt.renderMultiDraw(ne._multiDrawStarts,ne._multiDrawCounts,ne._multiDrawCount);else if(ne.isInstancedMesh)Lt.renderInstances(Rt,ar,ne.count);else if(Q.isInstancedBufferGeometry){const Xt=Q._maxInstanceCount!==void 0?Q._maxInstanceCount:1/0,$i=Math.min(Q.instanceCount,Xt);Lt.renderInstances(Rt,ar,$i)}else Lt.render(Rt,ar)},this.compile=function(I,Z,Q=null){Q===null&&(Q=I),g=yt.get(Q),g.init(),y.push(g),Q.traverseVisible(function(ne){ne.isLight&&ne.layers.test(Z.layers)&&(g.pushLight(ne),ne.castShadow&&g.pushShadow(ne))}),I!==Q&&I.traverseVisible(function(ne){ne.isLight&&ne.layers.test(Z.layers)&&(g.pushLight(ne),ne.castShadow&&g.pushShadow(ne))}),g.setupLights(x._useLegacyLights);const ue=new Set;return I.traverse(function(ne){const xe=ne.material;if(xe)if(Array.isArray(xe))for(let ze=0;ze<xe.length;ze++){const We=xe[ze];xp(We,Q,ne),ue.add(We)}else xp(xe,Q,ne),ue.add(xe)}),y.pop(),g=null,ue},this.compileAsync=function(I,Z,Q=null){const ue=this.compile(I,Z,Q);return new Promise(ne=>{function xe(){ue.forEach(function(ze){q.get(ze).currentProgram.isReady()&&ue.delete(ze)}),ue.size!==0?setTimeout(xe,10):ne(I)}W.get("KHR_parallel_shader_compile")!==null?xe():setTimeout(xe,10)})};let Gh=null;function bp(){Ss.stop()}function Mp(){Ss.start()}const Ss=new Qo;function Sp(I,Z,Q,ue){if(I.visible===!1)return;if(I.layers.test(Z.layers)){if(I.isGroup)Q=I.renderOrder;else if(I.isLOD)I.autoUpdate===!0&&I.update(Z);else if(I.isLight)g.pushLight(I),I.castShadow&&g.pushShadow(I);else if(I.isSprite){if(!I.frustumCulled||me.intersectsSprite(I)){ue&&N.setFromMatrixPosition(I.matrixWorld).applyMatrix4(P);const xe=De.update(I),ze=I.material;ze.visible&&v.push(I,xe,ze,Q,N.z,null)}}else if((I.isMesh||I.isLine||I.isPoints)&&(!I.frustumCulled||me.intersectsObject(I))){const xe=De.update(I),ze=I.material;if(ue&&(I.boundingSphere!==void 0?(I.boundingSphere===null&&I.computeBoundingSphere(),N.copy(I.boundingSphere.center)):(xe.boundingSphere===null&&xe.computeBoundingSphere(),N.copy(xe.boundingSphere.center)),N.applyMatrix4(I.matrixWorld).applyMatrix4(P)),Array.isArray(ze)){const We=xe.groups;for(let et=0,it=We.length;et<it;et++){const nt=We[et],st=ze[nt.materialIndex];st&&st.visible&&v.push(I,xe,st,Q,N.z,nt)}}else ze.visible&&v.push(I,xe,ze,Q,N.z,null)}}const ne=I.children;for(let xe=0,ze=ne.length;xe<ze;xe++)Sp(ne[xe],Z,Q,ue)}function wp(I,Z,Q,ue){const ne=I.opaque,xe=I.transmissive,ze=I.transparent;g.setupLightsView(Q),Ae===!0&&ut.setGlobalState(x.clippingPlanes,Q),xe.length>0&&function(We,et,it,nt){if((it.isScene===!0?it.overrideMaterial:null)!==null)return;const Rt=H.isWebGL2;Be===null&&(Be=new Li(1,1,{generateMipmaps:!0,type:W.has("EXT_color_buffer_half_float")?1016:1009,minFilter:1008,samples:Rt?4:0})),x.getDrawingBufferSize(L),Rt?Be.setSize(L.x,L.y):Be.setSize(Fr(L.x),Fr(L.y));const fn=x.getRenderTarget();x.setRenderTarget(Be),x.getClearColor(se),oe=x.getClearAlpha(),oe<1&&x.setClearColor(16777215,.5),x.clear();const ar=x.toneMapping;x.toneMapping=0,nc(We,it,nt),ae.updateMultisampleRenderTarget(Be),ae.updateRenderTargetMipmap(Be);let ws=!1;for(let Lt=0,Xt=et.length;Lt<Xt;Lt++){const $i=et[Lt],Ti=$i.object,at=$i.geometry,lt=$i.material,To=$i.group;if(lt.side===2&&Ti.layers.test(nt.layers)){const Vh=lt.side;lt.side=1,lt.needsUpdate=!0,Ep(Ti,it,nt,at,lt,To),lt.side=Vh,lt.needsUpdate=!0,ws=!0}}ws===!0&&(ae.updateMultisampleRenderTarget(Be),ae.updateRenderTargetMipmap(Be)),x.setRenderTarget(fn),x.setClearColor(se,oe),x.toneMapping=ar}(ne,xe,Z,Q),ue&&E.viewport(K.copy(ue)),ne.length>0&&nc(ne,Z,Q),xe.length>0&&nc(xe,Z,Q),ze.length>0&&nc(ze,Z,Q),E.buffers.depth.setTest(!0),E.buffers.depth.setMask(!0),E.buffers.color.setMask(!0),E.setPolygonOffset(!1)}function nc(I,Z,Q){const ue=Z.isScene===!0?Z.overrideMaterial:null;for(let ne=0,xe=I.length;ne<xe;ne++){const ze=I[ne],We=ze.object,et=ze.geometry,it=ue===null?ze.material:ue,nt=ze.group;We.layers.test(Q.layers)&&Ep(We,Z,Q,et,it,nt)}}function Ep(I,Z,Q,ue,ne,xe){I.onBeforeRender(x,Z,Q,ue,ne,xe),I.modelViewMatrix.multiplyMatrices(Q.matrixWorldInverse,I.matrixWorld),I.normalMatrix.getNormalMatrix(I.modelViewMatrix),ne.onBeforeRender(x,Z,Q,ue,I,xe),ne.transparent===!0&&ne.side===2&&ne.forceSinglePass===!1?(ne.side=1,ne.needsUpdate=!0,x.renderBufferDirect(Q,Z,ue,ne,I,xe),ne.side=0,ne.needsUpdate=!0,x.renderBufferDirect(Q,Z,ue,ne,I,xe),ne.side=2):x.renderBufferDirect(Q,Z,ue,ne,I,xe),I.onAfterRender(x,Z,Q,ue,ne,xe)}function rc(I,Z,Q){Z.isScene!==!0&&(Z=G);const ue=q.get(I),ne=g.state.lights,xe=g.state.shadowsArray,ze=ne.state.version,We=ye.getParameters(I,ne.state,xe,Z,Q),et=ye.getProgramCacheKey(We);let it=ue.programs;ue.environment=I.isMeshStandardMaterial?Z.environment:null,ue.fog=Z.fog,ue.envMap=(I.isMeshStandardMaterial?Ne:J).get(I.envMap||ue.environment),it===void 0&&(I.addEventListener("dispose",yp),it=new Map,ue.programs=it);let nt=it.get(et);if(nt!==void 0){if(ue.currentProgram===nt&&ue.lightsStateVersion===ze)return Ap(I,We),nt}else We.uniforms=ye.getUniforms(I),I.onBuild(Q,We,x),I.onBeforeCompile(We,x),nt=ye.acquireProgram(We,et),it.set(et,nt),ue.uniforms=We.uniforms;const st=ue.uniforms;return(I.isShaderMaterial||I.isRawShaderMaterial)&&I.clipping!==!0||(st.clippingPlanes=ut.uniform),Ap(I,We),ue.needsLights=function(Rt){return Rt.isMeshLambertMaterial||Rt.isMeshToonMaterial||Rt.isMeshPhongMaterial||Rt.isMeshStandardMaterial||Rt.isShadowMaterial||Rt.isShaderMaterial&&Rt.lights===!0}(I),ue.lightsStateVersion=ze,ue.needsLights&&(st.ambientLightColor.value=ne.state.ambient,st.lightProbe.value=ne.state.probe,st.directionalLights.value=ne.state.directional,st.directionalLightShadows.value=ne.state.directionalShadow,st.spotLights.value=ne.state.spot,st.spotLightShadows.value=ne.state.spotShadow,st.rectAreaLights.value=ne.state.rectArea,st.ltc_1.value=ne.state.rectAreaLTC1,st.ltc_2.value=ne.state.rectAreaLTC2,st.pointLights.value=ne.state.point,st.pointLightShadows.value=ne.state.pointShadow,st.hemisphereLights.value=ne.state.hemi,st.directionalShadowMap.value=ne.state.directionalShadowMap,st.directionalShadowMatrix.value=ne.state.directionalShadowMatrix,st.spotShadowMap.value=ne.state.spotShadowMap,st.spotLightMatrix.value=ne.state.spotLightMatrix,st.spotLightMap.value=ne.state.spotLightMap,st.pointShadowMap.value=ne.state.pointShadowMap,st.pointShadowMatrix.value=ne.state.pointShadowMatrix),ue.currentProgram=nt,ue.uniformsList=null,nt}function Tp(I){if(I.uniformsList===null){const Z=I.currentProgram.getUniforms();I.uniformsList=os.seqWithValue(Z.seq,I.uniforms)}return I.uniformsList}function Ap(I,Z){const Q=q.get(I);Q.outputColorSpace=Z.outputColorSpace,Q.batching=Z.batching,Q.instancing=Z.instancing,Q.instancingColor=Z.instancingColor,Q.skinning=Z.skinning,Q.morphTargets=Z.morphTargets,Q.morphNormals=Z.morphNormals,Q.morphColors=Z.morphColors,Q.morphTargetsCount=Z.morphTargetsCount,Q.numClippingPlanes=Z.numClippingPlanes,Q.numIntersection=Z.numClipIntersection,Q.vertexAlphas=Z.vertexAlphas,Q.vertexTangents=Z.vertexTangents,Q.toneMapping=Z.toneMapping}Ss.setAnimationLoop(function(I){Gh&&Gh(I)}),typeof self<"u"&&Ss.setContext(self),this.setAnimationLoop=function(I){Gh=I,li.setAnimationLoop(I),I===null?Ss.stop():Ss.start()},li.addEventListener("sessionstart",bp),li.addEventListener("sessionend",Mp),this.render=function(I,Z){if(Z!==void 0&&Z.isCamera!==!0)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(T===!0)return;I.matrixWorldAutoUpdate===!0&&I.updateMatrixWorld(),Z.parent===null&&Z.matrixWorldAutoUpdate===!0&&Z.updateMatrixWorld(),li.enabled===!0&&li.isPresenting===!0&&(li.cameraAutoUpdate===!0&&li.updateCamera(Z),Z=li.getCamera()),I.isScene===!0&&I.onBeforeRender(x,I,Z,D),g=yt.get(I,y.length),g.init(),y.push(g),P.multiplyMatrices(Z.projectionMatrix,Z.matrixWorldInverse),me.setFromProjectionMatrix(P),Ce=this.localClippingEnabled,Ae=ut.init(this.clippingPlanes,Ce),v=ke.get(I,M.length),v.init(),M.push(v),Sp(I,Z,0,x.sortObjects),v.finish(),x.sortObjects===!0&&v.sort(le,ce),this.info.render.frame++,Ae===!0&&ut.beginShadows();const Q=g.state.shadowsArray;if(Le.render(Q,I,Z),Ae===!0&&ut.endShadows(),this.info.autoReset===!0&&this.info.reset(),ot.render(v,I),g.setupLights(x._useLegacyLights),Z.isArrayCamera){const ue=Z.cameras;for(let ne=0,xe=ue.length;ne<xe;ne++){const ze=ue[ne];wp(v,I,ze,ze.viewport)}}else wp(v,I,Z);D!==null&&(ae.updateMultisampleRenderTarget(D),ae.updateRenderTargetMipmap(D)),I.isScene===!0&&I.onAfterRender(x,I,Z),Ji.resetDefaultState(),V=-1,k=null,y.pop(),g=y.length>0?y[y.length-1]:null,M.pop(),v=M.length>0?M[M.length-1]:null},this.getActiveCubeFace=function(){return A},this.getActiveMipmapLevel=function(){return C},this.getRenderTarget=function(){return D},this.setRenderTargetTextures=function(I,Z,Q){q.get(I.texture).__webglTexture=Z,q.get(I.depthTexture).__webglTexture=Q;const ue=q.get(I);ue.__hasExternalTextures=!0,ue.__hasExternalTextures&&(ue.__autoAllocateDepthBuffer=Q===void 0,ue.__autoAllocateDepthBuffer||W.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),ue.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(I,Z){const Q=q.get(I);Q.__webglFramebuffer=Z,Q.__useDefaultFramebuffer=Z===void 0},this.setRenderTarget=function(I,Z=0,Q=0){D=I,A=Z,C=Q;let ue=!0,ne=null,xe=!1,ze=!1;if(I){const We=q.get(I);We.__useDefaultFramebuffer!==void 0?(E.bindFramebuffer($.FRAMEBUFFER,null),ue=!1):We.__webglFramebuffer===void 0?ae.setupRenderTarget(I):We.__hasExternalTextures&&ae.rebindTextures(I,q.get(I.texture).__webglTexture,q.get(I.depthTexture).__webglTexture);const et=I.texture;(et.isData3DTexture||et.isDataArrayTexture||et.isCompressedArrayTexture)&&(ze=!0);const it=q.get(I).__webglFramebuffer;I.isWebGLCubeRenderTarget?(ne=Array.isArray(it[Z])?it[Z][Q]:it[Z],xe=!0):ne=H.isWebGL2&&I.samples>0&&ae.useMultisampledRTT(I)===!1?q.get(I).__webglMultisampledFramebuffer:Array.isArray(it)?it[Q]:it,K.copy(I.viewport),z.copy(I.scissor),O=I.scissorTest}else K.copy(Y).multiplyScalar(ee).floor(),z.copy(ie).multiplyScalar(ee).floor(),O=Se;if(E.bindFramebuffer($.FRAMEBUFFER,ne)&&H.drawBuffers&&ue&&E.drawBuffers(I,ne),E.viewport(K),E.scissor(z),E.setScissorTest(O),xe){const We=q.get(I.texture);$.framebufferTexture2D($.FRAMEBUFFER,$.COLOR_ATTACHMENT0,$.TEXTURE_CUBE_MAP_POSITIVE_X+Z,We.__webglTexture,Q)}else if(ze){const We=q.get(I.texture),et=Z||0;$.framebufferTextureLayer($.FRAMEBUFFER,$.COLOR_ATTACHMENT0,We.__webglTexture,Q||0,et)}V=-1},this.readRenderTargetPixels=function(I,Z,Q,ue,ne,xe,ze){if(!I||!I.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let We=q.get(I).__webglFramebuffer;if(I.isWebGLCubeRenderTarget&&ze!==void 0&&(We=We[ze]),We){E.bindFramebuffer($.FRAMEBUFFER,We);try{const et=I.texture,it=et.format,nt=et.type;if(it!==1023&&rt.convert(it)!==$.getParameter($.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const st=nt===1016&&(W.has("EXT_color_buffer_half_float")||H.isWebGL2&&W.has("EXT_color_buffer_float"));if(!(nt===1009||rt.convert(nt)===$.getParameter($.IMPLEMENTATION_COLOR_READ_TYPE)||nt===1015&&(H.isWebGL2||W.has("OES_texture_float")||W.has("WEBGL_color_buffer_float"))||st))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");Z>=0&&Z<=I.width-ue&&Q>=0&&Q<=I.height-ne&&$.readPixels(Z,Q,ue,ne,rt.convert(it),rt.convert(nt),xe)}finally{const et=D!==null?q.get(D).__webglFramebuffer:null;E.bindFramebuffer($.FRAMEBUFFER,et)}}},this.copyFramebufferToTexture=function(I,Z,Q=0){const ue=Math.pow(2,-Q),ne=Math.floor(Z.image.width*ue),xe=Math.floor(Z.image.height*ue);ae.setTexture2D(Z,0),$.copyTexSubImage2D($.TEXTURE_2D,Q,0,0,I.x,I.y,ne,xe),E.unbindTexture()},this.copyTextureToTexture=function(I,Z,Q,ue=0){const ne=Z.image.width,xe=Z.image.height,ze=rt.convert(Q.format),We=rt.convert(Q.type);ae.setTexture2D(Q,0),$.pixelStorei($.UNPACK_FLIP_Y_WEBGL,Q.flipY),$.pixelStorei($.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Q.premultiplyAlpha),$.pixelStorei($.UNPACK_ALIGNMENT,Q.unpackAlignment),Z.isDataTexture?$.texSubImage2D($.TEXTURE_2D,ue,I.x,I.y,ne,xe,ze,We,Z.image.data):Z.isCompressedTexture?$.compressedTexSubImage2D($.TEXTURE_2D,ue,I.x,I.y,Z.mipmaps[0].width,Z.mipmaps[0].height,ze,Z.mipmaps[0].data):$.texSubImage2D($.TEXTURE_2D,ue,I.x,I.y,ze,We,Z.image),ue===0&&Q.generateMipmaps&&$.generateMipmap($.TEXTURE_2D),E.unbindTexture()},this.copyTextureToTexture3D=function(I,Z,Q,ue,ne=0){if(x.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const xe=I.max.x-I.min.x+1,ze=I.max.y-I.min.y+1,We=I.max.z-I.min.z+1,et=rt.convert(ue.format),it=rt.convert(ue.type);let nt;if(ue.isData3DTexture)ae.setTexture3D(ue,0),nt=$.TEXTURE_3D;else{if(!ue.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");ae.setTexture2DArray(ue,0),nt=$.TEXTURE_2D_ARRAY}$.pixelStorei($.UNPACK_FLIP_Y_WEBGL,ue.flipY),$.pixelStorei($.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ue.premultiplyAlpha),$.pixelStorei($.UNPACK_ALIGNMENT,ue.unpackAlignment);const st=$.getParameter($.UNPACK_ROW_LENGTH),Rt=$.getParameter($.UNPACK_IMAGE_HEIGHT),fn=$.getParameter($.UNPACK_SKIP_PIXELS),ar=$.getParameter($.UNPACK_SKIP_ROWS),ws=$.getParameter($.UNPACK_SKIP_IMAGES),Lt=Q.isCompressedTexture?Q.mipmaps[0]:Q.image;$.pixelStorei($.UNPACK_ROW_LENGTH,Lt.width),$.pixelStorei($.UNPACK_IMAGE_HEIGHT,Lt.height),$.pixelStorei($.UNPACK_SKIP_PIXELS,I.min.x),$.pixelStorei($.UNPACK_SKIP_ROWS,I.min.y),$.pixelStorei($.UNPACK_SKIP_IMAGES,I.min.z),Q.isDataTexture||Q.isData3DTexture?$.texSubImage3D(nt,ne,Z.x,Z.y,Z.z,xe,ze,We,et,it,Lt.data):Q.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),$.compressedTexSubImage3D(nt,ne,Z.x,Z.y,Z.z,xe,ze,We,et,Lt.data)):$.texSubImage3D(nt,ne,Z.x,Z.y,Z.z,xe,ze,We,et,it,Lt),$.pixelStorei($.UNPACK_ROW_LENGTH,st),$.pixelStorei($.UNPACK_IMAGE_HEIGHT,Rt),$.pixelStorei($.UNPACK_SKIP_PIXELS,fn),$.pixelStorei($.UNPACK_SKIP_ROWS,ar),$.pixelStorei($.UNPACK_SKIP_IMAGES,ws),ne===0&&ue.generateMipmaps&&$.generateMipmap(nt),E.unbindTexture()},this.initTexture=function(I){I.isCubeTexture?ae.setTextureCube(I,0):I.isData3DTexture?ae.setTexture3D(I,0):I.isDataArrayTexture||I.isCompressedArrayTexture?ae.setTexture2DArray(I,0):ae.setTexture2D(I,0),E.unbindTexture()},this.resetState=function(){A=0,C=0,D=null,E.reset(),Ji.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return 2e3}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===Qi?"display-p3":"srgb",t.unpackColorSpace=Qe.workingColorSpace===Ut?"display-p3":"srgb"}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===Dt?3001:3e3}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===3001?Dt:Oi}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class Ru extends Cu{}Ru.prototype.isWebGL1Renderer=!0;class ul{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new be(e),this.density=t}clone(){return new ul(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class dl{constructor(e,t=1,i=1e3){this.isFog=!0,this.name="",this.color=new be(e),this.near=t,this.far=i}clone(){return new dl(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Lu extends Xe{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}class pl{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=35044,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=ti()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return console.warn('THREE.InterleavedBuffer: "updateRange" is deprecated and removed in r169. Use "addUpdateRange()" instead.'),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,s=this.stride;n<s;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ti()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ti()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const fi=new R;class cs{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)fi.fromBufferAttribute(this,t),fi.applyMatrix4(e),this.setXYZ(t,fi.x,fi.y,fi.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)fi.fromBufferAttribute(this,t),fi.applyNormalMatrix(e),this.setXYZ(t,fi.x,fi.y,fi.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)fi.fromBufferAttribute(this,t),fi.transformDirection(e),this.setXYZ(t,fi.x,fi.y,fi.z);return this}setX(e,t){return this.normalized&&(t=je(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=je(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=je(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=je(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Yt(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Yt(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Yt(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Yt(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=je(t,this.array),i=je(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=je(t,this.array),i=je(i,this.array),n=je(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=je(t,this.array),i=je(i,this.array),n=je(n,this.array),s=je(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return new mt(new this.array.constructor(t),this.itemSize,this.normalized)}return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new cs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class nh extends qt{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new be(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let pa;const no=new R,ma=new R,fa=new R,ga=new te,ro=new te,Pu=new Ue,ml=new R,so=new R,fl=new R,Iu=new te,rh=new te,Du=new te;class Uu extends Xe{constructor(e=new nh){if(super(),this.isSprite=!0,this.type="Sprite",pa===void 0){pa=new Ye;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new pl(t,5);pa.setIndex([0,1,2,0,2,3]),pa.setAttribute("position",new cs(i,3,0,!1)),pa.setAttribute("uv",new cs(i,2,3,!1))}this.geometry=pa,this.material=e,this.center=new te(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ma.setFromMatrixScale(this.matrixWorld),Pu.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),fa.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&ma.multiplyScalar(-fa.z);const i=this.material.rotation;let n,s;i!==0&&(s=Math.cos(i),n=Math.sin(i));const a=this.center;gl(ml.set(-.5,-.5,0),fa,a,ma,n,s),gl(so.set(.5,-.5,0),fa,a,ma,n,s),gl(fl.set(.5,.5,0),fa,a,ma,n,s),Iu.set(0,0),rh.set(1,0),Du.set(1,1);let o=e.ray.intersectTriangle(ml,so,fl,!1,no);if(o===null&&(gl(so.set(-.5,.5,0),fa,a,ma,n,s),rh.set(0,1),o=e.ray.intersectTriangle(ml,fl,so,!1,no),o===null))return;const l=e.ray.origin.distanceTo(no);l<e.near||l>e.far||t.push({distance:l,point:no.clone(),uv:ni.getInterpolation(no,ml,so,fl,Iu,rh,Du,new te),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function gl(r,e,t,i,n,s){ga.subVectors(r,t).addScalar(.5).multiply(i),n!==void 0?(ro.x=s*ga.x-n*ga.y,ro.y=n*ga.x+s*ga.y):ro.copy(ga),r.copy(e),r.x+=ro.x,r.y+=ro.y,r.applyMatrix4(Pu)}const _l=new R,Nu=new R;class Ou extends Xe{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let i=0,n=t.length;i<n;i++){const s=t[i];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,i=0){t=Math.abs(t);const n=this.levels;let s;for(s=0;s<n.length&&!(t<n[s].distance);s++);return n.splice(s,0,{distance:t,hysteresis:i,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let i,n;for(i=1,n=t.length;i<n;i++){let s=t[i].distance;if(t[i].object.visible&&(s-=s*t[i].hysteresis),e<s)break}return t[i-1].object}return null}raycast(e,t){if(this.levels.length>0){_l.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(_l);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){_l.setFromMatrixPosition(e.matrixWorld),Nu.setFromMatrixPosition(this.matrixWorld);const i=_l.distanceTo(Nu)/e.zoom;let n,s;for(t[0].object.visible=!0,n=1,s=t.length;n<s;n++){let a=t[n].distance;if(t[n].object.visible&&(a-=a*t[n].hysteresis),!(i>=a))break;t[n-1].object.visible=!1,t[n].object.visible=!0}for(this._currentLevel=n-1;n<s;n++)t[n].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const i=this.levels;for(let n=0,s=i.length;n<s;n++){const a=i[n];t.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return t}}const Fu=new R,Bu=new dt,zu=new dt,Qp=new R,ku=new Ue,vl=new R,sh=new Wt,Hu=new Ue,ah=new Tn;class Gu extends Ft{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Ea,this.bindMatrix=new Ue,this.bindMatrixInverse=new Ue,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Jt),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,vl),this.boundingBox.expandByPoint(vl)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Wt),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,vl),this.boundingSphere.expandByPoint(vl)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const i=this.material,n=this.matrixWorld;i!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),sh.copy(this.boundingSphere),sh.applyMatrix4(n),e.ray.intersectsSphere(sh)!==!1&&(Hu.copy(n).invert(),ah.copy(e.ray).applyMatrix4(Hu),this.boundingBox!==null&&ah.intersectsBox(this.boundingBox)===!1||this._computeIntersections(e,t,ah)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new dt,t=this.geometry.attributes.skinWeight;for(let i=0,n=t.count;i<n;i++){e.fromBufferAttribute(t,i);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Ea?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Po?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const i=this.skeleton,n=this.geometry;Bu.fromBufferAttribute(n.attributes.skinIndex,e),zu.fromBufferAttribute(n.attributes.skinWeight,e),Fu.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const a=zu.getComponent(s);if(a!==0){const o=Bu.getComponent(s);ku.multiplyMatrices(i.bones[o].matrixWorld,i.boneInverses[o]),t.addScaledVector(Qp.copy(Fu).applyMatrix4(ku),a)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class oh extends Xe{constructor(){super(),this.isBone=!0,this.type="Bone"}}class hs extends St{constructor(e=null,t=1,i=1,n,s,a,o,l,c=1003,h=1003,d,p){super(null,a,o,l,c,h,n,s,d,p),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Vu=new Ue,em=new Ue;class yl{constructor(e=[],t=[]){this.uuid=ti(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new Ue)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const i=new Ue;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){const e=this.bones,t=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let s=0,a=e.length;s<a;s++){const o=e[s]?e[s].matrixWorld:em;Vu.multiplyMatrices(o,t[s]),Vu.toArray(i,16*s)}n!==null&&(n.needsUpdate=!0)}clone(){return new yl(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length);e=4*Math.ceil(e/4),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const i=new hs(t,e,e,1023,1015);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){const n=this.bones[t];if(n.name===e)return n}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,n=e.bones.length;i<n;i++){const s=e.bones[i];let a=t[s];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),a=new oh),this.bones.push(a),this.boneInverses.push(new Ue().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,i=this.boneInverses;for(let n=0,s=t.length;n<s;n++){const a=t[n];e.bones.push(a.uuid);const o=i[n];e.boneInverses.push(o.toArray())}return e}}class _a extends mt{constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const va=new Ue,Wu=new Ue,xl=[],ju=new Jt,tm=new Ue,ao=new Ft,oo=new Wt;class Xu extends Ft{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new _a(new Float32Array(16*i),16),this.instanceColor=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let n=0;n<i;n++)this.setMatrixAt(n,tm)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Jt),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,va),ju.copy(e.boundingBox).applyMatrix4(va),this.boundingBox.union(ju)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Wt),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,va),oo.copy(e.boundingSphere).applyMatrix4(va),this.boundingSphere.union(oo)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){const i=this.matrixWorld,n=this.count;if(ao.geometry=this.geometry,ao.material=this.material,ao.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),oo.copy(this.boundingSphere),oo.applyMatrix4(i),e.ray.intersectsSphere(oo)!==!1))for(let s=0;s<n;s++){this.getMatrixAt(s,va),Wu.multiplyMatrices(i,va),ao.matrixWorld=Wu,ao.raycast(e,xl);for(let a=0,o=xl.length;a<o;a++){const l=xl[a];l.instanceId=s,l.object=this,t.push(l)}xl.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new _a(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}function im(r,e){return r.z-e.z}function nm(r,e){return e.z-r.z}class rm{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t){const i=this.pool,n=this.list;this.index>=i.length&&i.push({start:-1,count:-1,z:-1});const s=i[this.index];n.push(s),this.index++,s.start=e.start,s.count=e.count,s.z=t}reset(){this.list.length=0,this.index=0}}const ya="batchId",wr=new Ue,qu=new Ue,sm=new Ue,Yu=new Ue,lh=new yr,bl=new Jt,us=new Wt,lo=new R,ch=new rm,oi=new Ft,Ml=[];function am(r,e,t=0){const i=e.itemSize;if(r.isInterleavedBufferAttribute||r.array.constructor!==e.array.constructor){const n=r.count;for(let s=0;s<n;s++)for(let a=0;a<i;a++)e.setComponent(s+t,a,r.getComponent(s,a))}else e.array.set(r.array,t*i);e.needsUpdate=!0}class Zu extends Ft{get maxGeometryCount(){return this._maxGeometryCount}constructor(e,t,i=2*t,n){super(new Ye,n),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._drawRanges=[],this._reservedRanges=[],this._visibility=[],this._active=[],this._bounds=[],this._maxGeometryCount=e,this._maxVertexCount=t,this._maxIndexCount=i,this._geometryInitialized=!1,this._geometryCount=0,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._visibilityChanged=!0,this._matricesTexture=null,this._initMatricesTexture()}_initMatricesTexture(){let e=Math.sqrt(4*this._maxGeometryCount);e=4*Math.ceil(e/4),e=Math.max(e,4);const t=new Float32Array(e*e*4),i=new hs(t,e,e,1023,1015);this._matricesTexture=i}_initializeGeometry(e){const t=this.geometry,i=this._maxVertexCount,n=this._maxGeometryCount,s=this._maxIndexCount;if(this._geometryInitialized===!1){for(const o in e.attributes){const l=e.getAttribute(o),{array:c,itemSize:h,normalized:d}=l,p=new c.constructor(i*h),m=new l.constructor(p,h,d);m.setUsage(l.usage),t.setAttribute(o,m)}if(e.getIndex()!==null){const o=i>65536?new Uint32Array(s):new Uint16Array(s);t.setIndex(new mt(o,1))}const a=n>65536?new Uint32Array(i):new Uint16Array(i);t.setAttribute(ya,new mt(a,1)),this._geometryInitialized=!0}}_validateGeometry(e){if(e.getAttribute(ya))throw new Error(`BatchedMesh: Geometry cannot use attribute "${ya}"`);const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const i in t.attributes){if(i===ya)continue;if(!e.hasAttribute(i))throw new Error(`BatchedMesh: Added geometry missing "${i}". All geometries must have consistent attributes.`);const n=e.getAttribute(i),s=t.getAttribute(i);if(n.itemSize!==s.itemSize||n.normalized!==s.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Jt);const e=this._geometryCount,t=this.boundingBox,i=this._active;t.makeEmpty();for(let n=0;n<e;n++)i[n]!==!1&&(this.getMatrixAt(n,wr),this.getBoundingBoxAt(n,bl).applyMatrix4(wr),t.union(bl))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Wt);const e=this._geometryCount,t=this.boundingSphere,i=this._active;t.makeEmpty();for(let n=0;n<e;n++)i[n]!==!1&&(this.getMatrixAt(n,wr),this.getBoundingSphereAt(n,us).applyMatrix4(wr),t.union(us))}addGeometry(e,t=-1,i=-1){if(this._initializeGeometry(e),this._validateGeometry(e),this._geometryCount>=this._maxGeometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");const n={vertexStart:-1,vertexCount:-1,indexStart:-1,indexCount:-1};let s=null;const a=this._reservedRanges,o=this._drawRanges,l=this._bounds;this._geometryCount!==0&&(s=a[a.length-1]),n.vertexCount=t===-1?e.getAttribute("position").count:t,n.vertexStart=s===null?0:s.vertexStart+s.vertexCount;const c=e.getIndex(),h=c!==null;if(h&&(n.indexCount=i===-1?c.count:i,n.indexStart=s===null?0:s.indexStart+s.indexCount),n.indexStart!==-1&&n.indexStart+n.indexCount>this._maxIndexCount||n.vertexStart+n.vertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");const d=this._visibility,p=this._active,m=this._matricesTexture,f=this._matricesTexture.image.data;d.push(!0),p.push(!0);const v=this._geometryCount;this._geometryCount++,sm.toArray(f,16*v),m.needsUpdate=!0,a.push(n),o.push({start:h?n.indexStart:n.vertexStart,count:-1}),l.push({boxInitialized:!1,box:new Jt,sphereInitialized:!1,sphere:new Wt});const g=this.geometry.getAttribute(ya);for(let M=0;M<n.vertexCount;M++)g.setX(n.vertexStart+M,v);return g.needsUpdate=!0,this.setGeometryAt(v,e),v}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const i=this.geometry,n=i.getIndex()!==null,s=i.getIndex(),a=t.getIndex(),o=this._reservedRanges[e];if(n&&a.count>o.indexCount||t.attributes.position.count>o.vertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const l=o.vertexStart,c=o.vertexCount;for(const m in i.attributes){if(m===ya)continue;const f=t.getAttribute(m),v=i.getAttribute(m);am(f,v,l);const g=f.itemSize;for(let M=f.count,y=c;M<y;M++){const x=l+M;for(let T=0;T<g;T++)v.setComponent(x,T,0)}v.needsUpdate=!0}if(n){const m=o.indexStart;for(let f=0;f<a.count;f++)s.setX(m+f,l+a.getX(f));for(let f=a.count,v=o.indexCount;f<v;f++)s.setX(m+f,l);s.needsUpdate=!0}const h=this._bounds[e];t.boundingBox!==null?(h.box.copy(t.boundingBox),h.boxInitialized=!0):h.boxInitialized=!1,t.boundingSphere!==null?(h.sphere.copy(t.boundingSphere),h.sphereInitialized=!0):h.sphereInitialized=!1;const d=this._drawRanges[e],p=t.getAttribute("position");return d.count=n?a.count:p.count,this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._active;return e>=t.length||t[e]===!1||(t[e]=!1,this._visibilityChanged=!0),this}getBoundingBoxAt(e,t){if(this._active[e]===!1)return this;const i=this._bounds[e],n=i.box,s=this.geometry;if(i.boxInitialized===!1){n.makeEmpty();const a=s.index,o=s.attributes.position,l=this._drawRanges[e];for(let c=l.start,h=l.start+l.count;c<h;c++){let d=c;a&&(d=a.getX(d)),n.expandByPoint(lo.fromBufferAttribute(o,d))}i.boxInitialized=!0}return t.copy(n),t}getBoundingSphereAt(e,t){if(this._active[e]===!1)return this;const i=this._bounds[e],n=i.sphere,s=this.geometry;if(i.sphereInitialized===!1){n.makeEmpty(),this.getBoundingBoxAt(e,bl),bl.getCenter(n.center);const a=s.index,o=s.attributes.position,l=this._drawRanges[e];let c=0;for(let h=l.start,d=l.start+l.count;h<d;h++){let p=h;a&&(p=a.getX(p)),lo.fromBufferAttribute(o,p),c=Math.max(c,n.center.distanceToSquared(lo))}n.radius=Math.sqrt(c),i.sphereInitialized=!0}return t.copy(n),t}setMatrixAt(e,t){const i=this._active,n=this._matricesTexture,s=this._matricesTexture.image.data;return e>=this._geometryCount||i[e]===!1||(t.toArray(s,16*e),n.needsUpdate=!0),this}getMatrixAt(e,t){const i=this._active,n=this._matricesTexture.image.data;return e>=this._geometryCount||i[e]===!1?null:t.fromArray(n,16*e)}setVisibleAt(e,t){const i=this._visibility,n=this._active;return e>=this._geometryCount||n[e]===!1||i[e]===t||(i[e]=t,this._visibilityChanged=!0),this}getVisibleAt(e){const t=this._visibility,i=this._active;return!(e>=this._geometryCount||i[e]===!1)&&t[e]}raycast(e,t){const i=this._visibility,n=this._active,s=this._drawRanges,a=this._geometryCount,o=this.matrixWorld,l=this.geometry;oi.material=this.material,oi.geometry.index=l.index,oi.geometry.attributes=l.attributes,oi.geometry.boundingBox===null&&(oi.geometry.boundingBox=new Jt),oi.geometry.boundingSphere===null&&(oi.geometry.boundingSphere=new Wt);for(let c=0;c<a;c++){if(!i[c]||!n[c])continue;const h=s[c];oi.geometry.setDrawRange(h.start,h.count),this.getMatrixAt(c,oi.matrixWorld).premultiply(o),this.getBoundingBoxAt(c,oi.geometry.boundingBox),this.getBoundingSphereAt(c,oi.geometry.boundingSphere),oi.raycast(e,Ml);for(let d=0,p=Ml.length;d<p;d++){const m=Ml[d];m.object=this,m.batchId=c,t.push(m)}Ml.length=0}oi.material=null,oi.geometry.index=null,oi.geometry.attributes={},oi.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._drawRanges=e._drawRanges.map(t=>({...t})),this._reservedRanges=e._reservedRanges.map(t=>({...t})),this._visibility=e._visibility.slice(),this._active=e._active.slice(),this._bounds=e._bounds.map(t=>({boxInitialized:t.boxInitialized,box:t.box.clone(),sphereInitialized:t.sphereInitialized,sphere:t.sphere.clone()})),this._maxGeometryCount=e._maxGeometryCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.slice(),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this}onBeforeRender(e,t,i,n,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const a=n.getIndex(),o=a===null?1:a.array.BYTES_PER_ELEMENT,l=this._visibility,c=this._multiDrawStarts,h=this._multiDrawCounts,d=this._drawRanges,p=this.perObjectFrustumCulled;p&&(Yu.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse).multiply(this.matrixWorld),lh.setFromProjectionMatrix(Yu,e.isWebGPURenderer?2001:2e3));let m=0;if(this.sortObjects){qu.copy(this.matrixWorld).invert(),lo.setFromMatrixPosition(i.matrixWorld).applyMatrix4(qu);for(let g=0,M=l.length;g<M;g++)if(l[g]){this.getMatrixAt(g,wr),this.getBoundingSphereAt(g,us).applyMatrix4(wr);let y=!1;if(p&&(y=!lh.intersectsSphere(us)),!y){const x=lo.distanceTo(us.center);ch.push(d[g],x)}}const f=ch.list,v=this.customSort;v===null?f.sort(s.transparent?nm:im):v.call(this,f,i);for(let g=0,M=f.length;g<M;g++){const y=f[g];c[m]=y.start*o,h[m]=y.count,m++}ch.reset()}else for(let f=0,v=l.length;f<v;f++)if(l[f]){let g=!1;if(p&&(this.getMatrixAt(f,wr),this.getBoundingSphereAt(f,us).applyMatrix4(wr),g=!lh.intersectsSphere(us)),!g){const M=d[f];c[m]=M.start*o,h[m]=M.count,m++}}this._multiDrawCount=m,this._visibilityChanged=!1}onBeforeShadow(e,t,i,n,s,a){this.onBeforeRender(e,null,n,s,a)}}class gi extends qt{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new be(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Ju=new R,$u=new R,Ku=new Ue,hh=new Tn,Sl=new Wt;class Er extends Xe{constructor(e=new Ye,t=new gi){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[0];for(let n=1,s=t.count;n<s;n++)Ju.fromBufferAttribute(t,n-1),$u.fromBufferAttribute(t,n),i[n]=i[n-1],i[n]+=Ju.distanceTo($u);e.setAttribute("lineDistance",new Ee(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,s=e.params.Line.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Sl.copy(i.boundingSphere),Sl.applyMatrix4(n),Sl.radius+=s,e.ray.intersectsSphere(Sl)===!1)return;Ku.copy(n).invert(),hh.copy(e.ray).applyMatrix4(Ku);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=new R,h=new R,d=new R,p=new R,m=this.isLineSegments?2:1,f=i.index,v=i.attributes.position;if(f!==null)for(let g=Math.max(0,a.start),M=Math.min(f.count,a.start+a.count)-1;g<M;g+=m){const y=f.getX(g),x=f.getX(g+1);if(c.fromBufferAttribute(v,y),h.fromBufferAttribute(v,x),hh.distanceSqToSegment(c,h,p,d)>l)continue;p.applyMatrix4(this.matrixWorld);const T=e.ray.origin.distanceTo(p);T<e.near||T>e.far||t.push({distance:T,point:d.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this})}else for(let g=Math.max(0,a.start),M=Math.min(v.count,a.start+a.count)-1;g<M;g+=m){if(c.fromBufferAttribute(v,g),h.fromBufferAttribute(v,g+1),hh.distanceSqToSegment(c,h,p,d)>l)continue;p.applyMatrix4(this.matrixWorld);const y=e.ray.origin.distanceTo(p);y<e.near||y>e.far||t.push({distance:y,point:d.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this})}}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const i=e[t[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,s=i.length;n<s;n++){const a=i[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=n}}}}}const Qu=new R,ed=new R;class Dn extends Er{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[];for(let n=0,s=t.count;n<s;n+=2)Qu.fromBufferAttribute(t,n),ed.fromBufferAttribute(t,n+1),i[n]=n===0?0:i[n-1],i[n+1]=i[n]+Qu.distanceTo(ed);e.setAttribute("lineDistance",new Ee(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class td extends Er{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class uh extends qt{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new be(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const id=new Ue,dh=new Tn,wl=new Wt,El=new R;class nd extends Xe{constructor(e=new Ye,t=new uh){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,s=e.params.Points.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),wl.copy(i.boundingSphere),wl.applyMatrix4(n),wl.radius+=s,e.ray.intersectsSphere(wl)===!1)return;id.copy(n).invert(),dh.copy(e.ray).applyMatrix4(id);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=i.index,h=i.attributes.position;if(c!==null)for(let d=Math.max(0,a.start),p=Math.min(c.count,a.start+a.count);d<p;d++){const m=c.getX(d);El.fromBufferAttribute(h,m),rd(El,m,l,n,e,t,this)}else for(let d=Math.max(0,a.start),p=Math.min(h.count,a.start+a.count);d<p;d++)El.fromBufferAttribute(h,d),rd(El,d,l,n,e,t,this)}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const i=e[t[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,s=i.length;n<s;n++){const a=i[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=n}}}}}function rd(r,e,t,i,n,s,a){const o=dh.distanceSqToPoint(r);if(o<t){const l=new R;dh.closestPointToPoint(r,l),l.applyMatrix4(i);const c=n.ray.origin.distanceTo(l);if(c<n.near||c>n.far)return;s.push({distance:c,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,object:a})}}class Tl extends St{constructor(e,t,i,n,s,a,o,l,c,h,d,p){super(null,a,o,l,c,h,n,s,d,p),this.isCompressedTexture=!0,this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class pn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,n=this.getPoint(0),s=0;t.push(0);for(let a=1;a<=e;a++)i=this.getPoint(a/e),s+=i.distanceTo(n),t.push(s),n=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const i=this.getLengths();let n=0;const s=i.length;let a;a=t||e*i[s-1];let o,l=0,c=s-1;for(;l<=c;)if(n=Math.floor(l+(c-l)/2),o=i[n]-a,o<0)l=n+1;else{if(!(o>0)){c=n;break}c=n-1}if(n=c,i[n]===a)return n/(s-1);const h=i[n];return(n+(a-h)/(i[n+1]-h))/(s-1)}getTangent(e,t){let n=e-1e-4,s=e+1e-4;n<0&&(n=0),s>1&&(s=1);const a=this.getPoint(n),o=this.getPoint(s),l=t||(a.isVector2?new te:new R);return l.copy(o).sub(a).normalize(),l}getTangentAt(e,t){const i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t){const i=new R,n=[],s=[],a=[],o=new R,l=new Ue;for(let m=0;m<=e;m++){const f=m/e;n[m]=this.getTangentAt(f,new R)}s[0]=new R,a[0]=new R;let c=Number.MAX_VALUE;const h=Math.abs(n[0].x),d=Math.abs(n[0].y),p=Math.abs(n[0].z);h<=c&&(c=h,i.set(1,0,0)),d<=c&&(c=d,i.set(0,1,0)),p<=c&&i.set(0,0,1),o.crossVectors(n[0],i).normalize(),s[0].crossVectors(n[0],o),a[0].crossVectors(n[0],s[0]);for(let m=1;m<=e;m++){if(s[m]=s[m-1].clone(),a[m]=a[m-1].clone(),o.crossVectors(n[m-1],n[m]),o.length()>Number.EPSILON){o.normalize();const f=Math.acos(Mt(n[m-1].dot(n[m]),-1,1));s[m].applyMatrix4(l.makeRotationAxis(o,f))}a[m].crossVectors(n[m],s[m])}if(t===!0){let m=Math.acos(Mt(s[0].dot(s[e]),-1,1));m/=e,n[0].dot(o.crossVectors(s[0],s[e]))>0&&(m=-m);for(let f=1;f<=e;f++)s[f].applyMatrix4(l.makeRotationAxis(n[f],m*f)),a[f].crossVectors(n[f],s[f])}return{tangents:n,normals:s,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Al extends pn{constructor(e=0,t=0,i=1,n=1,s=0,a=2*Math.PI,o=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=n,this.aStartAngle=s,this.aEndAngle=a,this.aClockwise=o,this.aRotation=l}getPoint(e,t){const i=t||new te,n=2*Math.PI;let s=this.aEndAngle-this.aStartAngle;const a=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=n;for(;s>n;)s-=n;s<Number.EPSILON&&(s=a?0:n),this.aClockwise!==!0||a||(s===n?s=-n:s-=n);const o=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const h=Math.cos(this.aRotation),d=Math.sin(this.aRotation),p=l-this.aX,m=c-this.aY;l=p*h-m*d+this.aX,c=p*d+m*h+this.aY}return i.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class sd extends Al{constructor(e,t,i,n,s,a){super(e,t,i,i,n,s,a),this.isArcCurve=!0,this.type="ArcCurve"}}function ph(){let r=0,e=0,t=0,i=0;function n(s,a,o,l){r=s,e=o,t=-3*s+3*a-2*o-l,i=2*s-2*a+o+l}return{initCatmullRom:function(s,a,o,l,c){n(a,o,c*(o-s),c*(l-a))},initNonuniformCatmullRom:function(s,a,o,l,c,h,d){let p=(a-s)/c-(o-s)/(c+h)+(o-a)/h,m=(o-a)/h-(l-a)/(h+d)+(l-o)/d;p*=h,m*=h,n(a,o,p,m)},calc:function(s){const a=s*s;return r+e*s+t*a+i*(a*s)}}}const Cl=new R,mh=new ph,fh=new ph,gh=new ph;class ad extends pn{constructor(e=[],t=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=n}getPoint(e,t=new R){const i=t,n=this.points,s=n.length,a=(s-(this.closed?0:1))*e;let o,l,c=Math.floor(a),h=a-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:h===0&&c===s-1&&(c=s-2,h=1),this.closed||c>0?o=n[(c-1)%s]:(Cl.subVectors(n[0],n[1]).add(n[0]),o=Cl);const d=n[c%s],p=n[(c+1)%s];if(this.closed||c+2<s?l=n[(c+2)%s]:(Cl.subVectors(n[s-1],n[s-2]).add(n[s-1]),l=Cl),this.curveType==="centripetal"||this.curveType==="chordal"){const m=this.curveType==="chordal"?.5:.25;let f=Math.pow(o.distanceToSquared(d),m),v=Math.pow(d.distanceToSquared(p),m),g=Math.pow(p.distanceToSquared(l),m);v<1e-4&&(v=1),f<1e-4&&(f=v),g<1e-4&&(g=v),mh.initNonuniformCatmullRom(o.x,d.x,p.x,l.x,f,v,g),fh.initNonuniformCatmullRom(o.y,d.y,p.y,l.y,f,v,g),gh.initNonuniformCatmullRom(o.z,d.z,p.z,l.z,f,v,g)}else this.curveType==="catmullrom"&&(mh.initCatmullRom(o.x,d.x,p.x,l.x,this.tension),fh.initCatmullRom(o.y,d.y,p.y,l.y,this.tension),gh.initCatmullRom(o.z,d.z,p.z,l.z,this.tension));return i.set(mh.calc(h),fh.calc(h),gh.calc(h)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(new R().fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function od(r,e,t,i,n){const s=.5*(i-e),a=.5*(n-t),o=r*r;return(2*t-2*i+s+a)*(r*o)+(-3*t+3*i-2*s-a)*o+s*r+t}function co(r,e,t,i){return function(n,s){const a=1-n;return a*a*s}(r,e)+function(n,s){return 2*(1-n)*n*s}(r,t)+function(n,s){return n*n*s}(r,i)}function ho(r,e,t,i,n){return function(s,a){const o=1-s;return o*o*o*a}(r,e)+function(s,a){const o=1-s;return 3*o*o*s*a}(r,t)+function(s,a){return 3*(1-s)*s*s*a}(r,i)+function(s,a){return s*s*s*a}(r,n)}class _h extends pn{constructor(e=new te,t=new te,i=new te,n=new te){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new te){const i=t,n=this.v0,s=this.v1,a=this.v2,o=this.v3;return i.set(ho(e,n.x,s.x,a.x,o.x),ho(e,n.y,s.y,a.y,o.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ld extends pn{constructor(e=new R,t=new R,i=new R,n=new R){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new R){const i=t,n=this.v0,s=this.v1,a=this.v2,o=this.v3;return i.set(ho(e,n.x,s.x,a.x,o.x),ho(e,n.y,s.y,a.y,o.y),ho(e,n.z,s.z,a.z,o.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class vh extends pn{constructor(e=new te,t=new te){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new te){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new te){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class cd extends pn{constructor(e=new R,t=new R){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new R){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new R){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class yh extends pn{constructor(e=new te,t=new te,i=new te){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new te){const i=t,n=this.v0,s=this.v1,a=this.v2;return i.set(co(e,n.x,s.x,a.x),co(e,n.y,s.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class xh extends pn{constructor(e=new R,t=new R,i=new R){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new R){const i=t,n=this.v0,s=this.v1,a=this.v2;return i.set(co(e,n.x,s.x,a.x),co(e,n.y,s.y,a.y),co(e,n.z,s.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class bh extends pn{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new te){const i=t,n=this.points,s=(n.length-1)*e,a=Math.floor(s),o=s-a,l=n[a===0?a:a-1],c=n[a],h=n[a>n.length-2?n.length-1:a+1],d=n[a>n.length-3?n.length-1:a+2];return i.set(od(o,l.x,c.x,h.x,d.x),od(o,l.y,c.y,h.y,d.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(new te().fromArray(n))}return this}}var Rl=Object.freeze({__proto__:null,ArcCurve:sd,CatmullRomCurve3:ad,CubicBezierCurve:_h,CubicBezierCurve3:ld,EllipseCurve:Al,LineCurve:vh,LineCurve3:cd,QuadraticBezierCurve:yh,QuadraticBezierCurve3:xh,SplineCurve:bh});class hd extends pn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const i=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Rl[i](t,e))}return this}getPoint(e,t){const i=e*this.getLength(),n=this.getCurveLengths();let s=0;for(;s<n.length;){if(n[s]>=i){const a=n[s]-i,o=this.curves[s],l=o.getLength(),c=l===0?0:1-a/l;return o.getPointAt(c,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let i=0,n=this.curves.length;i<n;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let i;for(let n=0,s=this.curves;n<s.length;n++){const a=s[n],o=a.isEllipseCurve?2*e:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,l=a.getPoints(o);for(let c=0;c<l.length;c++){const h=l[c];i&&i.equals(h)||(t.push(h),i=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){const n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const n=e.curves[t];this.curves.push(new Rl[n.type]().fromJSON(n))}return this}}class uo extends hd{constructor(e){super(),this.type="Path",this.currentPoint=new te,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const i=new vh(this.currentPoint.clone(),new te(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,n){const s=new yh(this.currentPoint.clone(),new te(e,t),new te(i,n));return this.curves.push(s),this.currentPoint.set(i,n),this}bezierCurveTo(e,t,i,n,s,a){const o=new _h(this.currentPoint.clone(),new te(e,t),new te(i,n),new te(s,a));return this.curves.push(o),this.currentPoint.set(s,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),i=new bh(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,n,s,a){const o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+o,t+l,i,n,s,a),this}absarc(e,t,i,n,s,a){return this.absellipse(e,t,i,i,n,s,a),this}ellipse(e,t,i,n,s,a,o,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+c,t+h,i,n,s,a,o,l),this}absellipse(e,t,i,n,s,a,o,l){const c=new Al(e,t,i,n,s,a,o,l);if(this.curves.length>0){const d=c.getPoint(0);d.equals(this.currentPoint)||this.lineTo(d.x,d.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class po extends Ye{constructor(e=[new te(0,-.5),new te(.5,0),new te(0,.5)],t=12,i=0,n=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:n},t=Math.floor(t),n=Mt(n,0,2*Math.PI);const s=[],a=[],o=[],l=[],c=[],h=1/t,d=new R,p=new te,m=new R,f=new R,v=new R;let g=0,M=0;for(let y=0;y<=e.length-1;y++)switch(y){case 0:g=e[y+1].x-e[y].x,M=e[y+1].y-e[y].y,m.x=1*M,m.y=-g,m.z=0*M,v.copy(m),m.normalize(),l.push(m.x,m.y,m.z);break;case e.length-1:l.push(v.x,v.y,v.z);break;default:g=e[y+1].x-e[y].x,M=e[y+1].y-e[y].y,m.x=1*M,m.y=-g,m.z=0*M,f.copy(m),m.x+=v.x,m.y+=v.y,m.z+=v.z,m.normalize(),l.push(m.x,m.y,m.z),v.copy(f)}for(let y=0;y<=t;y++){const x=i+y*h*n,T=Math.sin(x),A=Math.cos(x);for(let C=0;C<=e.length-1;C++){d.x=e[C].x*T,d.y=e[C].y,d.z=e[C].x*A,a.push(d.x,d.y,d.z),p.x=y/t,p.y=C/(e.length-1),o.push(p.x,p.y);const D=l[3*C+0]*T,V=l[3*C+1],k=l[3*C+0]*A;c.push(D,V,k)}}for(let y=0;y<t;y++)for(let x=0;x<e.length-1;x++){const T=x+y*e.length,A=T,C=T+e.length,D=T+e.length+1,V=T+1;s.push(A,C,V),s.push(D,V,C)}this.setIndex(s),this.setAttribute("position",new Ee(a,3)),this.setAttribute("uv",new Ee(o,2)),this.setAttribute("normal",new Ee(c,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new po(e.points,e.segments,e.phiStart,e.phiLength)}}class Ll extends po{constructor(e=1,t=1,i=4,n=8){const s=new uo;s.absarc(0,-t/2,e,1.5*Math.PI,0),s.absarc(0,t/2,e,0,.5*Math.PI),super(s.getPoints(i),n),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:i,radialSegments:n}}static fromJSON(e){return new Ll(e.radius,e.length,e.capSegments,e.radialSegments)}}class Pl extends Ye{constructor(e=1,t=32,i=0,n=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:n},t=Math.max(3,t);const s=[],a=[],o=[],l=[],c=new R,h=new te;a.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let d=0,p=3;d<=t;d++,p+=3){const m=i+d/t*n;c.x=e*Math.cos(m),c.y=e*Math.sin(m),a.push(c.x,c.y,c.z),o.push(0,0,1),h.x=(a[p]/e+1)/2,h.y=(a[p+1]/e+1)/2,l.push(h.x,h.y)}for(let d=1;d<=t;d++)s.push(d,d+1,0);this.setIndex(s),this.setAttribute("position",new Ee(a,3)),this.setAttribute("normal",new Ee(o,3)),this.setAttribute("uv",new Ee(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Pl(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class xa extends Ye{constructor(e=1,t=1,i=1,n=32,s=1,a=!1,o=0,l=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:s,openEnded:a,thetaStart:o,thetaLength:l};const c=this;n=Math.floor(n),s=Math.floor(s);const h=[],d=[],p=[],m=[];let f=0;const v=[],g=i/2;let M=0;function y(x){const T=f,A=new te,C=new R;let D=0;const V=x===!0?e:t,k=x===!0?1:-1;for(let z=1;z<=n;z++)d.push(0,g*k,0),p.push(0,k,0),m.push(.5,.5),f++;const K=f;for(let z=0;z<=n;z++){const O=z/n*l+o,se=Math.cos(O),oe=Math.sin(O);C.x=V*oe,C.y=g*k,C.z=V*se,d.push(C.x,C.y,C.z),p.push(0,k,0),A.x=.5*se+.5,A.y=.5*oe*k+.5,m.push(A.x,A.y),f++}for(let z=0;z<n;z++){const O=T+z,se=K+z;x===!0?h.push(se,se+1,O):h.push(se+1,se,O),D+=3}c.addGroup(M,D,x===!0?1:2),M+=D}(function(){const x=new R,T=new R;let A=0;const C=(t-e)/i;for(let D=0;D<=s;D++){const V=[],k=D/s,K=k*(t-e)+e;for(let z=0;z<=n;z++){const O=z/n,se=O*l+o,oe=Math.sin(se),_e=Math.cos(se);T.x=K*oe,T.y=-k*i+g,T.z=K*_e,d.push(T.x,T.y,T.z),x.set(oe,C,_e).normalize(),p.push(x.x,x.y,x.z),m.push(O,1-k),V.push(f++)}v.push(V)}for(let D=0;D<n;D++)for(let V=0;V<s;V++){const k=v[V][D],K=v[V+1][D],z=v[V+1][D+1],O=v[V][D+1];h.push(k,K,O),h.push(K,z,O),A+=6}c.addGroup(M,A,0),M+=A})(),a===!1&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(h),this.setAttribute("position",new Ee(d,3)),this.setAttribute("normal",new Ee(p,3)),this.setAttribute("uv",new Ee(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new xa(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Il extends xa{constructor(e=1,t=1,i=32,n=1,s=!1,a=0,o=2*Math.PI){super(0,e,t,i,n,s,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:s,thetaStart:a,thetaLength:o}}static fromJSON(e){return new Il(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Tr extends Ye{constructor(e=[],t=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n};const s=[],a=[];function o(p,m,f,v){const g=v+1,M=[];for(let y=0;y<=g;y++){M[y]=[];const x=p.clone().lerp(f,y/g),T=m.clone().lerp(f,y/g),A=g-y;for(let C=0;C<=A;C++)M[y][C]=C===0&&y===g?x:x.clone().lerp(T,C/A)}for(let y=0;y<g;y++)for(let x=0;x<2*(g-y)-1;x++){const T=Math.floor(x/2);x%2==0?(l(M[y][T+1]),l(M[y+1][T]),l(M[y][T])):(l(M[y][T+1]),l(M[y+1][T+1]),l(M[y+1][T]))}}function l(p){s.push(p.x,p.y,p.z)}function c(p,m){const f=3*p;m.x=e[f+0],m.y=e[f+1],m.z=e[f+2]}function h(p,m,f,v){v<0&&p.x===1&&(a[m]=p.x-1),f.x===0&&f.z===0&&(a[m]=v/2/Math.PI+.5)}function d(p){return Math.atan2(p.z,-p.x)}(function(p){const m=new R,f=new R,v=new R;for(let g=0;g<t.length;g+=3)c(t[g+0],m),c(t[g+1],f),c(t[g+2],v),o(m,f,v,p)})(n),function(p){const m=new R;for(let f=0;f<s.length;f+=3)m.x=s[f+0],m.y=s[f+1],m.z=s[f+2],m.normalize().multiplyScalar(p),s[f+0]=m.x,s[f+1]=m.y,s[f+2]=m.z}(i),function(){const p=new R;for(let f=0;f<s.length;f+=3){p.x=s[f+0],p.y=s[f+1],p.z=s[f+2];const v=d(p)/2/Math.PI+.5,g=(m=p,Math.atan2(-m.y,Math.sqrt(m.x*m.x+m.z*m.z))/Math.PI+.5);a.push(v,1-g)}var m;(function(){const f=new R,v=new R,g=new R,M=new R,y=new te,x=new te,T=new te;for(let A=0,C=0;A<s.length;A+=9,C+=6){f.set(s[A+0],s[A+1],s[A+2]),v.set(s[A+3],s[A+4],s[A+5]),g.set(s[A+6],s[A+7],s[A+8]),y.set(a[C+0],a[C+1]),x.set(a[C+2],a[C+3]),T.set(a[C+4],a[C+5]),M.copy(f).add(v).add(g).divideScalar(3);const D=d(M);h(y,C+0,f,D),h(x,C+2,v,D),h(T,C+4,g,D)}})(),function(){for(let f=0;f<a.length;f+=6){const v=a[f+0],g=a[f+2],M=a[f+4],y=Math.max(v,g,M),x=Math.min(v,g,M);y>.9&&x<.1&&(v<.2&&(a[f+0]+=1),g<.2&&(a[f+2]+=1),M<.2&&(a[f+4]+=1))}}()}(),this.setAttribute("position",new Ee(s,3)),this.setAttribute("normal",new Ee(s.slice(),3)),this.setAttribute("uv",new Ee(a,2)),n===0?this.computeVertexNormals():this.normalizeNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Tr(e.vertices,e.indices,e.radius,e.details)}}class Dl extends Tr{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,n=1/i;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Dl(e.radius,e.detail)}}const Ul=new R,Nl=new R,Mh=new R,Ol=new ni;class ud extends Ye{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const n=Math.pow(10,4),s=Math.cos(Mn*t),a=e.getIndex(),o=e.getAttribute("position"),l=a?a.count:o.count,c=[0,0,0],h=["a","b","c"],d=new Array(3),p={},m=[];for(let f=0;f<l;f+=3){a?(c[0]=a.getX(f),c[1]=a.getX(f+1),c[2]=a.getX(f+2)):(c[0]=f,c[1]=f+1,c[2]=f+2);const{a:v,b:g,c:M}=Ol;if(v.fromBufferAttribute(o,c[0]),g.fromBufferAttribute(o,c[1]),M.fromBufferAttribute(o,c[2]),Ol.getNormal(Mh),d[0]=`${Math.round(v.x*n)},${Math.round(v.y*n)},${Math.round(v.z*n)}`,d[1]=`${Math.round(g.x*n)},${Math.round(g.y*n)},${Math.round(g.z*n)}`,d[2]=`${Math.round(M.x*n)},${Math.round(M.y*n)},${Math.round(M.z*n)}`,d[0]!==d[1]&&d[1]!==d[2]&&d[2]!==d[0])for(let y=0;y<3;y++){const x=(y+1)%3,T=d[y],A=d[x],C=Ol[h[y]],D=Ol[h[x]],V=`${T}_${A}`,k=`${A}_${T}`;k in p&&p[k]?(Mh.dot(p[k].normal)<=s&&(m.push(C.x,C.y,C.z),m.push(D.x,D.y,D.z)),p[k]=null):V in p||(p[V]={index0:c[y],index1:c[x],normal:Mh.clone()})}}for(const f in p)if(p[f]){const{index0:v,index1:g}=p[f];Ul.fromBufferAttribute(o,v),Nl.fromBufferAttribute(o,g),m.push(Ul.x,Ul.y,Ul.z),m.push(Nl.x,Nl.y,Nl.z)}this.setAttribute("position",new Ee(m,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class ds extends uo{constructor(e){super(e),this.uuid=ti(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let i=0,n=this.holes.length;i<n;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){const n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const n=e.holes[t];this.holes.push(new uo().fromJSON(n))}return this}}const om=function(r,e,t=2){const i=e&&e.length,n=i?e[0]*t:r.length;let s=dd(r,0,n,t,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,c,h,d,p,m;if(i&&(s=function(f,v,g,M){const y=[];let x,T,A,C,D;for(x=0,T=v.length;x<T;x++)A=v[x]*M,C=x<T-1?v[x+1]*M:f.length,D=dd(f,A,C,M,!1),D===D.next&&(D.steiner=!0),y.push(fm(D));for(y.sort(dm),x=0;x<y.length;x++)g=pm(y[x],g);return g}(r,e,s,t)),r.length>80*t){o=c=r[0],l=h=r[1];for(let f=t;f<n;f+=t)d=r[f],p=r[f+1],d<o&&(o=d),p<l&&(l=p),d>c&&(c=d),p>h&&(h=p);m=Math.max(c-o,h-l),m=m!==0?32767/m:0}return mo(s,a,t,o,l,m,0),a};function dd(r,e,t,i,n){let s,a;if(n===function(o,l,c,h){let d=0;for(let p=l,m=c-h;p<c;p+=h)d+=(o[m]-o[p])*(o[p+1]+o[m+1]),m=p;return d}(r,e,t,i)>0)for(s=e;s<t;s+=i)a=fd(s,r[s],r[s+1],a);else for(s=t-i;s>=e;s-=i)a=fd(s,r[s],r[s+1],a);return a&&Fl(a,a.next)&&(go(a),a=a.next),a}function ps(r,e){if(!r)return r;e||(e=r);let t,i=r;do if(t=!1,i.steiner||!Fl(i,i.next)&&Ct(i.prev,i,i.next)!==0)i=i.next;else{if(go(i),i=e=i.prev,i===i.next)break;t=!0}while(t||i!==e);return e}function mo(r,e,t,i,n,s,a){if(!r)return;!a&&s&&function(h,d,p,m){let f=h;do f.z===0&&(f.z=Sh(f.x,f.y,d,p,m)),f.prevZ=f.prev,f.nextZ=f.next,f=f.next;while(f!==h);f.prevZ.nextZ=null,f.prevZ=null,function(v){let g,M,y,x,T,A,C,D,V=1;do{for(M=v,v=null,T=null,A=0;M;){for(A++,y=M,C=0,g=0;g<V&&(C++,y=y.nextZ,y);g++);for(D=V;C>0||D>0&&y;)C!==0&&(D===0||!y||M.z<=y.z)?(x=M,M=M.nextZ,C--):(x=y,y=y.nextZ,D--),T?T.nextZ=x:v=x,x.prevZ=T,T=x;M=y}T.nextZ=null,V*=2}while(A>1)}(f)}(r,i,n,s);let o,l,c=r;for(;r.prev!==r.next;)if(o=r.prev,l=r.next,s?cm(r,i,n,s):lm(r))e.push(o.i/t|0),e.push(r.i/t|0),e.push(l.i/t|0),go(r),r=l.next,c=l.next;else if((r=l)===c){a?a===1?mo(r=hm(ps(r),e,t),e,t,i,n,s,2):a===2&&um(r,e,t,i,n,s):mo(ps(r),e,t,i,n,s,1);break}}function lm(r){const e=r.prev,t=r,i=r.next;if(Ct(e,t,i)>=0)return!1;const n=e.x,s=t.x,a=i.x,o=e.y,l=t.y,c=i.y,h=n<s?n<a?n:a:s<a?s:a,d=o<l?o<c?o:c:l<c?l:c,p=n>s?n>a?n:a:s>a?s:a,m=o>l?o>c?o:c:l>c?l:c;let f=i.next;for(;f!==e;){if(f.x>=h&&f.x<=p&&f.y>=d&&f.y<=m&&ba(n,o,s,l,a,c,f.x,f.y)&&Ct(f.prev,f,f.next)>=0)return!1;f=f.next}return!0}function cm(r,e,t,i){const n=r.prev,s=r,a=r.next;if(Ct(n,s,a)>=0)return!1;const o=n.x,l=s.x,c=a.x,h=n.y,d=s.y,p=a.y,m=o<l?o<c?o:c:l<c?l:c,f=h<d?h<p?h:p:d<p?d:p,v=o>l?o>c?o:c:l>c?l:c,g=h>d?h>p?h:p:d>p?d:p,M=Sh(m,f,e,t,i),y=Sh(v,g,e,t,i);let x=r.prevZ,T=r.nextZ;for(;x&&x.z>=M&&T&&T.z<=y;){if(x.x>=m&&x.x<=v&&x.y>=f&&x.y<=g&&x!==n&&x!==a&&ba(o,h,l,d,c,p,x.x,x.y)&&Ct(x.prev,x,x.next)>=0||(x=x.prevZ,T.x>=m&&T.x<=v&&T.y>=f&&T.y<=g&&T!==n&&T!==a&&ba(o,h,l,d,c,p,T.x,T.y)&&Ct(T.prev,T,T.next)>=0))return!1;T=T.nextZ}for(;x&&x.z>=M;){if(x.x>=m&&x.x<=v&&x.y>=f&&x.y<=g&&x!==n&&x!==a&&ba(o,h,l,d,c,p,x.x,x.y)&&Ct(x.prev,x,x.next)>=0)return!1;x=x.prevZ}for(;T&&T.z<=y;){if(T.x>=m&&T.x<=v&&T.y>=f&&T.y<=g&&T!==n&&T!==a&&ba(o,h,l,d,c,p,T.x,T.y)&&Ct(T.prev,T,T.next)>=0)return!1;T=T.nextZ}return!0}function hm(r,e,t){let i=r;do{const n=i.prev,s=i.next.next;!Fl(n,s)&&pd(n,i,i.next,s)&&fo(n,s)&&fo(s,n)&&(e.push(n.i/t|0),e.push(i.i/t|0),e.push(s.i/t|0),go(i),go(i.next),i=r=s),i=i.next}while(i!==r);return ps(i)}function um(r,e,t,i,n,s){let a=r;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&gm(a,o)){let l=md(a,o);return a=ps(a,a.next),l=ps(l,l.next),mo(a,e,t,i,n,s,0),void mo(l,e,t,i,n,s,0)}o=o.next}a=a.next}while(a!==r)}function dm(r,e){return r.x-e.x}function pm(r,e){const t=function(n,s){let a,o=s,l=-1/0;const c=n.x,h=n.y;do{if(h<=o.y&&h>=o.next.y&&o.next.y!==o.y){const g=o.x+(h-o.y)*(o.next.x-o.x)/(o.next.y-o.y);if(g<=c&&g>l&&(l=g,a=o.x<o.next.x?o:o.next,g===c))return a}o=o.next}while(o!==s);if(!a)return null;const d=a,p=a.x,m=a.y;let f,v=1/0;o=a;do c>=o.x&&o.x>=p&&c!==o.x&&ba(h<m?c:l,h,p,m,h<m?l:c,h,o.x,o.y)&&(f=Math.abs(h-o.y)/(c-o.x),fo(o,n)&&(f<v||f===v&&(o.x>a.x||o.x===a.x&&mm(a,o)))&&(a=o,v=f)),o=o.next;while(o!==d);return a}(r,e);if(!t)return e;const i=md(t,r);return ps(i,i.next),ps(t,t.next)}function mm(r,e){return Ct(r.prev,r,e.prev)<0&&Ct(e.next,r,r.next)<0}function Sh(r,e,t,i,n){return(r=1431655765&((r=858993459&((r=252645135&((r=16711935&((r=(r-t)*n|0)|r<<8))|r<<4))|r<<2))|r<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-i)*n|0)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function fm(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function ba(r,e,t,i,n,s,a,o){return(n-a)*(e-o)>=(r-a)*(s-o)&&(r-a)*(i-o)>=(t-a)*(e-o)&&(t-a)*(s-o)>=(n-a)*(i-o)}function gm(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!function(t,i){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==i.i&&n.next.i!==i.i&&pd(n,n.next,t,i))return!0;n=n.next}while(n!==t);return!1}(r,e)&&(fo(r,e)&&fo(e,r)&&function(t,i){let n=t,s=!1;const a=(t.x+i.x)/2,o=(t.y+i.y)/2;do n.y>o!=n.next.y>o&&n.next.y!==n.y&&a<(n.next.x-n.x)*(o-n.y)/(n.next.y-n.y)+n.x&&(s=!s),n=n.next;while(n!==t);return s}(r,e)&&(Ct(r.prev,r,e.prev)||Ct(r,e.prev,e))||Fl(r,e)&&Ct(r.prev,r,r.next)>0&&Ct(e.prev,e,e.next)>0)}function Ct(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Fl(r,e){return r.x===e.x&&r.y===e.y}function pd(r,e,t,i){const n=zl(Ct(r,e,t)),s=zl(Ct(r,e,i)),a=zl(Ct(t,i,r)),o=zl(Ct(t,i,e));return n!==s&&a!==o||!(n!==0||!Bl(r,t,e))||!(s!==0||!Bl(r,i,e))||!(a!==0||!Bl(t,r,i))||!(o!==0||!Bl(t,e,i))}function Bl(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function zl(r){return r>0?1:r<0?-1:0}function fo(r,e){return Ct(r.prev,r,r.next)<0?Ct(r,e,r.next)>=0&&Ct(r,r.prev,e)>=0:Ct(r,e,r.prev)<0||Ct(r,r.next,e)<0}function md(r,e){const t=new wh(r.i,r.x,r.y),i=new wh(e.i,e.x,e.y),n=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=n,n.prev=t,i.next=t,t.prev=i,s.next=i,i.prev=s,i}function fd(r,e,t,i){const n=new wh(r,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function go(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function wh(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Un{static area(e){const t=e.length;let i=0;for(let n=t-1,s=0;s<t;n=s++)i+=e[n].x*e[s].y-e[s].x*e[n].y;return .5*i}static isClockWise(e){return Un.area(e)<0}static triangulateShape(e,t){const i=[],n=[],s=[];gd(e),_d(i,e);let a=e.length;t.forEach(gd);for(let l=0;l<t.length;l++)n.push(a),a+=t[l].length,_d(i,t[l]);const o=om(i,n);for(let l=0;l<o.length;l+=3)s.push(o.slice(l,l+3));return s}}function gd(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function _d(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class kl extends Ye{constructor(e=new ds([new te(.5,.5),new te(-.5,.5),new te(-.5,-.5),new te(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,n=[],s=[];for(let o=0,l=e.length;o<l;o++)a(e[o]);function a(o){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,h=t.steps!==void 0?t.steps:1,d=t.depth!==void 0?t.depth:1;let p=t.bevelEnabled===void 0||t.bevelEnabled,m=t.bevelThickness!==void 0?t.bevelThickness:.2,f=t.bevelSize!==void 0?t.bevelSize:m-.1,v=t.bevelOffset!==void 0?t.bevelOffset:0,g=t.bevelSegments!==void 0?t.bevelSegments:3;const M=t.extrudePath,y=t.UVGenerator!==void 0?t.UVGenerator:_m;let x,T,A,C,D,V=!1;M&&(x=M.getSpacedPoints(h),V=!0,p=!1,T=M.computeFrenetFrames(h,!1),A=new R,C=new R,D=new R),p||(g=0,m=0,f=0,v=0);const k=o.extractPoints(c);let K=k.shape;const z=k.holes;if(!Un.isClockWise(K)){K=K.reverse();for(let N=0,G=z.length;N<G;N++){const U=z[N];Un.isClockWise(U)&&(z[N]=U.reverse())}}const O=Un.triangulateShape(K,z),se=K;for(let N=0,G=z.length;N<G;N++){const U=z[N];K=K.concat(U)}function oe(N,G,U){return G||console.error("THREE.ExtrudeGeometry: vec does not exist"),N.clone().addScaledVector(G,U)}const _e=K.length,ve=O.length;function ee(N,G,U){let W,H,E;const X=N.x-G.x,q=N.y-G.y,ae=U.x-N.x,J=U.y-N.y,Ne=X*X+q*q,Te=X*J-q*ae;if(Math.abs(Te)>Number.EPSILON){const de=Math.sqrt(Ne),De=Math.sqrt(ae*ae+J*J),ye=G.x-q/de,Pe=G.y+X/de,ke=((U.x-J/De-ye)*J-(U.y+ae/De-Pe)*ae)/(X*J-q*ae);W=ye+X*ke-N.x,H=Pe+q*ke-N.y;const yt=W*W+H*H;if(yt<=2)return new te(W,H);E=Math.sqrt(yt/2)}else{let de=!1;X>Number.EPSILON?ae>Number.EPSILON&&(de=!0):X<-Number.EPSILON?ae<-Number.EPSILON&&(de=!0):Math.sign(q)===Math.sign(J)&&(de=!0),de?(W=-q,H=X,E=Math.sqrt(Ne)):(W=X,H=q,E=Math.sqrt(Ne/2))}return new te(W/E,H/E)}const le=[];for(let N=0,G=se.length,U=G-1,W=N+1;N<G;N++,U++,W++)U===G&&(U=0),W===G&&(W=0),le[N]=ee(se[N],se[U],se[W]);const ce=[];let Y,ie=le.concat();for(let N=0,G=z.length;N<G;N++){const U=z[N];Y=[];for(let W=0,H=U.length,E=H-1,X=W+1;W<H;W++,E++,X++)E===H&&(E=0),X===H&&(X=0),Y[W]=ee(U[W],U[E],U[X]);ce.push(Y),ie=ie.concat(Y)}for(let N=0;N<g;N++){const G=N/g,U=m*Math.cos(G*Math.PI/2),W=f*Math.sin(G*Math.PI/2)+v;for(let H=0,E=se.length;H<E;H++){const X=oe(se[H],le[H],W);Ae(X.x,X.y,-U)}for(let H=0,E=z.length;H<E;H++){const X=z[H];Y=ce[H];for(let q=0,ae=X.length;q<ae;q++){const J=oe(X[q],Y[q],W);Ae(J.x,J.y,-U)}}}const Se=f+v;for(let N=0;N<_e;N++){const G=p?oe(K[N],ie[N],Se):K[N];V?(C.copy(T.normals[0]).multiplyScalar(G.x),A.copy(T.binormals[0]).multiplyScalar(G.y),D.copy(x[0]).add(C).add(A),Ae(D.x,D.y,D.z)):Ae(G.x,G.y,0)}for(let N=1;N<=h;N++)for(let G=0;G<_e;G++){const U=p?oe(K[G],ie[G],Se):K[G];V?(C.copy(T.normals[N]).multiplyScalar(U.x),A.copy(T.binormals[N]).multiplyScalar(U.y),D.copy(x[N]).add(C).add(A),Ae(D.x,D.y,D.z)):Ae(U.x,U.y,d/h*N)}for(let N=g-1;N>=0;N--){const G=N/g,U=m*Math.cos(G*Math.PI/2),W=f*Math.sin(G*Math.PI/2)+v;for(let H=0,E=se.length;H<E;H++){const X=oe(se[H],le[H],W);Ae(X.x,X.y,d+U)}for(let H=0,E=z.length;H<E;H++){const X=z[H];Y=ce[H];for(let q=0,ae=X.length;q<ae;q++){const J=oe(X[q],Y[q],W);V?Ae(J.x,J.y+x[h-1].y,x[h-1].x+U):Ae(J.x,J.y,d+U)}}}function me(N,G){let U=N.length;for(;--U>=0;){const W=U;let H=U-1;H<0&&(H=N.length-1);for(let E=0,X=h+2*g;E<X;E++){const q=_e*E,ae=_e*(E+1);Be(G+W+q,G+H+q,G+H+ae,G+W+ae)}}}function Ae(N,G,U){l.push(N),l.push(G),l.push(U)}function Ce(N,G,U){P(N),P(G),P(U);const W=n.length/3,H=y.generateTopUV(i,n,W-3,W-2,W-1);L(H[0]),L(H[1]),L(H[2])}function Be(N,G,U,W){P(N),P(G),P(W),P(G),P(U),P(W);const H=n.length/3,E=y.generateSideWallUV(i,n,H-6,H-3,H-2,H-1);L(E[0]),L(E[1]),L(E[3]),L(E[1]),L(E[2]),L(E[3])}function P(N){n.push(l[3*N+0]),n.push(l[3*N+1]),n.push(l[3*N+2])}function L(N){s.push(N.x),s.push(N.y)}(function(){const N=n.length/3;if(p){let G=0,U=_e*G;for(let W=0;W<ve;W++){const H=O[W];Ce(H[2]+U,H[1]+U,H[0]+U)}G=h+2*g,U=_e*G;for(let W=0;W<ve;W++){const H=O[W];Ce(H[0]+U,H[1]+U,H[2]+U)}}else{for(let G=0;G<ve;G++){const U=O[G];Ce(U[2],U[1],U[0])}for(let G=0;G<ve;G++){const U=O[G];Ce(U[0]+_e*h,U[1]+_e*h,U[2]+_e*h)}}i.addGroup(N,n.length/3-N,0)})(),function(){const N=n.length/3;let G=0;me(se,G),G+=se.length;for(let U=0,W=z.length;U<W;U++){const H=z[U];me(H,G),G+=H.length}i.addGroup(N,n.length/3-N,1)}()}this.setAttribute("position",new Ee(n,3)),this.setAttribute("uv",new Ee(s,2)),this.computeVertexNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return function(t,i,n){if(n.shapes=[],Array.isArray(t))for(let s=0,a=t.length;s<a;s++){const o=t[s];n.shapes.push(o.uuid)}else n.shapes.push(t.uuid);return n.options=Object.assign({},i),i.extrudePath!==void 0&&(n.options.extrudePath=i.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,e)}static fromJSON(e,t){const i=[];for(let s=0,a=e.shapes.length;s<a;s++){const o=t[e.shapes[s]];i.push(o)}const n=e.options.extrudePath;return n!==void 0&&(e.options.extrudePath=new Rl[n.type]().fromJSON(n)),new kl(i,e.options)}}const _m={generateTopUV:function(r,e,t,i,n){const s=e[3*t],a=e[3*t+1],o=e[3*i],l=e[3*i+1],c=e[3*n],h=e[3*n+1];return[new te(s,a),new te(o,l),new te(c,h)]},generateSideWallUV:function(r,e,t,i,n,s){const a=e[3*t],o=e[3*t+1],l=e[3*t+2],c=e[3*i],h=e[3*i+1],d=e[3*i+2],p=e[3*n],m=e[3*n+1],f=e[3*n+2],v=e[3*s],g=e[3*s+1],M=e[3*s+2];return Math.abs(o-h)<Math.abs(a-c)?[new te(a,1-l),new te(c,1-d),new te(p,1-f),new te(v,1-M)]:[new te(o,1-l),new te(h,1-d),new te(m,1-f),new te(g,1-M)]}};class Hl extends Tr{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2;super([-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Hl(e.radius,e.detail)}}class _o extends Tr{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new _o(e.radius,e.detail)}}class Gl extends Ye{constructor(e=.5,t=1,i=32,n=1,s=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:n,thetaStart:s,thetaLength:a},i=Math.max(3,i);const o=[],l=[],c=[],h=[];let d=e;const p=(t-e)/(n=Math.max(1,n)),m=new R,f=new te;for(let v=0;v<=n;v++){for(let g=0;g<=i;g++){const M=s+g/i*a;m.x=d*Math.cos(M),m.y=d*Math.sin(M),l.push(m.x,m.y,m.z),c.push(0,0,1),f.x=(m.x/t+1)/2,f.y=(m.y/t+1)/2,h.push(f.x,f.y)}d+=p}for(let v=0;v<n;v++){const g=v*(i+1);for(let M=0;M<i;M++){const y=M+g,x=y,T=y+i+1,A=y+i+2,C=y+1;o.push(x,T,C),o.push(T,A,C)}}this.setIndex(o),this.setAttribute("position",new Ee(l,3)),this.setAttribute("normal",new Ee(c,3)),this.setAttribute("uv",new Ee(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Gl(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Vl extends Ye{constructor(e=new ds([new te(0,.5),new te(-.5,-.5),new te(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const i=[],n=[],s=[],a=[];let o=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let h=0;h<e.length;h++)c(e[h]),this.addGroup(o,l,h),o+=l,l=0;function c(h){const d=n.length/3,p=h.extractPoints(t);let m=p.shape;const f=p.holes;Un.isClockWise(m)===!1&&(m=m.reverse());for(let g=0,M=f.length;g<M;g++){const y=f[g];Un.isClockWise(y)===!0&&(f[g]=y.reverse())}const v=Un.triangulateShape(m,f);for(let g=0,M=f.length;g<M;g++){const y=f[g];m=m.concat(y)}for(let g=0,M=m.length;g<M;g++){const y=m[g];n.push(y.x,y.y,0),s.push(0,0,1),a.push(y.x,y.y)}for(let g=0,M=v.length;g<M;g++){const y=v[g],x=y[0]+d,T=y[1]+d,A=y[2]+d;i.push(x,T,A),l+=3}}this.setIndex(i),this.setAttribute("position",new Ee(n,3)),this.setAttribute("normal",new Ee(s,3)),this.setAttribute("uv",new Ee(a,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return function(t,i){if(i.shapes=[],Array.isArray(t))for(let n=0,s=t.length;n<s;n++){const a=t[n];i.shapes.push(a.uuid)}else i.shapes.push(t.uuid);return i}(this.parameters.shapes,e)}static fromJSON(e,t){const i=[];for(let n=0,s=e.shapes.length;n<s;n++){const a=t[e.shapes[n]];i.push(a)}return new Vl(i,e.curveSegments)}}class vo extends Ye{constructor(e=1,t=32,i=16,n=0,s=2*Math.PI,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:s,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(a+o,Math.PI);let c=0;const h=[],d=new R,p=new R,m=[],f=[],v=[],g=[];for(let M=0;M<=i;M++){const y=[],x=M/i;let T=0;M===0&&a===0?T=.5/t:M===i&&l===Math.PI&&(T=-.5/t);for(let A=0;A<=t;A++){const C=A/t;d.x=-e*Math.cos(n+C*s)*Math.sin(a+x*o),d.y=e*Math.cos(a+x*o),d.z=e*Math.sin(n+C*s)*Math.sin(a+x*o),f.push(d.x,d.y,d.z),p.copy(d).normalize(),v.push(p.x,p.y,p.z),g.push(C+T,1-x),y.push(c++)}h.push(y)}for(let M=0;M<i;M++)for(let y=0;y<t;y++){const x=h[M][y+1],T=h[M][y],A=h[M+1][y],C=h[M+1][y+1];(M!==0||a>0)&&m.push(x,T,C),(M!==i-1||l<Math.PI)&&m.push(T,A,C)}this.setIndex(m),this.setAttribute("position",new Ee(f,3)),this.setAttribute("normal",new Ee(v,3)),this.setAttribute("uv",new Ee(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new vo(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Wl extends Tr{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Wl(e.radius,e.detail)}}class jl extends Ye{constructor(e=1,t=.4,i=12,n=48,s=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:s},i=Math.floor(i),n=Math.floor(n);const a=[],o=[],l=[],c=[],h=new R,d=new R,p=new R;for(let m=0;m<=i;m++)for(let f=0;f<=n;f++){const v=f/n*s,g=m/i*Math.PI*2;d.x=(e+t*Math.cos(g))*Math.cos(v),d.y=(e+t*Math.cos(g))*Math.sin(v),d.z=t*Math.sin(g),o.push(d.x,d.y,d.z),h.x=e*Math.cos(v),h.y=e*Math.sin(v),p.subVectors(d,h).normalize(),l.push(p.x,p.y,p.z),c.push(f/n),c.push(m/i)}for(let m=1;m<=i;m++)for(let f=1;f<=n;f++){const v=(n+1)*m+f-1,g=(n+1)*(m-1)+f-1,M=(n+1)*(m-1)+f,y=(n+1)*m+f;a.push(v,g,y),a.push(g,M,y)}this.setIndex(a),this.setAttribute("position",new Ee(o,3)),this.setAttribute("normal",new Ee(l,3)),this.setAttribute("uv",new Ee(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new jl(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Xl extends Ye{constructor(e=1,t=.4,i=64,n=8,s=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:s,q:a},i=Math.floor(i),n=Math.floor(n);const o=[],l=[],c=[],h=[],d=new R,p=new R,m=new R,f=new R,v=new R,g=new R,M=new R;for(let x=0;x<=i;++x){const T=x/i*s*Math.PI*2;y(T,s,a,e,m),y(T+.01,s,a,e,f),g.subVectors(f,m),M.addVectors(f,m),v.crossVectors(g,M),M.crossVectors(v,g),v.normalize(),M.normalize();for(let A=0;A<=n;++A){const C=A/n*Math.PI*2,D=-t*Math.cos(C),V=t*Math.sin(C);d.x=m.x+(D*M.x+V*v.x),d.y=m.y+(D*M.y+V*v.y),d.z=m.z+(D*M.z+V*v.z),l.push(d.x,d.y,d.z),p.subVectors(d,m).normalize(),c.push(p.x,p.y,p.z),h.push(x/i),h.push(A/n)}}for(let x=1;x<=i;x++)for(let T=1;T<=n;T++){const A=(n+1)*(x-1)+(T-1),C=(n+1)*x+(T-1),D=(n+1)*x+T,V=(n+1)*(x-1)+T;o.push(A,C,V),o.push(C,D,V)}function y(x,T,A,C,D){const V=Math.cos(x),k=Math.sin(x),K=A/T*x,z=Math.cos(K);D.x=C*(2+z)*.5*V,D.y=C*(2+z)*k*.5,D.z=C*Math.sin(K)*.5}this.setIndex(o),this.setAttribute("position",new Ee(l,3)),this.setAttribute("normal",new Ee(c,3)),this.setAttribute("uv",new Ee(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Xl(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class ql extends Ye{constructor(e=new xh(new R(-1,-1,0),new R(-1,1,0),new R(1,1,0)),t=64,i=1,n=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:s};const a=e.computeFrenetFrames(t,s);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const o=new R,l=new R,c=new te;let h=new R;const d=[],p=[],m=[],f=[];function v(g){h=e.getPointAt(g/t,h);const M=a.normals[g],y=a.binormals[g];for(let x=0;x<=n;x++){const T=x/n*Math.PI*2,A=Math.sin(T),C=-Math.cos(T);l.x=C*M.x+A*y.x,l.y=C*M.y+A*y.y,l.z=C*M.z+A*y.z,l.normalize(),p.push(l.x,l.y,l.z),o.x=h.x+i*l.x,o.y=h.y+i*l.y,o.z=h.z+i*l.z,d.push(o.x,o.y,o.z)}}(function(){for(let g=0;g<t;g++)v(g);v(s===!1?t:0),function(){for(let g=0;g<=t;g++)for(let M=0;M<=n;M++)c.x=g/t,c.y=M/n,m.push(c.x,c.y)}(),function(){for(let g=1;g<=t;g++)for(let M=1;M<=n;M++){const y=(n+1)*(g-1)+(M-1),x=(n+1)*g+(M-1),T=(n+1)*g+M,A=(n+1)*(g-1)+M;f.push(y,x,A),f.push(x,T,A)}}()})(),this.setIndex(f),this.setAttribute("position",new Ee(d,3)),this.setAttribute("normal",new Ee(p,3)),this.setAttribute("uv",new Ee(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new ql(new Rl[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class vd extends Ye{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],i=new Set,n=new R,s=new R;if(e.index!==null){const a=e.attributes.position,o=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:o.count,materialIndex:0}]);for(let c=0,h=l.length;c<h;++c){const d=l[c],p=d.start;for(let m=p,f=p+d.count;m<f;m+=3)for(let v=0;v<3;v++){const g=o.getX(m+v),M=o.getX(m+(v+1)%3);n.fromBufferAttribute(a,g),s.fromBufferAttribute(a,M),yd(n,s,i)===!0&&(t.push(n.x,n.y,n.z),t.push(s.x,s.y,s.z))}}}else{const a=e.attributes.position;for(let o=0,l=a.count/3;o<l;o++)for(let c=0;c<3;c++){const h=3*o+c,d=3*o+(c+1)%3;n.fromBufferAttribute(a,h),s.fromBufferAttribute(a,d),yd(n,s,i)===!0&&(t.push(n.x,n.y,n.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Ee(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function yd(r,e,t){const i=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,n=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(i)!==!0&&t.has(n)!==!0&&(t.add(i),t.add(n),!0)}var xd=Object.freeze({__proto__:null,BoxGeometry:Kn,CapsuleGeometry:Ll,CircleGeometry:Pl,ConeGeometry:Il,CylinderGeometry:xa,DodecahedronGeometry:Dl,EdgesGeometry:ud,ExtrudeGeometry:kl,IcosahedronGeometry:Hl,LatheGeometry:po,OctahedronGeometry:_o,PlaneGeometry:Qn,PolyhedronGeometry:Tr,RingGeometry:Gl,ShapeGeometry:Vl,SphereGeometry:vo,TetrahedronGeometry:Wl,TorusGeometry:jl,TorusKnotGeometry:Xl,TubeGeometry:ql,WireframeGeometry:vd});class bd extends qt{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new be(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Md extends Pi{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Eh extends qt{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new be(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new te(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Sd extends Eh{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new te(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Mt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new be(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new be(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new be(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class wd extends qt{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new be(16777215),this.specular=new be(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new te(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Ed extends qt{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new be(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new te(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Td extends qt{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new te(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Ad extends qt{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new be(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new be(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new te(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Cd extends qt{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new be(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new te(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Rd extends gi{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function ms(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function Ld(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function Pd(r){const e=r.length,t=new Array(e);for(let i=0;i!==e;++i)t[i]=i;return t.sort(function(i,n){return r[i]-r[n]}),t}function Th(r,e,t){const i=r.length,n=new r.constructor(i);for(let s=0,a=0;a!==i;++s){const o=t[s]*e;for(let l=0;l!==e;++l)n[a++]=r[o+l]}return n}function Ah(r,e,t,i){let n=1,s=r[0];for(;s!==void 0&&s[i]===void 0;)s=r[n++];if(s===void 0)return;let a=s[i];if(a!==void 0)if(Array.isArray(a))do a=s[i],a!==void 0&&(e.push(s.time),t.push.apply(t,a)),s=r[n++];while(s!==void 0);else if(a.toArray!==void 0)do a=s[i],a!==void 0&&(e.push(s.time),a.toArray(t,t.length)),s=r[n++];while(s!==void 0);else do a=s[i],a!==void 0&&(e.push(s.time),t.push(a)),s=r[n++];while(s!==void 0)}const vm={convertArray:ms,isTypedArray:Ld,getKeyframeOrder:Pd,sortedArray:Th,flattenJSON:Ah,subclip:function(r,e,t,i,n=30){const s=r.clone();s.name=e;const a=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],h=c.getValueSize(),d=[],p=[];for(let m=0;m<c.times.length;++m){const f=c.times[m]*n;if(!(f<t||f>=i)){d.push(c.times[m]);for(let v=0;v<h;++v)p.push(c.values[m*h+v])}}d.length!==0&&(c.times=ms(d,c.times.constructor),c.values=ms(p,c.values.constructor),a.push(c))}s.tracks=a;let o=1/0;for(let l=0;l<s.tracks.length;++l)o>s.tracks[l].times[0]&&(o=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*o);return s.resetDuration(),s},makeClipAdditive:function(r,e=0,t=r,i=30){i<=0&&(i=30);const n=t.tracks.length,s=e/i;for(let a=0;a<n;++a){const o=t.tracks[a],l=o.ValueTypeName;if(l==="bool"||l==="string")continue;const c=r.tracks.find(function(M){return M.name===o.name&&M.ValueTypeName===l});if(c===void 0)continue;let h=0;const d=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=d/3);let p=0;const m=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=m/3);const f=o.times.length-1;let v;if(s<=o.times[0]){const M=h,y=d-h;v=o.values.slice(M,y)}else if(s>=o.times[f]){const M=f*d+h,y=M+d-h;v=o.values.slice(M,y)}else{const M=o.createInterpolant(),y=h,x=d-h;M.evaluate(s),v=M.resultBuffer.slice(y,x)}l==="quaternion"&&new Vt().fromArray(v).normalize().conjugate().toArray(v);const g=c.times.length;for(let M=0;M<g;++M){const y=M*m+p;if(l==="quaternion")Vt.multiplyQuaternionsFlat(c.values,y,v,0,c.values,y);else{const x=m-2*p;for(let T=0;T<x;++T)c.values[y+T]-=v[T]}}}return r.blendMode=2501,r}};class yo{constructor(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=n!==void 0?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let i=this._cachedIndex,n=t[i],s=t[i-1];e:{t:{let a;i:{n:if(!(e<n)){for(let o=i+2;;){if(n===void 0){if(e<s)break n;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===o)break;if(s=n,n=t[++i],e<n)break t}a=t.length;break i}if(e>=s)break e;{const o=t[1];e<o&&(i=2,s=o);for(let l=i-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(n=s,s=t[--i-1],e>=s)break t}a=i,i=0}}for(;i<a;){const o=i+a>>>1;e<t[o]?a=o:i=o+1}if(n=t[i],s=t[i-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===void 0)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,s,n)}return this.interpolate_(i,s,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,s=e*n;for(let a=0;a!==n;++a)t[a]=i[s+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Id extends yo{constructor(e,t,i,n){super(e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(e,t,i){const n=this.parameterPositions;let s=e-2,a=e+1,o=n[s],l=n[a];if(o===void 0)switch(this.getSettings_().endingStart){case 2401:s=e,o=2*t-i;break;case 2402:s=n.length-2,o=t+n[s]-n[s+1];break;default:s=e,o=i}if(l===void 0)switch(this.getSettings_().endingEnd){case 2401:a=e,l=2*i-t;break;case 2402:a=1,l=i+n[1]-n[0];break;default:a=e-1,l=t}const c=.5*(i-t),h=this.valueSize;this._weightPrev=c/(t-o),this._weightNext=c/(l-i),this._offsetPrev=s*h,this._offsetNext=a*h}interpolate_(e,t,i,n){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,h=this._offsetPrev,d=this._offsetNext,p=this._weightPrev,m=this._weightNext,f=(i-t)/(n-t),v=f*f,g=v*f,M=-p*g+2*p*v-p*f,y=(1+p)*g+(-1.5-2*p)*v+(-.5+p)*f+1,x=(-1-m)*g+(1.5+m)*v+.5*f,T=m*g-m*v;for(let A=0;A!==o;++A)s[A]=M*a[h+A]+y*a[c+A]+x*a[l+A]+T*a[d+A];return s}}class Ch extends yo{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,h=(i-t)/(n-t),d=1-h;for(let p=0;p!==o;++p)s[p]=a[c+p]*d+a[l+p]*h;return s}}class Dd extends yo{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class mn{constructor(e,t,i,n){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ms(t,this.TimeBufferType),this.values=ms(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:ms(e.times,Array),values:ms(e.values,Array)};const n=e.getInterpolation();n!==e.DefaultInterpolation&&(i.interpolation=n)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new Dd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Ch(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Id(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case 2300:t=this.InterpolantFactoryMethodDiscrete;break;case 2301:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(t===void 0){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0){if(e===this.DefaultInterpolation)throw new Error(i);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this}trim(e,t){const i=this.times,n=i.length;let s=0,a=n-1;for(;s!==n&&i[s]<e;)++s;for(;a!==-1&&i[a]>t;)--a;if(++a,s!==0||a!==n){s>=a&&(a=Math.max(a,1),s=a-1);const o=this.getValueSize();this.times=i.slice(s,a),this.values=this.values.slice(s*o,a*o)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,n=this.values,s=i.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==s;o++){const l=i[o];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),e=!1;break}if(a!==null&&a>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,a),e=!1;break}a=l}if(n!==void 0&&Ld(n))for(let o=0,l=n.length;o!==l;++o){const c=n[o];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,c),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),i=this.getValueSize(),n=this.getInterpolation()===2302,s=e.length-1;let a=1;for(let o=1;o<s;++o){let l=!1;const c=e[o];if(c!==e[o+1]&&(o!==1||c!==e[0]))if(n)l=!0;else{const h=o*i,d=h-i,p=h+i;for(let m=0;m!==i;++m){const f=t[h+m];if(f!==t[d+m]||f!==t[p+m]){l=!0;break}}}if(l){if(o!==a){e[a]=e[o];const h=o*i,d=a*i;for(let p=0;p!==i;++p)t[d+p]=t[h+p]}++a}}if(s>0){e[a]=e[s];for(let o=s*i,l=a*i,c=0;c!==i;++c)t[l+c]=t[o+c];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*i)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),i=new this.constructor(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}mn.prototype.TimeBufferType=Float32Array,mn.prototype.ValueBufferType=Float32Array,mn.prototype.DefaultInterpolation=2301;class fs extends mn{}fs.prototype.ValueTypeName="bool",fs.prototype.ValueBufferType=Array,fs.prototype.DefaultInterpolation=2300,fs.prototype.InterpolantFactoryMethodLinear=void 0,fs.prototype.InterpolantFactoryMethodSmooth=void 0;class Rh extends mn{}Rh.prototype.ValueTypeName="color";class xo extends mn{}xo.prototype.ValueTypeName="number";class Ud extends yo{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=(i-t)/(n-t);let c=e*o;for(let h=c+o;c!==h;c+=4)Vt.slerpFlat(s,0,a,c-o,a,c,l);return s}}class Ma extends mn{InterpolantFactoryMethodLinear(e){return new Ud(this.times,this.values,this.getValueSize(),e)}}Ma.prototype.ValueTypeName="quaternion",Ma.prototype.DefaultInterpolation=2301,Ma.prototype.InterpolantFactoryMethodSmooth=void 0;class gs extends mn{}gs.prototype.ValueTypeName="string",gs.prototype.ValueBufferType=Array,gs.prototype.DefaultInterpolation=2300,gs.prototype.InterpolantFactoryMethodLinear=void 0,gs.prototype.InterpolantFactoryMethodSmooth=void 0;class bo extends mn{}bo.prototype.ValueTypeName="vector";class Mo{constructor(e,t=-1,i,n=2500){this.name=e,this.tracks=i,this.duration=t,this.blendMode=n,this.uuid=ti(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],i=e.tracks,n=1/(e.fps||1);for(let a=0,o=i.length;a!==o;++a)t.push(ym(i[a]).scale(n));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],i=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,a=i.length;s!==a;++s)t.push(mn.toJSON(i[s]));return n}static CreateFromMorphTargetSequence(e,t,i,n){const s=t.length,a=[];for(let o=0;o<s;o++){let l=[],c=[];l.push((o+s-1)%s,o,(o+1)%s),c.push(0,1,0);const h=Pd(l);l=Th(l,1,h),c=Th(c,1,h),n||l[0]!==0||(l.push(s),c.push(c[0])),a.push(new xo(".morphTargetInfluences["+t[o].name+"]",l,c).scale(1/i))}return new this(e,-1,a)}static findByName(e,t){let i=e;if(!Array.isArray(e)){const n=e;i=n.geometry&&n.geometry.animations||n.animations}for(let n=0;n<i.length;n++)if(i[n].name===t)return i[n];return null}static CreateClipsFromMorphTargetSequences(e,t,i){const n={},s=/^([\w-]*?)([\d]+)$/;for(let o=0,l=e.length;o<l;o++){const c=e[o],h=c.name.match(s);if(h&&h.length>1){const d=h[1];let p=n[d];p||(n[d]=p=[]),p.push(c)}}const a=[];for(const o in n)a.push(this.CreateFromMorphTargetSequence(o,n[o],t,i));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(h,d,p,m,f){if(p.length!==0){const v=[],g=[];Ah(p,v,g,m),v.length!==0&&f.push(new h(d,v,g))}},n=[],s=e.name||"default",a=e.fps||30,o=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const d=c[h].keys;if(d&&d.length!==0)if(d[0].morphTargets){const p={};let m;for(m=0;m<d.length;m++)if(d[m].morphTargets)for(let f=0;f<d[m].morphTargets.length;f++)p[d[m].morphTargets[f]]=-1;for(const f in p){const v=[],g=[];for(let M=0;M!==d[m].morphTargets.length;++M){const y=d[m];v.push(y.time),g.push(y.morphTarget===f?1:0)}n.push(new xo(".morphTargetInfluence["+f+"]",v,g))}l=p.length*a}else{const p=".bones["+t[h].name+"]";i(bo,p+".position",d,"pos",n),i(Ma,p+".quaternion",d,"rot",n),i(bo,p+".scale",d,"scl",n)}}return n.length===0?null:new this(s,l,n,o)}resetDuration(){let e=0;for(let t=0,i=this.tracks.length;t!==i;++t){const n=this.tracks[t];e=Math.max(e,n.times[n.times.length-1])}return this.duration=e,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function ym(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return xo;case"vector":case"vector2":case"vector3":case"vector4":return bo;case"color":return Rh;case"quaternion":return Ma;case"bool":case"boolean":return fs;case"string":return gs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(r.type);if(r.times===void 0){const t=[],i=[];Ah(r.keys,t,i,"value"),r.times=t,r.values=i}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const _s={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class Lh{constructor(e,t,i){const n=this;let s,a=!1,o=0,l=0;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(h){l++,a===!1&&n.onStart!==void 0&&n.onStart(h,o,l),a=!0},this.itemEnd=function(h){o++,n.onProgress!==void 0&&n.onProgress(h,o,l),o===l&&(a=!1,n.onLoad!==void 0&&n.onLoad())},this.itemError=function(h){n.onError!==void 0&&n.onError(h)},this.resolveURL=function(h){return s?s(h):h},this.setURLModifier=function(h){return s=h,this},this.addHandler=function(h,d){return c.push(h,d),this},this.removeHandler=function(h){const d=c.indexOf(h);return d!==-1&&c.splice(d,2),this},this.getHandler=function(h){for(let d=0,p=c.length;d<p;d+=2){const m=c[d],f=c[d+1];if(m.global&&(m.lastIndex=0),m.test(h))return f}return null}}}const Nd=new Lh;class Ei{constructor(e){this.manager=e!==void 0?e:Nd,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const i=this;return new Promise(function(n,s){i.load(e,n,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Ei.DEFAULT_MATERIAL_NAME="__DEFAULT";const rr={};class xm extends Error{constructor(e,t){super(e),this.response=t}}class sr extends Ei{constructor(e){super(e)}load(e,t,i,n){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=_s.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(rr[e]!==void 0)return void rr[e].push({onLoad:t,onProgress:i,onError:n});rr[e]=[],rr[e].push({onLoad:t,onProgress:i,onError:n});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(a).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const h=rr[e],d=c.body.getReader(),p=c.headers.get("Content-Length")||c.headers.get("X-File-Size"),m=p?parseInt(p):0,f=m!==0;let v=0;const g=new ReadableStream({start(M){(function y(){d.read().then(({done:x,value:T})=>{if(x)M.close();else{v+=T.byteLength;const A=new ProgressEvent("progress",{lengthComputable:f,loaded:v,total:m});for(let C=0,D=h.length;C<D;C++){const V=h[C];V.onProgress&&V.onProgress(A)}M.enqueue(T),y()}})})()}});return new Response(g)}throw new xm(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,o));case"json":return c.json();default:if(o===void 0)return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(o),d=h&&h[1]?h[1].toLowerCase():void 0,p=new TextDecoder(d);return c.arrayBuffer().then(m=>p.decode(m))}}}).then(c=>{_s.add(e,c);const h=rr[e];delete rr[e];for(let d=0,p=h.length;d<p;d++){const m=h[d];m.onLoad&&m.onLoad(c)}}).catch(c=>{const h=rr[e];if(h===void 0)throw this.manager.itemError(e),c;delete rr[e];for(let d=0,p=h.length;d<p;d++){const m=h[d];m.onError&&m.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class So extends Ei{constructor(e){super(e)}load(e,t,i,n){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=_s.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const o=Ri("img");function l(){h(),_s.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(d){h(),n&&n(d),s.manager.itemError(e),s.manager.itemEnd(e)}function h(){o.removeEventListener("load",l,!1),o.removeEventListener("error",c,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),s.manager.itemStart(e),o.src=e,o}}class Ar extends Xe{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new be(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class Od extends Ar{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Xe.DEFAULT_UP),this.updateMatrix(),this.groundColor=new be(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Ph=new Ue,Fd=new R,Bd=new R;class Ih{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new te(512,512),this.map=null,this.mapPass=null,this.matrix=new Ue,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new yr,this._frameExtents=new te(1,1),this._viewportCount=1,this._viewports=[new dt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;Fd.setFromMatrixPosition(e.matrixWorld),t.position.copy(Fd),Bd.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Bd),t.updateMatrixWorld(),Ph.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ph),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(Ph)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),this.mapSize.x===512&&this.mapSize.y===512||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class bm extends Ih{constructor(){super(new Tt(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,i=2*zn*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;i===t.fov&&n===t.aspect&&s===t.far||(t.fov=i,t.aspect=n,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class zd extends Ar{constructor(e,t,i=0,n=Math.PI/3,s=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Xe.DEFAULT_UP),this.updateMatrix(),this.target=new Xe,this.distance=i,this.angle=n,this.penumbra=s,this.decay=a,this.map=null,this.shadow=new bm}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const kd=new Ue,wo=new R,Dh=new R;class Mm extends Ih{constructor(){super(new Tt(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new te(4,2),this._viewportCount=6,this._viewports=[new dt(2,1,1,1),new dt(0,1,1,1),new dt(3,1,1,1),new dt(1,1,1,1),new dt(3,0,1,1),new dt(1,0,1,1)],this._cubeDirections=[new R(1,0,0),new R(-1,0,0),new R(0,0,1),new R(0,0,-1),new R(0,1,0),new R(0,-1,0)],this._cubeUps=[new R(0,1,0),new R(0,1,0),new R(0,1,0),new R(0,1,0),new R(0,0,1),new R(0,0,-1)]}updateMatrices(e,t=0){const i=this.camera,n=this.matrix,s=e.distance||i.far;s!==i.far&&(i.far=s,i.updateProjectionMatrix()),wo.setFromMatrixPosition(e.matrixWorld),i.position.copy(wo),Dh.copy(i.position),Dh.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(Dh),i.updateMatrixWorld(),n.makeTranslation(-wo.x,-wo.y,-wo.z),kd.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(kd)}}class Hd extends Ar{constructor(e,t,i=0,n=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new Mm}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Sm extends Ih{constructor(){super(new sa(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Gd extends Ar{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Xe.DEFAULT_UP),this.updateMatrix(),this.target=new Xe,this.shadow=new Sm}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Vd extends Ar{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Wd extends Ar{constructor(e,t,i=10,n=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class jd{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new R)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const i=e.x,n=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*n),t.addScaledVector(a[2],.488603*s),t.addScaledVector(a[3],.488603*i),t.addScaledVector(a[4],i*n*1.092548),t.addScaledVector(a[5],n*s*1.092548),t.addScaledVector(a[6],.315392*(3*s*s-1)),t.addScaledVector(a[7],i*s*1.092548),t.addScaledVector(a[8],.546274*(i*i-n*n)),t}getIrradianceAt(e,t){const i=e.x,n=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],1.023328*n),t.addScaledVector(a[2],1.023328*s),t.addScaledVector(a[3],1.023328*i),t.addScaledVector(a[4],.858086*i*n),t.addScaledVector(a[5],.858086*n*s),t.addScaledVector(a[6],.743125*s*s-.247708),t.addScaledVector(a[7],.858086*i*s),t.addScaledVector(a[8],.429043*(i*i-n*n)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(e,t+3*n);return this}toArray(e=[],t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(e,t+3*n);return e}static getBasisAt(e,t){const i=e.x,n=e.y,s=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*s,t[3]=.488603*i,t[4]=1.092548*i*n,t[5]=1.092548*n*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*i*s,t[8]=.546274*(i*i-n*n)}}class Xd extends Ar{constructor(e=new jd,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Yl extends Ei{constructor(e){super(e),this.textures={}}load(e,t,i,n){const s=this,a=new sr(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(o){try{t(s.parse(JSON.parse(o)))}catch(l){n?n(l):console.error(l),s.manager.itemError(e)}},i,n)}parse(e){const t=this.textures;function i(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const n=Yl.createMaterialFromType(e.type);if(e.uuid!==void 0&&(n.uuid=e.uuid),e.name!==void 0&&(n.name=e.name),e.color!==void 0&&n.color!==void 0&&n.color.setHex(e.color),e.roughness!==void 0&&(n.roughness=e.roughness),e.metalness!==void 0&&(n.metalness=e.metalness),e.sheen!==void 0&&(n.sheen=e.sheen),e.sheenColor!==void 0&&(n.sheenColor=new be().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(n.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&n.emissive!==void 0&&n.emissive.setHex(e.emissive),e.specular!==void 0&&n.specular!==void 0&&n.specular.setHex(e.specular),e.specularIntensity!==void 0&&(n.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&n.specularColor!==void 0&&n.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(n.shininess=e.shininess),e.clearcoat!==void 0&&(n.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(n.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(n.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(n.transmission=e.transmission),e.thickness!==void 0&&(n.thickness=e.thickness),e.attenuationDistance!==void 0&&(n.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&n.attenuationColor!==void 0&&n.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(n.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(n.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(n.fog=e.fog),e.flatShading!==void 0&&(n.flatShading=e.flatShading),e.blending!==void 0&&(n.blending=e.blending),e.combine!==void 0&&(n.combine=e.combine),e.side!==void 0&&(n.side=e.side),e.shadowSide!==void 0&&(n.shadowSide=e.shadowSide),e.opacity!==void 0&&(n.opacity=e.opacity),e.transparent!==void 0&&(n.transparent=e.transparent),e.alphaTest!==void 0&&(n.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(n.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(n.depthFunc=e.depthFunc),e.depthTest!==void 0&&(n.depthTest=e.depthTest),e.depthWrite!==void 0&&(n.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(n.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(n.blendSrc=e.blendSrc),e.blendDst!==void 0&&(n.blendDst=e.blendDst),e.blendEquation!==void 0&&(n.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(n.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(n.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(n.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&n.blendColor!==void 0&&n.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(n.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(n.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(n.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(n.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(n.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(n.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(n.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(n.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(n.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(n.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(n.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(n.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(n.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(n.rotation=e.rotation),e.linewidth!==void 0&&(n.linewidth=e.linewidth),e.dashSize!==void 0&&(n.dashSize=e.dashSize),e.gapSize!==void 0&&(n.gapSize=e.gapSize),e.scale!==void 0&&(n.scale=e.scale),e.polygonOffset!==void 0&&(n.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(n.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(n.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(n.dithering=e.dithering),e.alphaToCoverage!==void 0&&(n.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(n.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(n.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(n.visible=e.visible),e.toneMapped!==void 0&&(n.toneMapped=e.toneMapped),e.userData!==void 0&&(n.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?n.vertexColors=e.vertexColors>0:n.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const a=e.uniforms[s];switch(n.uniforms[s]={},a.type){case"t":n.uniforms[s].value=i(a.value);break;case"c":n.uniforms[s].value=new be().setHex(a.value);break;case"v2":n.uniforms[s].value=new te().fromArray(a.value);break;case"v3":n.uniforms[s].value=new R().fromArray(a.value);break;case"v4":n.uniforms[s].value=new dt().fromArray(a.value);break;case"m3":n.uniforms[s].value=new Oe().fromArray(a.value);break;case"m4":n.uniforms[s].value=new Ue().fromArray(a.value);break;default:n.uniforms[s].value=a.value}}if(e.defines!==void 0&&(n.defines=e.defines),e.vertexShader!==void 0&&(n.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(n.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(n.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)n.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(n.lights=e.lights),e.clipping!==void 0&&(n.clipping=e.clipping),e.size!==void 0&&(n.size=e.size),e.sizeAttenuation!==void 0&&(n.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(n.map=i(e.map)),e.matcap!==void 0&&(n.matcap=i(e.matcap)),e.alphaMap!==void 0&&(n.alphaMap=i(e.alphaMap)),e.bumpMap!==void 0&&(n.bumpMap=i(e.bumpMap)),e.bumpScale!==void 0&&(n.bumpScale=e.bumpScale),e.normalMap!==void 0&&(n.normalMap=i(e.normalMap)),e.normalMapType!==void 0&&(n.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),n.normalScale=new te().fromArray(s)}return e.displacementMap!==void 0&&(n.displacementMap=i(e.displacementMap)),e.displacementScale!==void 0&&(n.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(n.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(n.roughnessMap=i(e.roughnessMap)),e.metalnessMap!==void 0&&(n.metalnessMap=i(e.metalnessMap)),e.emissiveMap!==void 0&&(n.emissiveMap=i(e.emissiveMap)),e.emissiveIntensity!==void 0&&(n.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(n.specularMap=i(e.specularMap)),e.specularIntensityMap!==void 0&&(n.specularIntensityMap=i(e.specularIntensityMap)),e.specularColorMap!==void 0&&(n.specularColorMap=i(e.specularColorMap)),e.envMap!==void 0&&(n.envMap=i(e.envMap)),e.envMapIntensity!==void 0&&(n.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(n.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(n.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(n.lightMap=i(e.lightMap)),e.lightMapIntensity!==void 0&&(n.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(n.aoMap=i(e.aoMap)),e.aoMapIntensity!==void 0&&(n.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(n.gradientMap=i(e.gradientMap)),e.clearcoatMap!==void 0&&(n.clearcoatMap=i(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(n.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(n.clearcoatNormalMap=i(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(n.clearcoatNormalScale=new te().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(n.iridescenceMap=i(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(n.iridescenceThicknessMap=i(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(n.transmissionMap=i(e.transmissionMap)),e.thicknessMap!==void 0&&(n.thicknessMap=i(e.thicknessMap)),e.anisotropyMap!==void 0&&(n.anisotropyMap=i(e.anisotropyMap)),e.sheenColorMap!==void 0&&(n.sheenColorMap=i(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(n.sheenRoughnessMap=i(e.sheenRoughnessMap)),n}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){return new{ShadowMaterial:bd,SpriteMaterial:nh,RawShaderMaterial:Md,ShaderMaterial:Pi,PointsMaterial:uh,MeshPhysicalMaterial:Sd,MeshStandardMaterial:Eh,MeshPhongMaterial:wd,MeshToonMaterial:Ed,MeshNormalMaterial:Td,MeshLambertMaterial:Ad,MeshDepthMaterial:eh,MeshDistanceMaterial:th,MeshBasicMaterial:An,MeshMatcapMaterial:Cd,LineDashedMaterial:Rd,LineBasicMaterial:gi,Material:qt}[e]}}class Uh{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let i=0,n=e.length;i<n;i++)t+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class qd extends Ye{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Yd extends Ei{constructor(e){super(e)}load(e,t,i,n){const s=this,a=new sr(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(o){try{t(s.parse(JSON.parse(o)))}catch(l){n?n(l):console.error(l),s.manager.itemError(e)}},i,n)}parse(e){const t={},i={};function n(d,p){if(t[p]!==void 0)return t[p];const m=d.interleavedBuffers[p],f=function(M,y){if(i[y]!==void 0)return i[y];const x=M.arrayBuffers,T=x[y],A=new Uint32Array(T).buffer;return i[y]=A,A}(d,m.buffer),v=Zt(m.type,f),g=new pl(v,m.stride);return g.uuid=m.uuid,t[p]=g,g}const s=e.isInstancedBufferGeometry?new qd:new Ye,a=e.data.index;if(a!==void 0){const d=Zt(a.type,a.array);s.setIndex(new mt(d,1))}const o=e.data.attributes;for(const d in o){const p=o[d];let m;if(p.isInterleavedBufferAttribute){const f=n(e.data,p.data);m=new cs(f,p.itemSize,p.offset,p.normalized)}else{const f=Zt(p.type,p.array);m=new(p.isInstancedBufferAttribute?_a:mt)(f,p.itemSize,p.normalized)}p.name!==void 0&&(m.name=p.name),p.usage!==void 0&&m.setUsage(p.usage),s.setAttribute(d,m)}const l=e.data.morphAttributes;if(l)for(const d in l){const p=l[d],m=[];for(let f=0,v=p.length;f<v;f++){const g=p[f];let M;if(g.isInterleavedBufferAttribute){const y=n(e.data,g.data);M=new cs(y,g.itemSize,g.offset,g.normalized)}else{const y=Zt(g.type,g.array);M=new mt(y,g.itemSize,g.normalized)}g.name!==void 0&&(M.name=g.name),m.push(M)}s.morphAttributes[d]=m}e.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);const c=e.data.groups||e.data.drawcalls||e.data.offsets;if(c!==void 0)for(let d=0,p=c.length;d!==p;++d){const m=c[d];s.addGroup(m.start,m.count,m.materialIndex)}const h=e.data.boundingSphere;if(h!==void 0){const d=new R;h.center!==void 0&&d.fromArray(h.center),s.boundingSphere=new Wt(d,h.radius)}return e.name&&(s.name=e.name),e.userData&&(s.userData=e.userData),s}}const wm={UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,CubeUVReflectionMapping:306},Zd={RepeatWrapping:1e3,ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002},Jd={NearestFilter:1003,NearestMipmapNearestFilter:1004,NearestMipmapLinearFilter:1005,LinearFilter:1006,LinearMipmapNearestFilter:1007,LinearMipmapLinearFilter:1008};let Zl;class Nh{static getContext(){return Zl===void 0&&(Zl=new(window.AudioContext||window.webkitAudioContext)),Zl}static setContext(e){Zl=e}}const $d=new Ue,Kd=new Ue,vs=new Ue;class Qd{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=ep(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=ep();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function ep(){return(typeof performance>"u"?Date:performance).now()}const ys=new R,tp=new Vt,Em=new R,xs=new R;class ip extends Xe{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0)return void console.warn("THREE.Audio: Audio is already playing.");if(this.hasPlaybackControl===!1)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl!==!1)return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(this.hasPlaybackControl!==!1)return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl!==!1)return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl!==!1)return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const bs=new R,np=new Vt,Tm=new R,Ms=new R;class rp{constructor(e,t,i){let n,s,a;switch(this.binding=e,this.valueSize=i,t){case"quaternion":n=this._slerp,s=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":n=this._select,s=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*i);break;default:n=this._lerp,s=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=s,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const i=this.buffer,n=this.valueSize,s=e*n+n;let a=this.cumulativeWeight;if(a===0){for(let o=0;o!==n;++o)i[s+o]=i[o];a=t}else{a+=t;const o=t/a;this._mixBufferRegion(i,s,0,o,n)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,i=this.valueSize,n=i*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,i=this.buffer,n=e*t+t,s=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=t*this._origIndex;this._mixBufferRegion(i,n,l,1-s,t)}a>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(i[l]!==i[l+t]){o.setValue(i,n);break}}saveOriginalState(){const e=this.binding,t=this.buffer,i=this.valueSize,n=i*this._origIndex;e.getValue(t,n);for(let s=i,a=n;s!==a;++s)t[s]=t[n+s%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,n,s){if(n>=.5)for(let a=0;a!==s;++a)e[t+a]=e[i+a]}_slerp(e,t,i,n){Vt.slerpFlat(e,t,e,t,e,i,n)}_slerpAdditive(e,t,i,n,s){const a=this._workIndex*s;Vt.multiplyQuaternionsFlat(e,a,e,t,e,i),Vt.slerpFlat(e,t,e,t,e,a,n)}_lerp(e,t,i,n,s){const a=1-n;for(let o=0;o!==s;++o){const l=t+o;e[l]=e[l]*a+e[i+o]*n}}_lerpAdditive(e,t,i,n,s){for(let a=0;a!==s;++a){const o=t+a;e[o]=e[o]+e[i+a]*n}}}const Oh="\\[\\]\\.:\\/",Am=new RegExp("["+Oh+"]","g"),Fh="[^"+Oh+"]",Cm="[^"+Oh.replace("\\.","")+"]",Rm=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",Fh)+/(WCOD+)?/.source.replace("WCOD",Cm)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Fh)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Fh)+"$"),Lm=["material","materials","bones","map"];class ht{constructor(e,t,i){this.path=t,this.parsedPath=i||ht.parseTrackName(t),this.node=ht.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new ht.Composite(e,t,i):new ht(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Am,"")}static parseTrackName(e){const t=Rm.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(n!==void 0&&n!==-1){const s=i.nodeName.substring(n+1);Lm.indexOf(s)!==-1&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=s)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(t);if(i!==void 0)return i}if(e.children){const i=function(s){for(let a=0;a<s.length;a++){const o=s[a];if(o.name===t||o.uuid===t)return o;const l=i(o.children);if(l)return l}return null},n=i(e.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)e[t++]=i[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,i=t.objectName,n=t.propertyName;let s=t.propertyIndex;if(e||(e=ht.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");if(i){let c=t.objectIndex;switch(i){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===c){c=h;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);e=e.material.map;break;default:if(e[i]===void 0)return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[i]}if(c!==void 0){if(e[c]===void 0)return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[c]}}const a=e[n];if(a===void 0){const c=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+n+" but it wasn't found.",e)}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(n==="morphTargetInfluences"){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=s}else a.fromArray!==void 0&&a.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(l=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=n;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}ht.Composite=class{constructor(r,e,t){const i=t||ht.parseTrackName(e);this._targetGroup=r,this._bindings=r.subscribe_(e,i)}getValue(r,e){this.bind();const t=this._targetGroup.nCachedObjects_,i=this._bindings[t];i!==void 0&&i.getValue(r,e)}setValue(r,e){const t=this._bindings;for(let i=this._targetGroup.nCachedObjects_,n=t.length;i!==n;++i)t[i].setValue(r,e)}bind(){const r=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=r.length;e!==t;++e)r[e].bind()}unbind(){const r=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=r.length;e!==t;++e)r[e].unbind()}},ht.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},ht.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},ht.prototype.GetterByBindingType=[ht.prototype._getValue_direct,ht.prototype._getValue_array,ht.prototype._getValue_arrayElement,ht.prototype._getValue_toArray],ht.prototype.SetterByBindingTypeAndVersioning=[[ht.prototype._setValue_direct,ht.prototype._setValue_direct_setNeedsUpdate,ht.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[ht.prototype._setValue_array,ht.prototype._setValue_array_setNeedsUpdate,ht.prototype._setValue_array_setMatrixWorldNeedsUpdate],[ht.prototype._setValue_arrayElement,ht.prototype._setValue_arrayElement_setNeedsUpdate,ht.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[ht.prototype._setValue_fromArray,ht.prototype._setValue_fromArray_setNeedsUpdate,ht.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class sp{constructor(e,t,i=null,n=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=n;const s=t.tracks,a=s.length,o=new Array(a),l={endingStart:2400,endingEnd:2400};for(let c=0;c!==a;++c){const h=s[c].createInterpolant(null);o[c]=h,h.settings=l}this._interpolantSettings=l,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){const n=this._clip.duration,s=e._clip.duration,a=s/n,o=n/s;e.warp(1,a,t),this.warp(o,1,t)}return this}crossFadeTo(e,t,i){return e.crossFadeFrom(this,t,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){const n=this._mixer,s=n.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=n._lendControlInterpolant(),this._timeScaleInterpolant=o);const l=o.parameterPositions,c=o.sampleValues;return l[0]=s,l[1]=s+i,c[0]=e/a,c[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,n){if(!this.enabled)return void this._updateWeight(e);const s=this._startTime;if(s!==null){const l=(e-s)*i;l<0||i===0?t=0:(this._startTime=null,t=i*l)}t*=this._updateTimeScale(e);const a=this._updateTime(t),o=this._updateWeight(e);if(o>0){const l=this._interpolants,c=this._propertyBindings;if(this.blendMode===2501)for(let h=0,d=l.length;h!==d;++h)l[h].evaluate(a),c[h].accumulateAdditive(o);else for(let h=0,d=l.length;h!==d;++h)l[h].evaluate(a),c[h].accumulate(n,o)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;if(i!==null){const n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopFading(),n===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;i!==null&&(t*=i.evaluate(e)[0],e>i.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,i=this.loop;let n=this.time+e,s=this._loopCount;const a=i===2202;if(e===0)return s===-1?n:a&&(1&s)==1?t-n:n;if(i===2200){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(n>=t)n=t;else{if(!(n<0)){this.time=n;break e}n=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),n>=t||n<0){const o=Math.floor(n/t);n-=t*o,s+=Math.abs(o);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=e>0?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=s,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=n;if(a&&(1&s)==1)return t-n}return n}_setEndings(e,t,i){const n=this._interpolantSettings;i?(n.endingStart=2401,n.endingEnd=2401):(n.endingStart=e?this.zeroSlopeAtStart?2401:2400:2402,n.endingEnd=t?this.zeroSlopeAtEnd?2401:2400:2402)}_scheduleFading(e,t,i){const n=this._mixer,s=n.time;let a=this._weightInterpolant;a===null&&(a=n._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=s,l[0]=t,o[1]=s+e,l[1]=i,this}}const Pm=new Float32Array(1);class Bh{constructor(e){this.value=e}clone(){return new Bh(this.value.clone===void 0?this.value:this.value.clone())}}let Im=0;function ap(r,e){return r.distance-e.distance}function zh(r,e,t,i){if(r.layers.test(e.layers)&&r.raycast(e,t),i===!0){const n=r.children;for(let s=0,a=n.length;s<a;s++)zh(n[s],e,t,!0)}}const op=new te,lp=new R,Jl=new R,cp=new R,Cr=new R,$l=new Ue,kh=new Ue;function hp(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,hp(r.children[t]));return e}const Dm=new R,up=new be,dp=new be,pp=new R,Kl=new R,mp=new R,Ql=new R,It=new Qr;function Bt(r,e,t,i,n,s,a){Ql.set(n,s,a).unproject(i);const o=e[r];if(o!==void 0){const l=t.getAttribute("position");for(let c=0,h=o.length;c<h;c++)l.setXYZ(o[c],Ql.x,Ql.y,Ql.z)}}const ec=new Jt,fp=new R;let tc,Hh;typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ei}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ei),b.ACESFilmicToneMapping=4,b.AddEquation=100,b.AddOperation=2,b.AdditiveAnimationBlendMode=2501,b.AdditiveBlending=2,b.AlphaFormat=1021,b.AlwaysCompare=519,b.AlwaysDepth=1,b.AlwaysStencilFunc=519,b.AmbientLight=Vd,b.AnimationAction=sp,b.AnimationClip=Mo,b.AnimationLoader=class extends Ei{constructor(r){super(r)}load(r,e,t,i){const n=this,s=new sr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(r,function(a){try{e(n.parse(JSON.parse(a)))}catch(o){i?i(o):console.error(o),n.manager.itemError(r)}},t,i)}parse(r){const e=[];for(let t=0;t<r.length;t++){const i=Mo.parse(r[t]);e.push(i)}return e}},b.AnimationMixer=class extends Fi{constructor(r){super(),this._root=r,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(r,e){const t=r._localRoot||this._root,i=r._clip.tracks,n=i.length,s=r._propertyBindings,a=r._interpolants,o=t.uuid,l=this._bindingsByRootAndName;let c=l[o];c===void 0&&(c={},l[o]=c);for(let h=0;h!==n;++h){const d=i[h],p=d.name;let m=c[p];if(m!==void 0)++m.referenceCount,s[h]=m;else{if(m=s[h],m!==void 0){m._cacheIndex===null&&(++m.referenceCount,this._addInactiveBinding(m,o,p));continue}const f=e&&e._propertyBindings[h].binding.parsedPath;m=new rp(ht.create(t,p,f),d.ValueTypeName,d.getValueSize()),++m.referenceCount,this._addInactiveBinding(m,o,p),s[h]=m}a[h].resultBuffer=m.buffer}}_activateAction(r){if(!this._isActiveAction(r)){if(r._cacheIndex===null){const t=(r._localRoot||this._root).uuid,i=r._clip.uuid,n=this._actionsByClip[i];this._bindAction(r,n&&n.knownActions[0]),this._addInactiveAction(r,i,t)}const e=r._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const n=e[t];n.useCount++==0&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(r)}}_deactivateAction(r){if(this._isActiveAction(r)){const e=r._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const n=e[t];--n.useCount==0&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(r)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const r=this;this.stats={actions:{get total(){return r._actions.length},get inUse(){return r._nActiveActions}},bindings:{get total(){return r._bindings.length},get inUse(){return r._nActiveBindings}},controlInterpolants:{get total(){return r._controlInterpolants.length},get inUse(){return r._nActiveControlInterpolants}}}}_isActiveAction(r){const e=r._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(r,e,t){const i=this._actions,n=this._actionsByClip;let s=n[e];if(s===void 0)s={knownActions:[r],actionByRoot:{}},r._byClipCacheIndex=0,n[e]=s;else{const a=s.knownActions;r._byClipCacheIndex=a.length,a.push(r)}r._cacheIndex=i.length,i.push(r),s.actionByRoot[t]=r}_removeInactiveAction(r){const e=this._actions,t=e[e.length-1],i=r._cacheIndex;t._cacheIndex=i,e[i]=t,e.pop(),r._cacheIndex=null;const n=r._clip.uuid,s=this._actionsByClip,a=s[n],o=a.knownActions,l=o[o.length-1],c=r._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),r._byClipCacheIndex=null,delete a.actionByRoot[(r._localRoot||this._root).uuid],o.length===0&&delete s[n],this._removeInactiveBindingsForAction(r)}_removeInactiveBindingsForAction(r){const e=r._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const n=e[t];--n.referenceCount==0&&this._removeInactiveBinding(n)}}_lendAction(r){const e=this._actions,t=r._cacheIndex,i=this._nActiveActions++,n=e[i];r._cacheIndex=i,e[i]=r,n._cacheIndex=t,e[t]=n}_takeBackAction(r){const e=this._actions,t=r._cacheIndex,i=--this._nActiveActions,n=e[i];r._cacheIndex=i,e[i]=r,n._cacheIndex=t,e[t]=n}_addInactiveBinding(r,e,t){const i=this._bindingsByRootAndName,n=this._bindings;let s=i[e];s===void 0&&(s={},i[e]=s),s[t]=r,r._cacheIndex=n.length,n.push(r)}_removeInactiveBinding(r){const e=this._bindings,t=r.binding,i=t.rootNode.uuid,n=t.path,s=this._bindingsByRootAndName,a=s[i],o=e[e.length-1],l=r._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete a[n],Object.keys(a).length===0&&delete s[i]}_lendBinding(r){const e=this._bindings,t=r._cacheIndex,i=this._nActiveBindings++,n=e[i];r._cacheIndex=i,e[i]=r,n._cacheIndex=t,e[t]=n}_takeBackBinding(r){const e=this._bindings,t=r._cacheIndex,i=--this._nActiveBindings,n=e[i];r._cacheIndex=i,e[i]=r,n._cacheIndex=t,e[t]=n}_lendControlInterpolant(){const r=this._controlInterpolants,e=this._nActiveControlInterpolants++;let t=r[e];return t===void 0&&(t=new Ch(new Float32Array(2),new Float32Array(2),1,Pm),t.__cacheIndex=e,r[e]=t),t}_takeBackControlInterpolant(r){const e=this._controlInterpolants,t=r.__cacheIndex,i=--this._nActiveControlInterpolants,n=e[i];r.__cacheIndex=i,e[i]=r,n.__cacheIndex=t,e[t]=n}clipAction(r,e,t){const i=e||this._root,n=i.uuid;let s=typeof r=="string"?Mo.findByName(i,r):r;const a=s!==null?s.uuid:r,o=this._actionsByClip[a];let l=null;if(t===void 0&&(t=s!==null?s.blendMode:2500),o!==void 0){const h=o.actionByRoot[n];if(h!==void 0&&h.blendMode===t)return h;l=o.knownActions[0],s===null&&(s=l._clip)}if(s===null)return null;const c=new sp(this,s,e,t);return this._bindAction(c,l),this._addInactiveAction(c,a,n),c}existingAction(r,e){const t=e||this._root,i=t.uuid,n=typeof r=="string"?Mo.findByName(t,r):r,s=n?n.uuid:r,a=this._actionsByClip[s];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const r=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)r[e].stop();return this}update(r){r*=this.timeScale;const e=this._actions,t=this._nActiveActions,i=this.time+=r,n=Math.sign(r),s=this._accuIndex^=1;for(let l=0;l!==t;++l)e[l]._update(i,r,n,s);const a=this._bindings,o=this._nActiveBindings;for(let l=0;l!==o;++l)a[l].apply(s);return this}setTime(r){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(r)}getRoot(){return this._root}uncacheClip(r){const e=this._actions,t=r.uuid,i=this._actionsByClip,n=i[t];if(n!==void 0){const s=n.knownActions;for(let a=0,o=s.length;a!==o;++a){const l=s[a];this._deactivateAction(l);const c=l._cacheIndex,h=e[e.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,h._cacheIndex=c,e[c]=h,e.pop(),this._removeInactiveBindingsForAction(l)}delete i[t]}}uncacheRoot(r){const e=r.uuid,t=this._actionsByClip;for(const n in t){const s=t[n].actionByRoot[e];s!==void 0&&(this._deactivateAction(s),this._removeInactiveAction(s))}const i=this._bindingsByRootAndName[e];if(i!==void 0)for(const n in i){const s=i[n];s.restoreOriginalState(),this._removeInactiveBinding(s)}}uncacheAction(r,e){const t=this.existingAction(r,e);t!==null&&(this._deactivateAction(t),this._removeInactiveAction(t))}},b.AnimationObjectGroup=class{constructor(){this.isAnimationObjectGroup=!0,this.uuid=ti(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const r={};this._indicesByUUID=r;for(let t=0,i=arguments.length;t!==i;++t)r[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const r=this._objects,e=this._indicesByUUID,t=this._paths,i=this._parsedPaths,n=this._bindings,s=n.length;let a,o=r.length,l=this.nCachedObjects_;for(let c=0,h=arguments.length;c!==h;++c){const d=arguments[c],p=d.uuid;let m=e[p];if(m===void 0){m=o++,e[p]=m,r.push(d);for(let f=0,v=s;f!==v;++f)n[f].push(new ht(d,t[f],i[f]))}else if(m<l){a=r[m];const f=--l,v=r[f];e[v.uuid]=m,r[m]=v,e[p]=f,r[f]=d;for(let g=0,M=s;g!==M;++g){const y=n[g],x=y[f];let T=y[m];y[m]=x,T===void 0&&(T=new ht(d,t[g],i[g])),y[f]=T}}else r[m]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const r=this._objects,e=this._indicesByUUID,t=this._bindings,i=t.length;let n=this.nCachedObjects_;for(let s=0,a=arguments.length;s!==a;++s){const o=arguments[s],l=o.uuid,c=e[l];if(c!==void 0&&c>=n){const h=n++,d=r[h];e[d.uuid]=c,r[c]=d,e[l]=h,r[h]=o;for(let p=0,m=i;p!==m;++p){const f=t[p],v=f[h],g=f[c];f[c]=v,f[h]=g}}}this.nCachedObjects_=n}uncache(){const r=this._objects,e=this._indicesByUUID,t=this._bindings,i=t.length;let n=this.nCachedObjects_,s=r.length;for(let a=0,o=arguments.length;a!==o;++a){const l=arguments[a].uuid,c=e[l];if(c!==void 0)if(delete e[l],c<n){const h=--n,d=r[h],p=--s,m=r[p];e[d.uuid]=c,r[c]=d,e[m.uuid]=h,r[h]=m,r.pop();for(let f=0,v=i;f!==v;++f){const g=t[f],M=g[h],y=g[p];g[c]=M,g[h]=y,g.pop()}}else{const h=--s,d=r[h];h>0&&(e[d.uuid]=c),r[c]=d,r.pop();for(let p=0,m=i;p!==m;++p){const f=t[p];f[c]=f[h],f.pop()}}}this.nCachedObjects_=n}subscribe_(r,e){const t=this._bindingsIndicesByPath;let i=t[r];const n=this._bindings;if(i!==void 0)return n[i];const s=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,h=new Array(l);i=n.length,t[r]=i,s.push(r),a.push(e),n.push(h);for(let d=c,p=o.length;d!==p;++d){const m=o[d];h[d]=new ht(m,r,e)}return h}unsubscribe_(r){const e=this._bindingsIndicesByPath,t=e[r];if(t!==void 0){const i=this._paths,n=this._parsedPaths,s=this._bindings,a=s.length-1,o=s[a];e[r[a]]=t,s[t]=o,s.pop(),n[t]=n[a],n.pop(),i[t]=i[a],i.pop()}}},b.AnimationUtils=vm,b.ArcCurve=sd,b.ArrayCamera=Au,b.ArrowHelper=class extends Xe{constructor(r=new R(0,0,1),e=new R(0,0,0),t=1,i=16776960,n=.2*t,s=.2*n){super(),this.type="ArrowHelper",tc===void 0&&(tc=new Ye,tc.setAttribute("position",new Ee([0,0,0,0,1,0],3)),Hh=new xa(0,.5,1,5,1),Hh.translate(0,-.5,0)),this.position.copy(e),this.line=new Er(tc,new gi({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Ft(Hh,new An({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(r),this.setLength(t,n,s)}setDirection(r){if(r.y>.99999)this.quaternion.set(0,0,0,1);else if(r.y<-.99999)this.quaternion.set(1,0,0,0);else{fp.set(r.z,0,-r.x).normalize();const e=Math.acos(r.y);this.quaternion.setFromAxisAngle(fp,e)}}setLength(r,e=.2*r,t=.2*e){this.line.scale.set(1,Math.max(1e-4,r-e),1),this.line.updateMatrix(),this.cone.scale.set(t,e,t),this.cone.position.y=r,this.cone.updateMatrix()}setColor(r){this.line.material.color.set(r),this.cone.material.color.set(r)}copy(r){return super.copy(r,!1),this.line.copy(r.line),this.cone.copy(r.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}},b.AttachedBindMode=Ea,b.Audio=ip,b.AudioAnalyser=class{constructor(r,e=2048){this.analyser=r.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),r.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let r=0;const e=this.getFrequencyData();for(let t=0;t<e.length;t++)r+=e[t];return r/e.length}},b.AudioContext=Nh,b.AudioListener=class extends Xe{constructor(){super(),this.type="AudioListener",this.context=Nh.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Qd}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(r){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=r,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(r){return this.gain.gain.setTargetAtTime(r,this.context.currentTime,.01),this}updateMatrixWorld(r){super.updateMatrixWorld(r);const e=this.context.listener,t=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(ys,tp,Em),xs.set(0,0,-1).applyQuaternion(tp),e.positionX){const i=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(ys.x,i),e.positionY.linearRampToValueAtTime(ys.y,i),e.positionZ.linearRampToValueAtTime(ys.z,i),e.forwardX.linearRampToValueAtTime(xs.x,i),e.forwardY.linearRampToValueAtTime(xs.y,i),e.forwardZ.linearRampToValueAtTime(xs.z,i),e.upX.linearRampToValueAtTime(t.x,i),e.upY.linearRampToValueAtTime(t.y,i),e.upZ.linearRampToValueAtTime(t.z,i)}else e.setPosition(ys.x,ys.y,ys.z),e.setOrientation(xs.x,xs.y,xs.z,t.x,t.y,t.z)}},b.AudioLoader=class extends Ei{constructor(r){super(r)}load(r,e,t,i){const n=this,s=new sr(this.manager);function a(o){i?i(o):console.error(o),n.manager.itemError(r)}s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(r,function(o){try{const l=o.slice(0);Nh.getContext().decodeAudioData(l,function(c){e(c)}).catch(a)}catch(l){a(l)}},t,i)}},b.AxesHelper=class extends Dn{constructor(r=1){const e=[0,0,0,r,0,0,0,0,0,0,r,0,0,0,0,0,0,r],t=new Ye;t.setAttribute("position",new Ee(e,3)),t.setAttribute("color",new Ee([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(t,new gi({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(r,e,t){const i=new be,n=this.geometry.attributes.color.array;return i.set(r),i.toArray(n,0),i.toArray(n,3),i.set(e),i.toArray(n,6),i.toArray(n,9),i.set(t),i.toArray(n,12),i.toArray(n,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}},b.BackSide=1,b.BasicDepthPacking=3200,b.BasicShadowMap=0,b.BatchedMesh=Zu,b.Bone=oh,b.BooleanKeyframeTrack=fs,b.Box2=class{constructor(r=new te(1/0,1/0),e=new te(-1/0,-1/0)){this.isBox2=!0,this.min=r,this.max=e}set(r,e){return this.min.copy(r),this.max.copy(e),this}setFromPoints(r){this.makeEmpty();for(let e=0,t=r.length;e<t;e++)this.expandByPoint(r[e]);return this}setFromCenterAndSize(r,e){const t=op.copy(e).multiplyScalar(.5);return this.min.copy(r).sub(t),this.max.copy(r).add(t),this}clone(){return new this.constructor().copy(this)}copy(r){return this.min.copy(r.min),this.max.copy(r.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(r){return this.isEmpty()?r.set(0,0):r.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(r){return this.isEmpty()?r.set(0,0):r.subVectors(this.max,this.min)}expandByPoint(r){return this.min.min(r),this.max.max(r),this}expandByVector(r){return this.min.sub(r),this.max.add(r),this}expandByScalar(r){return this.min.addScalar(-r),this.max.addScalar(r),this}containsPoint(r){return!(r.x<this.min.x||r.x>this.max.x||r.y<this.min.y||r.y>this.max.y)}containsBox(r){return this.min.x<=r.min.x&&r.max.x<=this.max.x&&this.min.y<=r.min.y&&r.max.y<=this.max.y}getParameter(r,e){return e.set((r.x-this.min.x)/(this.max.x-this.min.x),(r.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(r){return!(r.max.x<this.min.x||r.min.x>this.max.x||r.max.y<this.min.y||r.min.y>this.max.y)}clampPoint(r,e){return e.copy(r).clamp(this.min,this.max)}distanceToPoint(r){return this.clampPoint(r,op).distanceTo(r)}intersect(r){return this.min.max(r.min),this.max.min(r.max),this.isEmpty()&&this.makeEmpty(),this}union(r){return this.min.min(r.min),this.max.max(r.max),this}translate(r){return this.min.add(r),this.max.add(r),this}equals(r){return r.min.equals(this.min)&&r.max.equals(this.max)}},b.Box3=Jt,b.Box3Helper=class extends Dn{constructor(r,e=16776960){const t=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Ye;i.setIndex(new mt(t,1)),i.setAttribute("position",new Ee([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(i,new gi({color:e,toneMapped:!1})),this.box=r,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(r){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(r))}dispose(){this.geometry.dispose(),this.material.dispose()}},b.BoxGeometry=Kn,b.BoxHelper=class extends Dn{constructor(r,e=16776960){const t=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),n=new Ye;n.setIndex(new mt(t,1)),n.setAttribute("position",new mt(i,3)),super(n,new gi({color:e,toneMapped:!1})),this.object=r,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(r){if(r!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&ec.setFromObject(this.object),ec.isEmpty())return;const e=ec.min,t=ec.max,i=this.geometry.attributes.position,n=i.array;n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=e.x,n[4]=t.y,n[5]=t.z,n[6]=e.x,n[7]=e.y,n[8]=t.z,n[9]=t.x,n[10]=e.y,n[11]=t.z,n[12]=t.x,n[13]=t.y,n[14]=e.z,n[15]=e.x,n[16]=t.y,n[17]=e.z,n[18]=e.x,n[19]=e.y,n[20]=e.z,n[21]=t.x,n[22]=e.y,n[23]=e.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(r){return this.object=r,this.update(),this}copy(r,e){return super.copy(r,e),this.object=r.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}},b.BufferAttribute=mt,b.BufferGeometry=Ye,b.BufferGeometryLoader=Yd,b.ByteType=1010,b.Cache=_s,b.Camera=Qr,b.CameraHelper=class extends Dn{constructor(r){const e=new Ye,t=new gi({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],n=[],s={};function a(m,f){o(m),o(f)}function o(m){i.push(0,0,0),n.push(0,0,0),s[m]===void 0&&(s[m]=[]),s[m].push(i.length/3-1)}a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4"),e.setAttribute("position",new Ee(i,3)),e.setAttribute("color",new Ee(n,3)),super(e,t),this.type="CameraHelper",this.camera=r,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=r.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update();const l=new be(16755200),c=new be(16711680),h=new be(43775),d=new be(16777215),p=new be(3355443);this.setColors(l,c,h,d,p)}setColors(r,e,t,i,n){const s=this.geometry.getAttribute("color");s.setXYZ(0,r.r,r.g,r.b),s.setXYZ(1,r.r,r.g,r.b),s.setXYZ(2,r.r,r.g,r.b),s.setXYZ(3,r.r,r.g,r.b),s.setXYZ(4,r.r,r.g,r.b),s.setXYZ(5,r.r,r.g,r.b),s.setXYZ(6,r.r,r.g,r.b),s.setXYZ(7,r.r,r.g,r.b),s.setXYZ(8,r.r,r.g,r.b),s.setXYZ(9,r.r,r.g,r.b),s.setXYZ(10,r.r,r.g,r.b),s.setXYZ(11,r.r,r.g,r.b),s.setXYZ(12,r.r,r.g,r.b),s.setXYZ(13,r.r,r.g,r.b),s.setXYZ(14,r.r,r.g,r.b),s.setXYZ(15,r.r,r.g,r.b),s.setXYZ(16,r.r,r.g,r.b),s.setXYZ(17,r.r,r.g,r.b),s.setXYZ(18,r.r,r.g,r.b),s.setXYZ(19,r.r,r.g,r.b),s.setXYZ(20,r.r,r.g,r.b),s.setXYZ(21,r.r,r.g,r.b),s.setXYZ(22,r.r,r.g,r.b),s.setXYZ(23,r.r,r.g,r.b),s.setXYZ(24,e.r,e.g,e.b),s.setXYZ(25,e.r,e.g,e.b),s.setXYZ(26,e.r,e.g,e.b),s.setXYZ(27,e.r,e.g,e.b),s.setXYZ(28,e.r,e.g,e.b),s.setXYZ(29,e.r,e.g,e.b),s.setXYZ(30,e.r,e.g,e.b),s.setXYZ(31,e.r,e.g,e.b),s.setXYZ(32,t.r,t.g,t.b),s.setXYZ(33,t.r,t.g,t.b),s.setXYZ(34,t.r,t.g,t.b),s.setXYZ(35,t.r,t.g,t.b),s.setXYZ(36,t.r,t.g,t.b),s.setXYZ(37,t.r,t.g,t.b),s.setXYZ(38,i.r,i.g,i.b),s.setXYZ(39,i.r,i.g,i.b),s.setXYZ(40,n.r,n.g,n.b),s.setXYZ(41,n.r,n.g,n.b),s.setXYZ(42,n.r,n.g,n.b),s.setXYZ(43,n.r,n.g,n.b),s.setXYZ(44,n.r,n.g,n.b),s.setXYZ(45,n.r,n.g,n.b),s.setXYZ(46,n.r,n.g,n.b),s.setXYZ(47,n.r,n.g,n.b),s.setXYZ(48,n.r,n.g,n.b),s.setXYZ(49,n.r,n.g,n.b),s.needsUpdate=!0}update(){const r=this.geometry,e=this.pointMap;It.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Bt("c",e,r,It,0,0,-1),Bt("t",e,r,It,0,0,1),Bt("n1",e,r,It,-1,-1,-1),Bt("n2",e,r,It,1,-1,-1),Bt("n3",e,r,It,-1,1,-1),Bt("n4",e,r,It,1,1,-1),Bt("f1",e,r,It,-1,-1,1),Bt("f2",e,r,It,1,-1,1),Bt("f3",e,r,It,-1,1,1),Bt("f4",e,r,It,1,1,1),Bt("u1",e,r,It,.7,1.1,-1),Bt("u2",e,r,It,-.7,1.1,-1),Bt("u3",e,r,It,0,2,-1),Bt("cf1",e,r,It,-1,0,1),Bt("cf2",e,r,It,1,0,1),Bt("cf3",e,r,It,0,-1,1),Bt("cf4",e,r,It,0,1,1),Bt("cn1",e,r,It,-1,0,-1),Bt("cn2",e,r,It,1,0,-1),Bt("cn3",e,r,It,0,-1,-1),Bt("cn4",e,r,It,0,1,-1),r.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}},b.CanvasTexture=class extends St{constructor(r,e,t,i,n,s,a,o,l){super(r,e,t,i,n,s,a,o,l),this.isCanvasTexture=!0,this.needsUpdate=!0}},b.CapsuleGeometry=Ll,b.CatmullRomCurve3=ad,b.CineonToneMapping=3,b.CircleGeometry=Pl,b.ClampToEdgeWrapping=1001,b.Clock=Qd,b.Color=be,b.ColorKeyframeTrack=Rh,b.ColorManagement=Qe,b.CompressedArrayTexture=class extends Tl{constructor(r,e,t,i,n,s){super(r,e,t,n,s),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=1001}},b.CompressedCubeTexture=class extends Tl{constructor(r,e,t){super(void 0,r[0].width,r[0].height,e,t,301),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=r}},b.CompressedTexture=Tl,b.CompressedTextureLoader=class extends Ei{constructor(r){super(r)}load(r,e,t,i){const n=this,s=[],a=new Tl,o=new sr(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(n.withCredentials);let l=0;function c(h){o.load(r[h],function(d){const p=n.parse(d,!0);s[h]={width:p.width,height:p.height,format:p.format,mipmaps:p.mipmaps},l+=1,l===6&&(p.mipmapCount===1&&(a.minFilter=1006),a.image=s,a.format=p.format,a.needsUpdate=!0,e&&e(a))},t,i)}if(Array.isArray(r))for(let h=0,d=r.length;h<d;++h)c(h);else o.load(r,function(h){const d=n.parse(h,!0);if(d.isCubemap){const p=d.mipmaps.length/d.mipmapCount;for(let m=0;m<p;m++){s[m]={mipmaps:[]};for(let f=0;f<d.mipmapCount;f++)s[m].mipmaps.push(d.mipmaps[m*d.mipmapCount+f]),s[m].format=d.format,s[m].width=d.width,s[m].height=d.height}a.image=s}else a.image.width=d.width,a.image.height=d.height,a.mipmaps=d.mipmaps;d.mipmapCount===1&&(a.minFilter=1006),a.format=d.format,a.needsUpdate=!0,e&&e(a)},t,i);return a}},b.ConeGeometry=Il,b.ConstantAlphaFactor=213,b.ConstantColorFactor=211,b.CubeCamera=$o,b.CubeReflectionMapping=301,b.CubeRefractionMapping=302,b.CubeTexture=es,b.CubeTextureLoader=class extends Ei{constructor(r){super(r)}load(r,e,t,i){const n=new es;n.colorSpace=Dt;const s=new So(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let a=0;function o(l){s.load(r[l],function(c){n.images[l]=c,a++,a===6&&(n.needsUpdate=!0,e&&e(n))},void 0,i)}for(let l=0;l<r.length;++l)o(l);return n}},b.CubeUVReflectionMapping=306,b.CubicBezierCurve=_h,b.CubicBezierCurve3=ld,b.CubicInterpolant=Id,b.CullFaceBack=1,b.CullFaceFront=2,b.CullFaceFrontBack=3,b.CullFaceNone=0,b.Curve=pn,b.CurvePath=hd,b.CustomBlending=5,b.CustomToneMapping=5,b.CylinderGeometry=xa,b.Cylindrical=class{constructor(r=1,e=0,t=0){return this.radius=r,this.theta=e,this.y=t,this}set(r,e,t){return this.radius=r,this.theta=e,this.y=t,this}copy(r){return this.radius=r.radius,this.theta=r.theta,this.y=r.y,this}setFromVector3(r){return this.setFromCartesianCoords(r.x,r.y,r.z)}setFromCartesianCoords(r,e,t){return this.radius=Math.sqrt(r*r+t*t),this.theta=Math.atan2(r,t),this.y=e,this}clone(){return new this.constructor().copy(this)}},b.Data3DTexture=Hr,b.DataArrayTexture=kr,b.DataTexture=hs,b.DataTextureLoader=class extends Ei{constructor(r){super(r)}load(r,e,t,i){const n=this,s=new hs,a=new sr(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(n.withCredentials),a.load(r,function(o){let l;try{l=n.parse(o)}catch(c){if(i===void 0)return void console.error(c);i(c)}l.image!==void 0?s.image=l.image:l.data!==void 0&&(s.image.width=l.width,s.image.height=l.height,s.image.data=l.data),s.wrapS=l.wrapS!==void 0?l.wrapS:1001,s.wrapT=l.wrapT!==void 0?l.wrapT:1001,s.magFilter=l.magFilter!==void 0?l.magFilter:1006,s.minFilter=l.minFilter!==void 0?l.minFilter:1006,s.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.colorSpace!==void 0?s.colorSpace=l.colorSpace:l.encoding!==void 0&&(s.encoding=l.encoding),l.flipY!==void 0&&(s.flipY=l.flipY),l.format!==void 0&&(s.format=l.format),l.type!==void 0&&(s.type=l.type),l.mipmaps!==void 0&&(s.mipmaps=l.mipmaps,s.minFilter=1008),l.mipmapCount===1&&(s.minFilter=1006),l.generateMipmaps!==void 0&&(s.generateMipmaps=l.generateMipmaps),s.needsUpdate=!0,e&&e(s,l)},t,i),s}},b.DataUtils=Dc,b.DecrementStencilOp=7683,b.DecrementWrapStencilOp=34056,b.DefaultLoadingManager=Nd,b.DepthFormat=1026,b.DepthStencilFormat=1027,b.DepthTexture=Ja,b.DetachedBindMode=Po,b.DirectionalLight=Gd,b.DirectionalLightHelper=class extends Xe{constructor(r,e,t){super(),this.light=r,this.matrix=r.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="DirectionalLightHelper",e===void 0&&(e=1);let i=new Ye;i.setAttribute("position",new Ee([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const n=new gi({fog:!1,toneMapped:!1});this.lightPlane=new Er(i,n),this.add(this.lightPlane),i=new Ye,i.setAttribute("position",new Ee([0,0,0,0,0,1],3)),this.targetLine=new Er(i,n),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),pp.setFromMatrixPosition(this.light.matrixWorld),Kl.setFromMatrixPosition(this.light.target.matrixWorld),mp.subVectors(Kl,pp),this.lightPlane.lookAt(Kl),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Kl),this.targetLine.scale.z=mp.length()}},b.DiscreteInterpolant=Dd,b.DisplayP3ColorSpace=Qi,b.DodecahedronGeometry=Dl,b.DoubleSide=2,b.DstAlphaFactor=206,b.DstColorFactor=208,b.DynamicCopyUsage=35050,b.DynamicDrawUsage=35048,b.DynamicReadUsage=35049,b.EdgesGeometry=ud,b.EllipseCurve=Al,b.EqualCompare=514,b.EqualDepth=4,b.EqualStencilFunc=514,b.EquirectangularReflectionMapping=303,b.EquirectangularRefractionMapping=304,b.Euler=mr,b.EventDispatcher=Fi,b.ExtrudeGeometry=kl,b.FileLoader=sr,b.Float16BufferAttribute=class extends mt{constructor(r,e,t){super(new Uint16Array(r),e,t),this.isFloat16BufferAttribute=!0}getX(r){let e=Jr(this.array[r*this.itemSize]);return this.normalized&&(e=Yt(e,this.array)),e}setX(r,e){return this.normalized&&(e=je(e,this.array)),this.array[r*this.itemSize]=ri(e),this}getY(r){let e=Jr(this.array[r*this.itemSize+1]);return this.normalized&&(e=Yt(e,this.array)),e}setY(r,e){return this.normalized&&(e=je(e,this.array)),this.array[r*this.itemSize+1]=ri(e),this}getZ(r){let e=Jr(this.array[r*this.itemSize+2]);return this.normalized&&(e=Yt(e,this.array)),e}setZ(r,e){return this.normalized&&(e=je(e,this.array)),this.array[r*this.itemSize+2]=ri(e),this}getW(r){let e=Jr(this.array[r*this.itemSize+3]);return this.normalized&&(e=Yt(e,this.array)),e}setW(r,e){return this.normalized&&(e=je(e,this.array)),this.array[r*this.itemSize+3]=ri(e),this}setXY(r,e,t){return r*=this.itemSize,this.normalized&&(e=je(e,this.array),t=je(t,this.array)),this.array[r+0]=ri(e),this.array[r+1]=ri(t),this}setXYZ(r,e,t,i){return r*=this.itemSize,this.normalized&&(e=je(e,this.array),t=je(t,this.array),i=je(i,this.array)),this.array[r+0]=ri(e),this.array[r+1]=ri(t),this.array[r+2]=ri(i),this}setXYZW(r,e,t,i,n){return r*=this.itemSize,this.normalized&&(e=je(e,this.array),t=je(t,this.array),i=je(i,this.array),n=je(n,this.array)),this.array[r+0]=ri(e),this.array[r+1]=ri(t),this.array[r+2]=ri(i),this.array[r+3]=ri(n),this}},b.Float32BufferAttribute=Ee,b.Float64BufferAttribute=class extends mt{constructor(r,e,t){super(new Float64Array(r),e,t)}},b.FloatType=1015,b.Fog=dl,b.FogExp2=ul,b.FramebufferTexture=class extends St{constructor(r,e){super({width:r,height:e}),this.isFramebufferTexture=!0,this.magFilter=1003,this.minFilter=1003,this.generateMipmaps=!1,this.needsUpdate=!0}},b.FrontSide=0,b.Frustum=yr,b.GLBufferAttribute=class{constructor(r,e,t,i,n){this.isGLBufferAttribute=!0,this.name="",this.buffer=r,this.type=e,this.itemSize=t,this.elementSize=i,this.count=n,this.version=0}set needsUpdate(r){r===!0&&this.version++}setBuffer(r){return this.buffer=r,this}setType(r,e){return this.type=r,this.elementSize=e,this}setItemSize(r){return this.itemSize=r,this}setCount(r){return this.count=r,this}},b.GLSL1="100",b.GLSL3=bn,b.GreaterCompare=516,b.GreaterDepth=6,b.GreaterEqualCompare=518,b.GreaterEqualDepth=5,b.GreaterEqualStencilFunc=518,b.GreaterStencilFunc=516,b.GridHelper=class extends Dn{constructor(r=10,e=10,t=4473924,i=8947848){t=new be(t),i=new be(i);const n=e/2,s=r/e,a=r/2,o=[],l=[];for(let h=0,d=0,p=-a;h<=e;h++,p+=s){o.push(-a,0,p,a,0,p),o.push(p,0,-a,p,0,a);const m=h===n?t:i;m.toArray(l,d),d+=3,m.toArray(l,d),d+=3,m.toArray(l,d),d+=3,m.toArray(l,d),d+=3}const c=new Ye;c.setAttribute("position",new Ee(o,3)),c.setAttribute("color",new Ee(l,3)),super(c,new gi({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}},b.Group=da,b.HalfFloatType=1016,b.HemisphereLight=Od,b.HemisphereLightHelper=class extends Xe{constructor(r,e,t){super(),this.light=r,this.matrix=r.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="HemisphereLightHelper";const i=new _o(e);i.rotateY(.5*Math.PI),this.material=new An({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const n=i.getAttribute("position"),s=new Float32Array(3*n.count);i.setAttribute("color",new mt(s,3)),this.add(new Ft(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const r=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const e=r.geometry.getAttribute("color");up.copy(this.light.color),dp.copy(this.light.groundColor);for(let t=0,i=e.count;t<i;t++){const n=t<i/2?up:dp;e.setXYZ(t,n.r,n.g,n.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),r.lookAt(Dm.setFromMatrixPosition(this.light.matrixWorld).negate())}},b.IcosahedronGeometry=Hl,b.ImageBitmapLoader=class extends Ei{constructor(r){super(r),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(r){return this.options=r,this}load(r,e,t,i){r===void 0&&(r=""),this.path!==void 0&&(r=this.path+r),r=this.manager.resolveURL(r);const n=this,s=_s.get(r);if(s!==void 0)return n.manager.itemStart(r),setTimeout(function(){e&&e(s),n.manager.itemEnd(r)},0),s;const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,fetch(r,a).then(function(o){return o.blob()}).then(function(o){return createImageBitmap(o,Object.assign(n.options,{colorSpaceConversion:"none"}))}).then(function(o){_s.add(r,o),e&&e(o),n.manager.itemEnd(r)}).catch(function(o){i&&i(o),n.manager.itemError(r),n.manager.itemEnd(r)}),n.manager.itemStart(r)}},b.ImageLoader=So,b.ImageUtils=Fs,b.IncrementStencilOp=7682,b.IncrementWrapStencilOp=34055,b.InstancedBufferAttribute=_a,b.InstancedBufferGeometry=qd,b.InstancedInterleavedBuffer=class extends pl{constructor(r,e,t=1){super(r,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=t}copy(r){return super.copy(r),this.meshPerAttribute=r.meshPerAttribute,this}clone(r){const e=super.clone(r);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(r){const e=super.toJSON(r);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}},b.InstancedMesh=Xu,b.Int16BufferAttribute=class extends mt{constructor(r,e,t){super(new Int16Array(r),e,t)}},b.Int32BufferAttribute=class extends mt{constructor(r,e,t){super(new Int32Array(r),e,t)}},b.Int8BufferAttribute=class extends mt{constructor(r,e,t){super(new Int8Array(r),e,t)}},b.IntType=1013,b.InterleavedBuffer=pl,b.InterleavedBufferAttribute=cs,b.Interpolant=yo,b.InterpolateDiscrete=2300,b.InterpolateLinear=2301,b.InterpolateSmooth=2302,b.InvertStencilOp=5386,b.KeepStencilOp=7680,b.KeyframeTrack=mn,b.LOD=Ou,b.LatheGeometry=po,b.Layers=Xr,b.LessCompare=513,b.LessDepth=2,b.LessEqualCompare=515,b.LessEqualDepth=3,b.LessEqualStencilFunc=515,b.LessStencilFunc=513,b.Light=Ar,b.LightProbe=Xd,b.Line=Er,b.Line3=class{constructor(r=new R,e=new R){this.start=r,this.end=e}set(r,e){return this.start.copy(r),this.end.copy(e),this}copy(r){return this.start.copy(r.start),this.end.copy(r.end),this}getCenter(r){return r.addVectors(this.start,this.end).multiplyScalar(.5)}delta(r){return r.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(r,e){return this.delta(e).multiplyScalar(r).add(this.start)}closestPointToPointParameter(r,e){lp.subVectors(r,this.start),Jl.subVectors(this.end,this.start);const t=Jl.dot(Jl);let i=Jl.dot(lp)/t;return e&&(i=Mt(i,0,1)),i}closestPointToPoint(r,e,t){const i=this.closestPointToPointParameter(r,e);return this.delta(t).multiplyScalar(i).add(this.start)}applyMatrix4(r){return this.start.applyMatrix4(r),this.end.applyMatrix4(r),this}equals(r){return r.start.equals(this.start)&&r.end.equals(this.end)}clone(){return new this.constructor().copy(this)}},b.LineBasicMaterial=gi,b.LineCurve=vh,b.LineCurve3=cd,b.LineDashedMaterial=Rd,b.LineLoop=td,b.LineSegments=Dn,b.LinearDisplayP3ColorSpace=Ut,b.LinearEncoding=3e3,b.LinearFilter=1006,b.LinearInterpolant=Ch,b.LinearMipMapLinearFilter=1008,b.LinearMipMapNearestFilter=1007,b.LinearMipmapLinearFilter=1008,b.LinearMipmapNearestFilter=1007,b.LinearSRGBColorSpace=Oi,b.LinearToneMapping=1,b.LinearTransfer=Gt,b.Loader=Ei,b.LoaderUtils=Uh,b.LoadingManager=Lh,b.LoopOnce=2200,b.LoopPingPong=2202,b.LoopRepeat=2201,b.LuminanceAlphaFormat=1025,b.LuminanceFormat=1024,b.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},b.Material=qt,b.MaterialLoader=Yl,b.MathUtils=Bi,b.Matrix3=Oe,b.Matrix4=Ue,b.MaxEquation=104,b.Mesh=Ft,b.MeshBasicMaterial=An,b.MeshDepthMaterial=eh,b.MeshDistanceMaterial=th,b.MeshLambertMaterial=Ad,b.MeshMatcapMaterial=Cd,b.MeshNormalMaterial=Td,b.MeshPhongMaterial=wd,b.MeshPhysicalMaterial=Sd,b.MeshStandardMaterial=Eh,b.MeshToonMaterial=Ed,b.MinEquation=103,b.MirroredRepeatWrapping=1002,b.MixOperation=1,b.MultiplyBlending=4,b.MultiplyOperation=0,b.NearestFilter=1003,b.NearestMipMapLinearFilter=1005,b.NearestMipMapNearestFilter=1004,b.NearestMipmapLinearFilter=1005,b.NearestMipmapNearestFilter=1004,b.NeverCompare=512,b.NeverDepth=0,b.NeverStencilFunc=512,b.NoBlending=0,b.NoColorSpace=ui,b.NoToneMapping=0,b.NormalAnimationBlendMode=2500,b.NormalBlending=1,b.NotEqualCompare=517,b.NotEqualDepth=7,b.NotEqualStencilFunc=517,b.NumberKeyframeTrack=xo,b.Object3D=Xe,b.ObjectLoader=class extends Ei{constructor(r){super(r)}load(r,e,t,i){const n=this,s=this.path===""?Uh.extractUrlBase(r):this.path;this.resourcePath=this.resourcePath||s;const a=new sr(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(r,function(o){let l=null;try{l=JSON.parse(o)}catch(h){return i!==void 0&&i(h),void console.error("THREE:ObjectLoader: Can't parse "+r+".",h.message)}const c=l.metadata;if(c===void 0||c.type===void 0||c.type.toLowerCase()==="geometry")return i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+r)),void console.error("THREE.ObjectLoader: Can't load "+r);n.parse(l,e)},t,i)}async loadAsync(r,e){const t=this.path===""?Uh.extractUrlBase(r):this.path;this.resourcePath=this.resourcePath||t;const i=new sr(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials);const n=await i.loadAsync(r,e),s=JSON.parse(n),a=s.metadata;if(a===void 0||a.type===void 0||a.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+r);return await this.parseAsync(s)}parse(r,e){const t=this.parseAnimations(r.animations),i=this.parseShapes(r.shapes),n=this.parseGeometries(r.geometries,i),s=this.parseImages(r.images,function(){e!==void 0&&e(l)}),a=this.parseTextures(r.textures,s),o=this.parseMaterials(r.materials,a),l=this.parseObject(r.object,n,o,a,t),c=this.parseSkeletons(r.skeletons,l);if(this.bindSkeletons(l,c),e!==void 0){let h=!1;for(const d in s)if(s[d].data instanceof HTMLImageElement){h=!0;break}h===!1&&e(l)}return l}async parseAsync(r){const e=this.parseAnimations(r.animations),t=this.parseShapes(r.shapes),i=this.parseGeometries(r.geometries,t),n=await this.parseImagesAsync(r.images),s=this.parseTextures(r.textures,n),a=this.parseMaterials(r.materials,s),o=this.parseObject(r.object,i,a,s,e),l=this.parseSkeletons(r.skeletons,o);return this.bindSkeletons(o,l),o}parseShapes(r){const e={};if(r!==void 0)for(let t=0,i=r.length;t<i;t++){const n=new ds().fromJSON(r[t]);e[n.uuid]=n}return e}parseSkeletons(r,e){const t={},i={};if(e.traverse(function(n){n.isBone&&(i[n.uuid]=n)}),r!==void 0)for(let n=0,s=r.length;n<s;n++){const a=new yl().fromJSON(r[n],i);t[a.uuid]=a}return t}parseGeometries(r,e){const t={};if(r!==void 0){const i=new Yd;for(let n=0,s=r.length;n<s;n++){let a;const o=r[n];switch(o.type){case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(o);break;default:o.type in xd?a=xd[o.type].fromJSON(o,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${o.type}"`)}a.uuid=o.uuid,o.name!==void 0&&(a.name=o.name),o.userData!==void 0&&(a.userData=o.userData),t[o.uuid]=a}}return t}parseMaterials(r,e){const t={},i={};if(r!==void 0){const n=new Yl;n.setTextures(e);for(let s=0,a=r.length;s<a;s++){const o=r[s];t[o.uuid]===void 0&&(t[o.uuid]=n.parse(o)),i[o.uuid]=t[o.uuid]}}return i}parseAnimations(r){const e={};if(r!==void 0)for(let t=0;t<r.length;t++){const i=r[t],n=Mo.parse(i);e[n.uuid]=n}return e}parseImages(r,e){const t=this,i={};let n;function s(a){if(typeof a=="string"){const o=a;return function(l){return t.manager.itemStart(l),n.load(l,function(){t.manager.itemEnd(l)},void 0,function(){t.manager.itemError(l),t.manager.itemEnd(l)})}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(o)?o:t.resourcePath+o)}return a.data?{data:Zt(a.type,a.data),width:a.width,height:a.height}:null}if(r!==void 0&&r.length>0){const a=new Lh(e);n=new So(a),n.setCrossOrigin(this.crossOrigin);for(let o=0,l=r.length;o<l;o++){const c=r[o],h=c.url;if(Array.isArray(h)){const d=[];for(let p=0,m=h.length;p<m;p++){const f=s(h[p]);f!==null&&(f instanceof HTMLImageElement?d.push(f):d.push(new hs(f.data,f.width,f.height)))}i[c.uuid]=new tn(d)}else{const d=s(c.url);i[c.uuid]=new tn(d)}}}return i}async parseImagesAsync(r){const e=this,t={};let i;async function n(s){if(typeof s=="string"){const a=s,o=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:e.resourcePath+a;return await i.loadAsync(o)}return s.data?{data:Zt(s.type,s.data),width:s.width,height:s.height}:null}if(r!==void 0&&r.length>0){i=new So(this.manager),i.setCrossOrigin(this.crossOrigin);for(let s=0,a=r.length;s<a;s++){const o=r[s],l=o.url;if(Array.isArray(l)){const c=[];for(let h=0,d=l.length;h<d;h++){const p=l[h],m=await n(p);m!==null&&(m instanceof HTMLImageElement?c.push(m):c.push(new hs(m.data,m.width,m.height)))}t[o.uuid]=new tn(c)}else{const c=await n(o.url);t[o.uuid]=new tn(c)}}}return t}parseTextures(r,e){function t(n,s){return typeof n=="number"?n:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",n),s[n])}const i={};if(r!==void 0)for(let n=0,s=r.length;n<s;n++){const a=r[n];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),e[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const o=e[a.image],l=o.data;let c;Array.isArray(l)?(c=new es,l.length===6&&(c.needsUpdate=!0)):(c=l&&l.data?new hs:new St,l&&(c.needsUpdate=!0)),c.source=o,c.uuid=a.uuid,a.name!==void 0&&(c.name=a.name),a.mapping!==void 0&&(c.mapping=t(a.mapping,wm)),a.channel!==void 0&&(c.channel=a.channel),a.offset!==void 0&&c.offset.fromArray(a.offset),a.repeat!==void 0&&c.repeat.fromArray(a.repeat),a.center!==void 0&&c.center.fromArray(a.center),a.rotation!==void 0&&(c.rotation=a.rotation),a.wrap!==void 0&&(c.wrapS=t(a.wrap[0],Zd),c.wrapT=t(a.wrap[1],Zd)),a.format!==void 0&&(c.format=a.format),a.internalFormat!==void 0&&(c.internalFormat=a.internalFormat),a.type!==void 0&&(c.type=a.type),a.colorSpace!==void 0&&(c.colorSpace=a.colorSpace),a.encoding!==void 0&&(c.encoding=a.encoding),a.minFilter!==void 0&&(c.minFilter=t(a.minFilter,Jd)),a.magFilter!==void 0&&(c.magFilter=t(a.magFilter,Jd)),a.anisotropy!==void 0&&(c.anisotropy=a.anisotropy),a.flipY!==void 0&&(c.flipY=a.flipY),a.generateMipmaps!==void 0&&(c.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(c.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(c.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(c.compareFunction=a.compareFunction),a.userData!==void 0&&(c.userData=a.userData),i[a.uuid]=c}return i}parseObject(r,e,t,i,n){let s,a,o;function l(d){return e[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),e[d]}function c(d){if(d!==void 0){if(Array.isArray(d)){const p=[];for(let m=0,f=d.length;m<f;m++){const v=d[m];t[v]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",v),p.push(t[v])}return p}return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),t[d]}}function h(d){return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),i[d]}switch(r.type){case"Scene":s=new Lu,r.background!==void 0&&(Number.isInteger(r.background)?s.background=new be(r.background):s.background=h(r.background)),r.environment!==void 0&&(s.environment=h(r.environment)),r.fog!==void 0&&(r.fog.type==="Fog"?s.fog=new dl(r.fog.color,r.fog.near,r.fog.far):r.fog.type==="FogExp2"&&(s.fog=new ul(r.fog.color,r.fog.density)),r.fog.name!==""&&(s.fog.name=r.fog.name)),r.backgroundBlurriness!==void 0&&(s.backgroundBlurriness=r.backgroundBlurriness),r.backgroundIntensity!==void 0&&(s.backgroundIntensity=r.backgroundIntensity);break;case"PerspectiveCamera":s=new Tt(r.fov,r.aspect,r.near,r.far),r.focus!==void 0&&(s.focus=r.focus),r.zoom!==void 0&&(s.zoom=r.zoom),r.filmGauge!==void 0&&(s.filmGauge=r.filmGauge),r.filmOffset!==void 0&&(s.filmOffset=r.filmOffset),r.view!==void 0&&(s.view=Object.assign({},r.view));break;case"OrthographicCamera":s=new sa(r.left,r.right,r.top,r.bottom,r.near,r.far),r.zoom!==void 0&&(s.zoom=r.zoom),r.view!==void 0&&(s.view=Object.assign({},r.view));break;case"AmbientLight":s=new Vd(r.color,r.intensity);break;case"DirectionalLight":s=new Gd(r.color,r.intensity);break;case"PointLight":s=new Hd(r.color,r.intensity,r.distance,r.decay);break;case"RectAreaLight":s=new Wd(r.color,r.intensity,r.width,r.height);break;case"SpotLight":s=new zd(r.color,r.intensity,r.distance,r.angle,r.penumbra,r.decay);break;case"HemisphereLight":s=new Od(r.color,r.groundColor,r.intensity);break;case"LightProbe":s=new Xd().fromJSON(r);break;case"SkinnedMesh":a=l(r.geometry),o=c(r.material),s=new Gu(a,o),r.bindMode!==void 0&&(s.bindMode=r.bindMode),r.bindMatrix!==void 0&&s.bindMatrix.fromArray(r.bindMatrix),r.skeleton!==void 0&&(s.skeleton=r.skeleton);break;case"Mesh":a=l(r.geometry),o=c(r.material),s=new Ft(a,o);break;case"InstancedMesh":a=l(r.geometry),o=c(r.material);const d=r.count,p=r.instanceMatrix,m=r.instanceColor;s=new Xu(a,o,d),s.instanceMatrix=new _a(new Float32Array(p.array),16),m!==void 0&&(s.instanceColor=new _a(new Float32Array(m.array),m.itemSize));break;case"BatchedMesh":a=l(r.geometry),o=c(r.material),s=new Zu(r.maxGeometryCount,r.maxVertexCount,r.maxIndexCount,o),s.geometry=a,s.perObjectFrustumCulled=r.perObjectFrustumCulled,s.sortObjects=r.sortObjects,s._drawRanges=r.drawRanges,s._reservedRanges=r.reservedRanges,s._visibility=r.visibility,s._active=r.active,s._bounds=r.bounds.map(f=>{const v=new Jt;v.min.fromArray(f.boxMin),v.max.fromArray(f.boxMax);const g=new Wt;return g.radius=f.sphereRadius,g.center.fromArray(f.sphereCenter),{boxInitialized:f.boxInitialized,box:v,sphereInitialized:f.sphereInitialized,sphere:g}}),s._maxGeometryCount=r.maxGeometryCount,s._maxVertexCount=r.maxVertexCount,s._maxIndexCount=r.maxIndexCount,s._geometryInitialized=r.geometryInitialized,s._geometryCount=r.geometryCount,s._matricesTexture=h(r.matricesTexture.uuid);break;case"LOD":s=new Ou;break;case"Line":s=new Er(l(r.geometry),c(r.material));break;case"LineLoop":s=new td(l(r.geometry),c(r.material));break;case"LineSegments":s=new Dn(l(r.geometry),c(r.material));break;case"PointCloud":case"Points":s=new nd(l(r.geometry),c(r.material));break;case"Sprite":s=new Uu(c(r.material));break;case"Group":s=new da;break;case"Bone":s=new oh;break;default:s=new Xe}if(s.uuid=r.uuid,r.name!==void 0&&(s.name=r.name),r.matrix!==void 0?(s.matrix.fromArray(r.matrix),r.matrixAutoUpdate!==void 0&&(s.matrixAutoUpdate=r.matrixAutoUpdate),s.matrixAutoUpdate&&s.matrix.decompose(s.position,s.quaternion,s.scale)):(r.position!==void 0&&s.position.fromArray(r.position),r.rotation!==void 0&&s.rotation.fromArray(r.rotation),r.quaternion!==void 0&&s.quaternion.fromArray(r.quaternion),r.scale!==void 0&&s.scale.fromArray(r.scale)),r.up!==void 0&&s.up.fromArray(r.up),r.castShadow!==void 0&&(s.castShadow=r.castShadow),r.receiveShadow!==void 0&&(s.receiveShadow=r.receiveShadow),r.shadow&&(r.shadow.bias!==void 0&&(s.shadow.bias=r.shadow.bias),r.shadow.normalBias!==void 0&&(s.shadow.normalBias=r.shadow.normalBias),r.shadow.radius!==void 0&&(s.shadow.radius=r.shadow.radius),r.shadow.mapSize!==void 0&&s.shadow.mapSize.fromArray(r.shadow.mapSize),r.shadow.camera!==void 0&&(s.shadow.camera=this.parseObject(r.shadow.camera))),r.visible!==void 0&&(s.visible=r.visible),r.frustumCulled!==void 0&&(s.frustumCulled=r.frustumCulled),r.renderOrder!==void 0&&(s.renderOrder=r.renderOrder),r.userData!==void 0&&(s.userData=r.userData),r.layers!==void 0&&(s.layers.mask=r.layers),r.children!==void 0){const d=r.children;for(let p=0;p<d.length;p++)s.add(this.parseObject(d[p],e,t,i,n))}if(r.animations!==void 0){const d=r.animations;for(let p=0;p<d.length;p++){const m=d[p];s.animations.push(n[m])}}if(r.type==="LOD"){r.autoUpdate!==void 0&&(s.autoUpdate=r.autoUpdate);const d=r.levels;for(let p=0;p<d.length;p++){const m=d[p],f=s.getObjectByProperty("uuid",m.object);f!==void 0&&s.addLevel(f,m.distance,m.hysteresis)}}return s}bindSkeletons(r,e){Object.keys(e).length!==0&&r.traverse(function(t){if(t.isSkinnedMesh===!0&&t.skeleton!==void 0){const i=e[t.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",t.skeleton):t.bind(i,t.bindMatrix)}})}},b.ObjectSpaceNormalMap=1,b.OctahedronGeometry=_o,b.OneFactor=201,b.OneMinusConstantAlphaFactor=214,b.OneMinusConstantColorFactor=212,b.OneMinusDstAlphaFactor=207,b.OneMinusDstColorFactor=209,b.OneMinusSrcAlphaFactor=205,b.OneMinusSrcColorFactor=203,b.OrthographicCamera=sa,b.P3Primaries=xn,b.PCFShadowMap=1,b.PCFSoftShadowMap=2,b.PMREMGenerator=rs,b.Path=uo,b.PerspectiveCamera=Tt,b.Plane=Ii,b.PlaneGeometry=Qn,b.PlaneHelper=class extends Er{constructor(r,e=1,t=16776960){const i=t,n=new Ye;n.setAttribute("position",new Ee([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),n.computeBoundingSphere(),super(n,new gi({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=r,this.size=e;const s=new Ye;s.setAttribute("position",new Ee([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),s.computeBoundingSphere(),this.add(new Ft(s,new An({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(r){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(r)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}},b.PointLight=Hd,b.PointLightHelper=class extends Ft{constructor(r,e,t){super(new vo(e,4,2),new An({wireframe:!0,fog:!1,toneMapped:!1})),this.light=r,this.color=t,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}},b.Points=nd,b.PointsMaterial=uh,b.PolarGridHelper=class extends Dn{constructor(r=10,e=16,t=8,i=64,n=4473924,s=8947848){n=new be(n),s=new be(s);const a=[],o=[];if(e>1)for(let c=0;c<e;c++){const h=c/e*(2*Math.PI),d=Math.sin(h)*r,p=Math.cos(h)*r;a.push(0,0,0),a.push(d,0,p);const m=1&c?n:s;o.push(m.r,m.g,m.b),o.push(m.r,m.g,m.b)}for(let c=0;c<t;c++){const h=1&c?n:s,d=r-r/t*c;for(let p=0;p<i;p++){let m=p/i*(2*Math.PI),f=Math.sin(m)*d,v=Math.cos(m)*d;a.push(f,0,v),o.push(h.r,h.g,h.b),m=(p+1)/i*(2*Math.PI),f=Math.sin(m)*d,v=Math.cos(m)*d,a.push(f,0,v),o.push(h.r,h.g,h.b)}}const l=new Ye;l.setAttribute("position",new Ee(a,3)),l.setAttribute("color",new Ee(o,3)),super(l,new gi({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}},b.PolyhedronGeometry=Tr,b.PositionalAudio=class extends ip{constructor(r){super(r),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(r){return this.panner.refDistance=r,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(r){return this.panner.rolloffFactor=r,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(r){return this.panner.distanceModel=r,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(r){return this.panner.maxDistance=r,this}setDirectionalCone(r,e,t){return this.panner.coneInnerAngle=r,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=t,this}updateMatrixWorld(r){if(super.updateMatrixWorld(r),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(bs,np,Tm),Ms.set(0,0,1).applyQuaternion(np);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(bs.x,t),e.positionY.linearRampToValueAtTime(bs.y,t),e.positionZ.linearRampToValueAtTime(bs.z,t),e.orientationX.linearRampToValueAtTime(Ms.x,t),e.orientationY.linearRampToValueAtTime(Ms.y,t),e.orientationZ.linearRampToValueAtTime(Ms.z,t)}else e.setPosition(bs.x,bs.y,bs.z),e.setOrientation(Ms.x,Ms.y,Ms.z)}},b.PropertyBinding=ht,b.PropertyMixer=rp,b.QuadraticBezierCurve=yh,b.QuadraticBezierCurve3=xh,b.Quaternion=Vt,b.QuaternionKeyframeTrack=Ma,b.QuaternionLinearInterpolant=Ud,b.RED_GREEN_RGTC2_Format=36285,b.RED_RGTC1_Format=36283,b.REVISION=ei,b.RGBADepthPacking=3201,b.RGBAFormat=1023,b.RGBAIntegerFormat=1033,b.RGBA_ASTC_10x10_Format=37819,b.RGBA_ASTC_10x5_Format=37816,b.RGBA_ASTC_10x6_Format=37817,b.RGBA_ASTC_10x8_Format=37818,b.RGBA_ASTC_12x10_Format=37820,b.RGBA_ASTC_12x12_Format=37821,b.RGBA_ASTC_4x4_Format=37808,b.RGBA_ASTC_5x4_Format=37809,b.RGBA_ASTC_5x5_Format=37810,b.RGBA_ASTC_6x5_Format=37811,b.RGBA_ASTC_6x6_Format=37812,b.RGBA_ASTC_8x5_Format=37813,b.RGBA_ASTC_8x6_Format=37814,b.RGBA_ASTC_8x8_Format=37815,b.RGBA_BPTC_Format=36492,b.RGBA_ETC2_EAC_Format=37496,b.RGBA_PVRTC_2BPPV1_Format=35843,b.RGBA_PVRTC_4BPPV1_Format=35842,b.RGBA_S3TC_DXT1_Format=33777,b.RGBA_S3TC_DXT3_Format=33778,b.RGBA_S3TC_DXT5_Format=33779,b.RGB_BPTC_SIGNED_Format=36494,b.RGB_BPTC_UNSIGNED_Format=36495,b.RGB_ETC1_Format=36196,b.RGB_ETC2_Format=37492,b.RGB_PVRTC_2BPPV1_Format=35841,b.RGB_PVRTC_4BPPV1_Format=35840,b.RGB_S3TC_DXT1_Format=33776,b.RGFormat=1030,b.RGIntegerFormat=1031,b.RawShaderMaterial=Md,b.Ray=Tn,b.Raycaster=class{constructor(r,e,t=0,i=1/0){this.ray=new Tn(r,e),this.near=t,this.far=i,this.camera=null,this.layers=new Xr,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(r,e){this.ray.set(r,e)}setFromCamera(r,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(r.x,r.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(r.x,r.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(r,e=!0,t=[]){return zh(r,this,t,e),t.sort(ap),t}intersectObjects(r,e=!0,t=[]){for(let i=0,n=r.length;i<n;i++)zh(r[i],this,t,e);return t.sort(ap),t}},b.Rec709Primaries=Nt,b.RectAreaLight=Wd,b.RedFormat=1028,b.RedIntegerFormat=1029,b.ReinhardToneMapping=2,b.RenderTarget=Wn,b.RepeatWrapping=1e3,b.ReplaceStencilOp=7681,b.ReverseSubtractEquation=102,b.RingGeometry=Gl,b.SIGNED_RED_GREEN_RGTC2_Format=36286,b.SIGNED_RED_RGTC1_Format=36284,b.SRGBColorSpace=Dt,b.SRGBTransfer=$e,b.Scene=Lu,b.ShaderChunk=qe,b.ShaderLib=Di,b.ShaderMaterial=Pi,b.ShadowMaterial=bd,b.Shape=ds,b.ShapeGeometry=Vl,b.ShapePath=class{constructor(){this.type="ShapePath",this.color=new be,this.subPaths=[],this.currentPath=null}moveTo(r,e){return this.currentPath=new uo,this.subPaths.push(this.currentPath),this.currentPath.moveTo(r,e),this}lineTo(r,e){return this.currentPath.lineTo(r,e),this}quadraticCurveTo(r,e,t,i){return this.currentPath.quadraticCurveTo(r,e,t,i),this}bezierCurveTo(r,e,t,i,n,s){return this.currentPath.bezierCurveTo(r,e,t,i,n,s),this}splineThru(r){return this.currentPath.splineThru(r),this}toShapes(r){function e(v,g){const M=g.length;let y=!1;for(let x=M-1,T=0;T<M;x=T++){let A=g[x],C=g[T],D=C.x-A.x,V=C.y-A.y;if(Math.abs(V)>Number.EPSILON){if(V<0&&(A=g[T],D=-D,C=g[x],V=-V),v.y<A.y||v.y>C.y)continue;if(v.y===A.y){if(v.x===A.x)return!0}else{const k=V*(v.x-A.x)-D*(v.y-A.y);if(k===0)return!0;if(k<0)continue;y=!y}}else{if(v.y!==A.y)continue;if(C.x<=v.x&&v.x<=A.x||A.x<=v.x&&v.x<=C.x)return!0}}return y}const t=Un.isClockWise,i=this.subPaths;if(i.length===0)return[];let n,s,a;const o=[];if(i.length===1)return s=i[0],a=new ds,a.curves=s.curves,o.push(a),o;let l=!t(i[0].getPoints());l=r?!l:l;const c=[],h=[];let d,p,m=[],f=0;h[f]=void 0,m[f]=[];for(let v=0,g=i.length;v<g;v++)s=i[v],d=s.getPoints(),n=t(d),n=r?!n:n,n?(!l&&h[f]&&f++,h[f]={s:new ds,p:d},h[f].s.curves=s.curves,l&&f++,m[f]=[]):m[f].push({h:s,p:d[0]});if(!h[0])return function(v){const g=[];for(let M=0,y=v.length;M<y;M++){const x=v[M],T=new ds;T.curves=x.curves,g.push(T)}return g}(i);if(h.length>1){let v=!1,g=0;for(let M=0,y=h.length;M<y;M++)c[M]=[];for(let M=0,y=h.length;M<y;M++){const x=m[M];for(let T=0;T<x.length;T++){const A=x[T];let C=!0;for(let D=0;D<h.length;D++)e(A.p,h[D].p)&&(M!==D&&g++,C?(C=!1,c[D].push(A)):v=!0);C&&c[M].push(A)}}g>0&&v===!1&&(m=c)}for(let v=0,g=h.length;v<g;v++){a=h[v].s,o.push(a),p=m[v];for(let M=0,y=p.length;M<y;M++)a.holes.push(p[M].h)}return o}},b.ShapeUtils=Un,b.ShortType=1011,b.Skeleton=yl,b.SkeletonHelper=class extends Dn{constructor(r){const e=hp(r),t=new Ye,i=[],n=[],s=new be(0,0,1),a=new be(0,1,0);for(let o=0;o<e.length;o++){const l=e[o];l.parent&&l.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),n.push(s.r,s.g,s.b),n.push(a.r,a.g,a.b))}t.setAttribute("position",new Ee(i,3)),t.setAttribute("color",new Ee(n,3)),super(t,new gi({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=r,this.bones=e,this.matrix=r.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(r){const e=this.bones,t=this.geometry,i=t.getAttribute("position");kh.copy(this.root.matrixWorld).invert();for(let n=0,s=0;n<e.length;n++){const a=e[n];a.parent&&a.parent.isBone&&($l.multiplyMatrices(kh,a.matrixWorld),Cr.setFromMatrixPosition($l),i.setXYZ(s,Cr.x,Cr.y,Cr.z),$l.multiplyMatrices(kh,a.parent.matrixWorld),Cr.setFromMatrixPosition($l),i.setXYZ(s+1,Cr.x,Cr.y,Cr.z),s+=2)}t.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(r)}dispose(){this.geometry.dispose(),this.material.dispose()}},b.SkinnedMesh=Gu,b.Source=tn,b.Sphere=Wt,b.SphereGeometry=vo,b.Spherical=class{constructor(r=1,e=0,t=0){return this.radius=r,this.phi=e,this.theta=t,this}set(r,e,t){return this.radius=r,this.phi=e,this.theta=t,this}copy(r){return this.radius=r.radius,this.phi=r.phi,this.theta=r.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(r){return this.setFromCartesianCoords(r.x,r.y,r.z)}setFromCartesianCoords(r,e,t){return this.radius=Math.sqrt(r*r+e*e+t*t),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(r,t),this.phi=Math.acos(Mt(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}},b.SphericalHarmonics3=jd,b.SplineCurve=bh,b.SpotLight=zd,b.SpotLightHelper=class extends Xe{constructor(r,e){super(),this.light=r,this.matrix=r.matrixWorld,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const t=new Ye,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let s=0,a=1,o=32;s<o;s++,a++){const l=s/o*Math.PI*2,c=a/o*Math.PI*2;i.push(Math.cos(l),Math.sin(l),1,Math.cos(c),Math.sin(c),1)}t.setAttribute("position",new Ee(i,3));const n=new gi({fog:!1,toneMapped:!1});this.cone=new Dn(t,n),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const r=this.light.distance?this.light.distance:1e3,e=r*Math.tan(this.light.angle);this.cone.scale.set(e,e,r),cp.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(cp),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}},b.Sprite=Uu,b.SpriteMaterial=nh,b.SrcAlphaFactor=204,b.SrcAlphaSaturateFactor=210,b.SrcColorFactor=202,b.StaticCopyUsage=35046,b.StaticDrawUsage=35044,b.StaticReadUsage=35045,b.StereoCamera=class{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Tt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Tt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(r){const e=this._cache;if(e.focus!==r.focus||e.fov!==r.fov||e.aspect!==r.aspect*this.aspect||e.near!==r.near||e.far!==r.far||e.zoom!==r.zoom||e.eyeSep!==this.eyeSep){e.focus=r.focus,e.fov=r.fov,e.aspect=r.aspect*this.aspect,e.near=r.near,e.far=r.far,e.zoom=r.zoom,e.eyeSep=this.eyeSep,vs.copy(r.projectionMatrix);const t=e.eyeSep/2,i=t*e.near/e.focus,n=e.near*Math.tan(Mn*e.fov*.5)/e.zoom;let s,a;Kd.elements[12]=-t,$d.elements[12]=t,s=-n*e.aspect+i,a=n*e.aspect+i,vs.elements[0]=2*e.near/(a-s),vs.elements[8]=(a+s)/(a-s),this.cameraL.projectionMatrix.copy(vs),s=-n*e.aspect-i,a=n*e.aspect-i,vs.elements[0]=2*e.near/(a-s),vs.elements[8]=(a+s)/(a-s),this.cameraR.projectionMatrix.copy(vs)}this.cameraL.matrixWorld.copy(r.matrixWorld).multiply(Kd),this.cameraR.matrixWorld.copy(r.matrixWorld).multiply($d)}},b.StreamCopyUsage=35042,b.StreamDrawUsage=35040,b.StreamReadUsage=35041,b.StringKeyframeTrack=gs,b.SubtractEquation=101,b.SubtractiveBlending=3,b.TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},b.TangentSpaceNormalMap=0,b.TetrahedronGeometry=Wl,b.Texture=St,b.TextureLoader=class extends Ei{constructor(r){super(r)}load(r,e,t,i){const n=new St,s=new So(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(r,function(a){n.image=a,n.needsUpdate=!0,e!==void 0&&e(n)},t,i),n}},b.TorusGeometry=jl,b.TorusKnotGeometry=Xl,b.Triangle=ni,b.TriangleFanDrawMode=2,b.TriangleStripDrawMode=1,b.TrianglesDrawMode=0,b.TubeGeometry=ql,b.TwoPassDoubleSide=2,b.UVMapping=300,b.Uint16BufferAttribute=Xs,b.Uint32BufferAttribute=qs,b.Uint8BufferAttribute=class extends mt{constructor(r,e,t){super(new Uint8Array(r),e,t)}},b.Uint8ClampedBufferAttribute=class extends mt{constructor(r,e,t){super(new Uint8ClampedArray(r),e,t)}},b.Uniform=Bh,b.UniformsGroup=class extends Fi{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:Im++}),this.name="",this.usage=35044,this.uniforms=[]}add(r){return this.uniforms.push(r),this}remove(r){const e=this.uniforms.indexOf(r);return e!==-1&&this.uniforms.splice(e,1),this}setName(r){return this.name=r,this}setUsage(r){return this.usage=r,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(r){this.name=r.name,this.usage=r.usage;const e=r.uniforms;this.uniforms.length=0;for(let t=0,i=e.length;t<i;t++)this.uniforms.push(e[t].clone());return this}clone(){return new this.constructor().copy(this)}},b.UniformsLib=fe,b.UniformsUtils=Kr,b.UnsignedByteType=1009,b.UnsignedInt248Type=1020,b.UnsignedIntType=1014,b.UnsignedShort4444Type=1017,b.UnsignedShort5551Type=1018,b.UnsignedShortType=1012,b.VSMShadowMap=3,b.Vector2=te,b.Vector3=R,b.Vector4=dt,b.VectorKeyframeTrack=bo,b.VideoTexture=class extends St{constructor(r,e,t,i,n,s,a,o,l){super(r,e,t,i,n,s,a,o,l),this.isVideoTexture=!0,this.minFilter=s!==void 0?s:1006,this.magFilter=n!==void 0?n:1006,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in r&&r.requestVideoFrameCallback(function h(){c.needsUpdate=!0,r.requestVideoFrameCallback(h)})}clone(){return new this.constructor(this.image).copy(this)}update(){const r=this.image;!("requestVideoFrameCallback"in r)&&r.readyState>=r.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}},b.WebGL1Renderer=Ru,b.WebGL3DRenderTarget=class extends Li{constructor(r=1,e=1,t=1,i={}){super(r,e,i),this.isWebGL3DRenderTarget=!0,this.depth=t,this.texture=new Hr(null,r,e,t),this.texture.isRenderTargetTexture=!0}},b.WebGLArrayRenderTarget=class extends Li{constructor(r=1,e=1,t=1,i={}){super(r,e,i),this.isWebGLArrayRenderTarget=!0,this.depth=t,this.texture=new kr(null,r,e,t),this.texture.isRenderTargetTexture=!0}},b.WebGLCoordinateSystem=2e3,b.WebGLCubeRenderTarget=Ko,b.WebGLMultipleRenderTargets=class extends Li{constructor(r=1,e=1,t=1,i={}){super(r,e,i),this.isWebGLMultipleRenderTargets=!0;const n=this.texture;this.texture=[];for(let s=0;s<t;s++)this.texture[s]=n.clone(),this.texture[s].isRenderTargetTexture=!0}setSize(r,e,t=1){if(this.width!==r||this.height!==e||this.depth!==t){this.width=r,this.height=e,this.depth=t;for(let i=0,n=this.texture.length;i<n;i++)this.texture[i].image.width=r,this.texture[i].image.height=e,this.texture[i].image.depth=t;this.dispose()}this.viewport.set(0,0,r,e),this.scissor.set(0,0,r,e)}copy(r){this.dispose(),this.width=r.width,this.height=r.height,this.depth=r.depth,this.scissor.copy(r.scissor),this.scissorTest=r.scissorTest,this.viewport.copy(r.viewport),this.depthBuffer=r.depthBuffer,this.stencilBuffer=r.stencilBuffer,r.depthTexture!==null&&(this.depthTexture=r.depthTexture.clone()),this.texture.length=0;for(let e=0,t=r.texture.length;e<t;e++)this.texture[e]=r.texture[e].clone(),this.texture[e].isRenderTargetTexture=!0;return this}},b.WebGLRenderTarget=Li,b.WebGLRenderer=Cu,b.WebGLUtils=Tu,b.WebGPUCoordinateSystem=2001,b.WireframeGeometry=vd,b.WrapAroundEnding=2402,b.ZeroCurvatureEnding=2400,b.ZeroFactor=200,b.ZeroSlopeEnding=2401,b.ZeroStencilOp=0,b._SRGBAFormat=1035,b.createCanvasElement=Br,b.sRGBEncoding=3001});
